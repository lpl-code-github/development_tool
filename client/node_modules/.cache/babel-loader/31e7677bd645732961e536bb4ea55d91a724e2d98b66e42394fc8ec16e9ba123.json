{"ast":null,"code":"/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nexport var inBrowser = typeof window !== 'undefined';\nexport var UA = inBrowser && window.navigator.userAgent.toLowerCase();\nexport var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nfunction makeMap(str, expectsLowerCase) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? function (val) {\n    return map[val.toLowerCase()];\n  } : function (val) {\n    return map[val];\n  };\n}\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) return;\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\nfunction trigger(el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\nexport function antInput(Vue) {\n  return Vue.directive('ant-input', {\n    inserted: function inserted(el, binding, vnode) {\n      if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n        if (!binding.modifiers || !binding.modifiers.lazy) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n          // Safari < 10.2 & UIWebView doesn't fire compositionend when\n          // switching focus before confirming composition choice\n          // this also fixes the issue where some browsers e.g. iOS Chrome\n          // fires \"change\" instead of \"input\" on autocomplete.\n          el.addEventListener('change', onCompositionEnd);\n          /* istanbul ignore if */\n          if (isIE9) {\n            el.vmodel = true;\n          }\n        }\n      }\n    }\n  });\n}\nexport default {\n  install: function install(Vue) {\n    antInput(Vue);\n  }\n};","map":{"version":3,"names":["inBrowser","window","UA","navigator","userAgent","toLowerCase","isIE9","indexOf","makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","isTextInputType","onCompositionStart","e","target","composing","onCompositionEnd","trigger","el","type","document","createEvent","initEvent","dispatchEvent","addEventListener","activeElement","vmodel","antInput","Vue","directive","inserted","binding","vnode","tag","modifiers","lazy","install"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/_util/antInputDirective.js"],"sourcesContent":["/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nexport var inBrowser = typeof window !== 'undefined';\nexport var UA = inBrowser && window.navigator.userAgent.toLowerCase();\nexport var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nfunction makeMap(str, expectsLowerCase) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? function (val) {\n    return map[val.toLowerCase()];\n  } : function (val) {\n    return map[val];\n  };\n}\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd(e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) return;\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger(el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nexport function antInput(Vue) {\n  return Vue.directive('ant-input', {\n    inserted: function inserted(el, binding, vnode) {\n      if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n        if (!binding.modifiers || !binding.modifiers.lazy) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n          // Safari < 10.2 & UIWebView doesn't fire compositionend when\n          // switching focus before confirming composition choice\n          // this also fixes the issue where some browsers e.g. iOS Chrome\n          // fires \"change\" instead of \"input\" on autocomplete.\n          el.addEventListener('change', onCompositionEnd);\n          /* istanbul ignore if */\n          if (isIE9) {\n            el.vmodel = true;\n          }\n        }\n      }\n    }\n  });\n}\n\nexport default {\n  install: function install(Vue) {\n    antInput(Vue);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}