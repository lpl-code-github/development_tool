{"ast":null,"code":"export default {\n  name: \"OneLog\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    date: {\n      type: String,\n      required: true\n    },\n    logData: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      loadingMore: false,\n      showLoadingMore: false,\n      visible: false,\n      busy: false,\n      listData: [],\n      showData: [],\n      loadedCount: 0,\n      // 已经加载的数据数量\n      perPage: 5 // 每页的数据数量\n    };\n  },\n\n  computed: {\n    splitTime() {\n      return function (item) {\n        const [date, time] = item.split(' ');\n        return time;\n      };\n    }\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        this.visible = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    },\n    logData: {\n      handler: function (newVal, oldVal) {\n        this.loadedCount = 0;\n        this.showData = [];\n        this.listData = newVal;\n        const startIndex = this.loadedCount;\n        const endIndex = this.loadedCount + this.perPage;\n\n        // 根据需要加载的数据范围从数据源中截取数据\n        const newData = this.listData.slice(startIndex, endIndex);\n\n        // 将新加载的数据添加到已有数据列表中\n        this.showData = [...this.showData, ...newData];\n        // 更新已加载数据的数量\n        this.loadedCount = endIndex;\n        this.showLoadingMore = newData.length >= this.perPage;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n  },\n  methods: {\n    afterClose(e) {\n      this.$emit('updateModelStatus', false);\n    },\n    onLoadMore() {\n      // 开始加载\n      this.loadingMore = true;\n      // 模拟异步加载数据\n      setTimeout(() => {\n        const startIndex = this.loadedCount;\n        const endIndex = this.loadedCount + this.perPage;\n\n        // 根据需要加载的数据范围从数据源中截取数据\n        const newData = this.listData.slice(startIndex, endIndex);\n\n        // 将新加载的数据添加到已有数据列表中\n        this.showData = [...this.showData, ...newData];\n        // 更新已加载数据的数量\n        this.loadedCount = endIndex;\n        // 加载结束\n        this.loadingMore = false;\n        this.$nextTick(() => {\n          window.dispatchEvent(new Event('resize'));\n        });\n        this.showLoadingMore = newData.length >= this.perPage;\n      }, 500);\n    }\n  }\n};","map":{"version":3,"names":["name","props","openFlag","type","Boolean","required","date","String","logData","Array","data","loading","loadingMore","showLoadingMore","visible","busy","listData","showData","loadedCount","perPage","computed","splitTime","item","time","split","watch","handler","newVal","oldVal","deep","startIndex","endIndex","newData","slice","length","mounted","methods","afterClose","e","$emit","onLoadMore","setTimeout","$nextTick","window","dispatchEvent","Event"],"sources":["src/components/log/OneLog.vue"],"sourcesContent":["<template>\n  <div>\n    <a-modal\n        v-model=\"visible\"\n        :title=\"date\"\n        on-ok=\"handleOk\"\n        :footer=\"null\"\n        :afterClose=\"afterClose\"\n        :maskClosable=\"true\">\n\n\n      <a-list\n          class=\"demo-loadmore-list\"\n          :loading=\"loading\"\n          item-layout=\"horizontal\"\n          :data-source=\"showData\">\n\n        <div\n            v-if=\"showLoadingMore\"\n            slot=\"loadMore\"\n            :style=\"{ textAlign: 'center', marginTop: '12px', height: '32px', lineHeight: '32px' }\"\n        >\n          <a-spin v-if=\"loadingMore\"/>\n          <a-button v-else @click=\"onLoadMore\">\n            loading more\n          </a-button>\n        </div>\n\n        <a-list-item slot=\"renderItem\" slot-scope=\"item, index\">\n          <a-popover placement=\"bottom\" slot=\"actions\">\n            <template slot=\"content\">\n              <p>{{ item.message ? item.message : '没有记录' }}</p>\n            </template>\n            <a v-if=\"item.status_code !== 200\" size=\"small\">\n              报错信息\n            </a>\n          </a-popover>\n          <a-list-item-meta>\n              <span slot=\"title\" style=\"display: flex;justify-content: space-between\">\n                <span>\n                   <a-tag :color=\"item.status_code === 200? '#1ba81e' :'#f50' \">\n                  {{ item.status_code }}\n                  </a-tag>\n\n                  <span>{{ item.type }}</span>\n                </span>\n                <span style=\"color: #a6a3a3\">\n                    {{ splitTime(item.created_at) }}\n                </span>\n              </span>\n          </a-list-item-meta>\n          {{ item.name }}\n        </a-list-item>\n        <div v-if=\"loading && !busy\" class=\"demo-loading-container\">\n          <a-spin/>\n        </div>\n      </a-list>\n\n    </a-modal>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"OneLog\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    date: {\n      type: String,\n      required: true\n    },\n    logData: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      loadingMore: false,\n      showLoadingMore: false,\n      visible: false,\n      busy: false,\n      listData: [],\n      showData: [],\n      loadedCount: 0, // 已经加载的数据数量\n      perPage: 5, // 每页的数据数量\n    };\n  },\n  computed: {\n    splitTime() {\n      return function (item) {\n        const [date, time] = item.split(' ');\n        return time;\n      }\n    }\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        this.visible = newVal\n      },\n      // 深度观察监听\n      deep: true\n    },\n    logData: {\n      handler: function (newVal, oldVal) {\n        this.loadedCount = 0\n        this.showData = []\n        this.listData = newVal\n\n        const startIndex = this.loadedCount;\n        const endIndex = this.loadedCount + this.perPage;\n\n        // 根据需要加载的数据范围从数据源中截取数据\n        const newData = this.listData.slice(startIndex, endIndex);\n\n        // 将新加载的数据添加到已有数据列表中\n        this.showData = [...this.showData, ...newData];\n        // 更新已加载数据的数量\n        this.loadedCount = endIndex;\n\n        this.showLoadingMore = newData.length >= this.perPage;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag\n  },\n  methods: {\n    afterClose(e) {\n      this.$emit('updateModelStatus', false)\n    },\n    onLoadMore() {\n      // 开始加载\n      this.loadingMore = true;\n      // 模拟异步加载数据\n      setTimeout(() => {\n        const startIndex = this.loadedCount;\n        const endIndex = this.loadedCount + this.perPage;\n\n        // 根据需要加载的数据范围从数据源中截取数据\n        const newData = this.listData.slice(startIndex, endIndex);\n\n        // 将新加载的数据添加到已有数据列表中\n        this.showData = [...this.showData, ...newData];\n        // 更新已加载数据的数量\n        this.loadedCount = endIndex;\n        // 加载结束\n        this.loadingMore = false;\n        this.$nextTick(() => {\n          window.dispatchEvent(new Event('resize'));\n        });\n\n        this.showLoadingMore = newData.length >= this.perPage;\n      }, 500);\n    },\n  }\n};\n</script>\n<style scoped>\n/deep/ .ant-modal-body {\n  max-height: 400px;\n  overflow-y: auto;\n}\n</style>\n"],"mappings":"AA8DA;EACAA,IAAA;EACAC,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,QAAA;IACA;IACAC,IAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;IACAG,OAAA;MACAL,IAAA,EAAAM,KAAA;MACAJ,QAAA;IACA;EACA;EACAK,KAAA;IACA;MACAC,OAAA;MACAC,WAAA;MACAC,eAAA;MACAC,OAAA;MACAC,IAAA;MACAC,QAAA;MACAC,QAAA;MACAC,WAAA;MAAA;MACAC,OAAA;IACA;EACA;;EACAC,QAAA;IACAC,UAAA;MACA,iBAAAC,IAAA;QACA,OAAAhB,IAAA,EAAAiB,IAAA,IAAAD,IAAA,CAAAE,KAAA;QACA,OAAAD,IAAA;MACA;IACA;EACA;EACAE,KAAA;IACAvB,QAAA;MACAwB,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACA,KAAAd,OAAA,GAAAa,MAAA;MACA;MACA;MACAE,IAAA;IACA;IACArB,OAAA;MACAkB,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACA,KAAAV,WAAA;QACA,KAAAD,QAAA;QACA,KAAAD,QAAA,GAAAW,MAAA;QAEA,MAAAG,UAAA,QAAAZ,WAAA;QACA,MAAAa,QAAA,QAAAb,WAAA,QAAAC,OAAA;;QAEA;QACA,MAAAa,OAAA,QAAAhB,QAAA,CAAAiB,KAAA,CAAAH,UAAA,EAAAC,QAAA;;QAEA;QACA,KAAAd,QAAA,YAAAA,QAAA,KAAAe,OAAA;QACA;QACA,KAAAd,WAAA,GAAAa,QAAA;QAEA,KAAAlB,eAAA,GAAAmB,OAAA,CAAAE,MAAA,SAAAf,OAAA;MACA;MACA;MACAU,IAAA;IACA;EACA;EACAM,QAAA;IACA,KAAArB,OAAA,QAAAZ,QAAA;EACA;EACAkC,OAAA;IACAC,WAAAC,CAAA;MACA,KAAAC,KAAA;IACA;IACAC,WAAA;MACA;MACA,KAAA5B,WAAA;MACA;MACA6B,UAAA;QACA,MAAAX,UAAA,QAAAZ,WAAA;QACA,MAAAa,QAAA,QAAAb,WAAA,QAAAC,OAAA;;QAEA;QACA,MAAAa,OAAA,QAAAhB,QAAA,CAAAiB,KAAA,CAAAH,UAAA,EAAAC,QAAA;;QAEA;QACA,KAAAd,QAAA,YAAAA,QAAA,KAAAe,OAAA;QACA;QACA,KAAAd,WAAA,GAAAa,QAAA;QACA;QACA,KAAAnB,WAAA;QACA,KAAA8B,SAAA;UACAC,MAAA,CAAAC,aAAA,KAAAC,KAAA;QACA;QAEA,KAAAhC,eAAA,GAAAmB,OAAA,CAAAE,MAAA,SAAAf,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}