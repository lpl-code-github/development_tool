{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport { defineComponent, computed, ref } from 'vue';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport useStyle from './style';\nimport { useLocaleReceiver } from '../locale/LocaleReceiver';\nimport { withInstall } from '../_util/type';\nimport Spin from '../spin';\nimport Button from '../button';\nimport { ReloadOutlined } from '@ant-design/icons-vue';\nimport { useToken } from '../theme/internal';\nimport { QRCodeCanvas, QRCodeSVG } from './QRCode';\nimport warning from '../_util/warning';\nimport { qrcodeProps } from './interface';\nconst QRCode = defineComponent({\n  name: 'AQrcode',\n  inheritAttrs: false,\n  props: qrcodeProps(),\n  emits: ['refresh'],\n  setup(props, _ref) {\n    let {\n      emit,\n      attrs,\n      expose\n    } = _ref;\n    if (process.env.NODE_ENV !== 'production') {\n      warning(!(props.icon && props.errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.');\n    }\n    const [locale] = useLocaleReceiver('QRCode');\n    const {\n      prefixCls\n    } = useConfigInject('qrcode', props);\n    const [wrapSSR, hashId] = useStyle(prefixCls);\n    const [, token] = useToken();\n    const qrCodeCanvas = ref();\n    expose({\n      toDataURL: (type, quality) => {\n        var _a;\n        return (_a = qrCodeCanvas.value) === null || _a === void 0 ? void 0 : _a.toDataURL(type, quality);\n      }\n    });\n    const qrCodeProps = computed(() => {\n      const {\n        value,\n        icon = '',\n        size = 160,\n        iconSize = 40,\n        color = token.value.colorText,\n        bgColor = 'transparent',\n        errorLevel = 'M'\n      } = props;\n      const imageSettings = {\n        src: icon,\n        x: undefined,\n        y: undefined,\n        height: iconSize,\n        width: iconSize,\n        excavate: true\n      };\n      return {\n        value,\n        size: size - (token.value.paddingSM + token.value.lineWidth) * 2,\n        level: errorLevel,\n        bgColor,\n        fgColor: color,\n        imageSettings: icon ? imageSettings : undefined\n      };\n    });\n    return () => {\n      const pre = prefixCls.value;\n      return wrapSSR(_createVNode(\"div\", _objectSpread(_objectSpread({}, attrs), {}, {\n        \"style\": [attrs.style, {\n          width: `${props.size}px`,\n          height: `${props.size}px`,\n          backgroundColor: qrCodeProps.value.bgColor\n        }],\n        \"class\": [hashId.value, pre, {\n          [`${pre}-borderless`]: !props.bordered\n        }]\n      }), [props.status !== 'active' && _createVNode(\"div\", {\n        \"class\": `${pre}-mask`\n      }, [props.status === 'loading' && _createVNode(Spin, null, null), props.status === 'expired' && _createVNode(_Fragment, null, [_createVNode(\"p\", {\n        \"class\": `${pre}-expired`\n      }, [locale.value.expired]), _createVNode(Button, {\n        \"type\": \"link\",\n        \"onClick\": e => emit('refresh', e)\n      }, {\n        default: () => [locale.value.refresh],\n        icon: () => _createVNode(ReloadOutlined, null, null)\n      })])]), props.type === 'canvas' ? _createVNode(QRCodeCanvas, _objectSpread({\n        \"ref\": qrCodeCanvas\n      }, qrCodeProps.value), null) : _createVNode(QRCodeSVG, qrCodeProps.value, null)]));\n    };\n  }\n});\nexport default withInstall(QRCode);","map":{"version":3,"names":["_objectSpread","resolveDirective","_resolveDirective","Fragment","_Fragment","createVNode","_createVNode","defineComponent","computed","ref","useConfigInject","useStyle","useLocaleReceiver","withInstall","Spin","Button","ReloadOutlined","useToken","QRCodeCanvas","QRCodeSVG","warning","qrcodeProps","QRCode","name","inheritAttrs","props","emits","setup","_ref","emit","attrs","expose","process","env","NODE_ENV","icon","errorLevel","locale","prefixCls","wrapSSR","hashId","token","qrCodeCanvas","toDataURL","type","quality","_a","value","qrCodeProps","size","iconSize","color","colorText","bgColor","imageSettings","src","x","undefined","y","height","width","excavate","paddingSM","lineWidth","level","fgColor","pre","style","backgroundColor","bordered","status","expired","e","default","refresh"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/qrcode/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport { defineComponent, computed, ref } from 'vue';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport useStyle from './style';\nimport { useLocaleReceiver } from '../locale/LocaleReceiver';\nimport { withInstall } from '../_util/type';\nimport Spin from '../spin';\nimport Button from '../button';\nimport { ReloadOutlined } from '@ant-design/icons-vue';\nimport { useToken } from '../theme/internal';\nimport { QRCodeCanvas, QRCodeSVG } from './QRCode';\nimport warning from '../_util/warning';\nimport { qrcodeProps } from './interface';\nconst QRCode = defineComponent({\n  name: 'AQrcode',\n  inheritAttrs: false,\n  props: qrcodeProps(),\n  emits: ['refresh'],\n  setup(props, _ref) {\n    let {\n      emit,\n      attrs,\n      expose\n    } = _ref;\n    if (process.env.NODE_ENV !== 'production') {\n      warning(!(props.icon && props.errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.');\n    }\n    const [locale] = useLocaleReceiver('QRCode');\n    const {\n      prefixCls\n    } = useConfigInject('qrcode', props);\n    const [wrapSSR, hashId] = useStyle(prefixCls);\n    const [, token] = useToken();\n    const qrCodeCanvas = ref();\n    expose({\n      toDataURL: (type, quality) => {\n        var _a;\n        return (_a = qrCodeCanvas.value) === null || _a === void 0 ? void 0 : _a.toDataURL(type, quality);\n      }\n    });\n    const qrCodeProps = computed(() => {\n      const {\n        value,\n        icon = '',\n        size = 160,\n        iconSize = 40,\n        color = token.value.colorText,\n        bgColor = 'transparent',\n        errorLevel = 'M'\n      } = props;\n      const imageSettings = {\n        src: icon,\n        x: undefined,\n        y: undefined,\n        height: iconSize,\n        width: iconSize,\n        excavate: true\n      };\n      return {\n        value,\n        size: size - (token.value.paddingSM + token.value.lineWidth) * 2,\n        level: errorLevel,\n        bgColor,\n        fgColor: color,\n        imageSettings: icon ? imageSettings : undefined\n      };\n    });\n    return () => {\n      const pre = prefixCls.value;\n      return wrapSSR(_createVNode(\"div\", _objectSpread(_objectSpread({}, attrs), {}, {\n        \"style\": [attrs.style, {\n          width: `${props.size}px`,\n          height: `${props.size}px`,\n          backgroundColor: qrCodeProps.value.bgColor\n        }],\n        \"class\": [hashId.value, pre, {\n          [`${pre}-borderless`]: !props.bordered\n        }]\n      }), [props.status !== 'active' && _createVNode(\"div\", {\n        \"class\": `${pre}-mask`\n      }, [props.status === 'loading' && _createVNode(Spin, null, null), props.status === 'expired' && _createVNode(_Fragment, null, [_createVNode(\"p\", {\n        \"class\": `${pre}-expired`\n      }, [locale.value.expired]), _createVNode(Button, {\n        \"type\": \"link\",\n        \"onClick\": e => emit('refresh', e)\n      }, {\n        default: () => [locale.value.refresh],\n        icon: () => _createVNode(ReloadOutlined, null, null)\n      })])]), props.type === 'canvas' ? _createVNode(QRCodeCanvas, _objectSpread({\n        \"ref\": qrCodeCanvas\n      }, qrCodeProps.value), null) : _createVNode(QRCodeSVG, qrCodeProps.value, null)]));\n    };\n  }\n});\nexport default withInstall(QRCode);"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,SAASC,gBAAgB,IAAIC,iBAAiB,EAAEC,QAAQ,IAAIC,SAAS,EAAEC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AAC/G,SAASC,eAAe,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACpD,OAAOC,eAAe,MAAM,0CAA0C;AACtE,OAAOC,QAAQ,MAAM,SAAS;AAC9B,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,YAAY,EAAEC,SAAS,QAAQ,UAAU;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,WAAW,QAAQ,aAAa;AACzC,MAAMC,MAAM,GAAGf,eAAe,CAAC;EAC7BgB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAEJ,WAAW,CAAC,CAAC;EACpBK,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,KAAKA,CAACF,KAAK,EAAEG,IAAI,EAAE;IACjB,IAAI;MACFC,IAAI;MACJC,KAAK;MACLC;IACF,CAAC,GAAGH,IAAI;IACR,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzCd,OAAO,CAAC,EAAEK,KAAK,CAACU,IAAI,IAAIV,KAAK,CAACW,UAAU,KAAK,GAAG,CAAC,EAAE,QAAQ,EAAE,+GAA+G,CAAC;IAC/K;IACA,MAAM,CAACC,MAAM,CAAC,GAAGzB,iBAAiB,CAAC,QAAQ,CAAC;IAC5C,MAAM;MACJ0B;IACF,CAAC,GAAG5B,eAAe,CAAC,QAAQ,EAAEe,KAAK,CAAC;IACpC,MAAM,CAACc,OAAO,EAAEC,MAAM,CAAC,GAAG7B,QAAQ,CAAC2B,SAAS,CAAC;IAC7C,MAAM,GAAGG,KAAK,CAAC,GAAGxB,QAAQ,CAAC,CAAC;IAC5B,MAAMyB,YAAY,GAAGjC,GAAG,CAAC,CAAC;IAC1BsB,MAAM,CAAC;MACLY,SAAS,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;QAC5B,IAAIC,EAAE;QACN,OAAO,CAACA,EAAE,GAAGJ,YAAY,CAACK,KAAK,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACH,SAAS,CAACC,IAAI,EAAEC,OAAO,CAAC;MACnG;IACF,CAAC,CAAC;IACF,MAAMG,WAAW,GAAGxC,QAAQ,CAAC,MAAM;MACjC,MAAM;QACJuC,KAAK;QACLZ,IAAI,GAAG,EAAE;QACTc,IAAI,GAAG,GAAG;QACVC,QAAQ,GAAG,EAAE;QACbC,KAAK,GAAGV,KAAK,CAACM,KAAK,CAACK,SAAS;QAC7BC,OAAO,GAAG,aAAa;QACvBjB,UAAU,GAAG;MACf,CAAC,GAAGX,KAAK;MACT,MAAM6B,aAAa,GAAG;QACpBC,GAAG,EAAEpB,IAAI;QACTqB,CAAC,EAAEC,SAAS;QACZC,CAAC,EAAED,SAAS;QACZE,MAAM,EAAET,QAAQ;QAChBU,KAAK,EAAEV,QAAQ;QACfW,QAAQ,EAAE;MACZ,CAAC;MACD,OAAO;QACLd,KAAK;QACLE,IAAI,EAAEA,IAAI,GAAG,CAACR,KAAK,CAACM,KAAK,CAACe,SAAS,GAAGrB,KAAK,CAACM,KAAK,CAACgB,SAAS,IAAI,CAAC;QAChEC,KAAK,EAAE5B,UAAU;QACjBiB,OAAO;QACPY,OAAO,EAAEd,KAAK;QACdG,aAAa,EAAEnB,IAAI,GAAGmB,aAAa,GAAGG;MACxC,CAAC;IACH,CAAC,CAAC;IACF,OAAO,MAAM;MACX,MAAMS,GAAG,GAAG5B,SAAS,CAACS,KAAK;MAC3B,OAAOR,OAAO,CAACjC,YAAY,CAAC,KAAK,EAAEN,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE8B,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;QAC7E,OAAO,EAAE,CAACA,KAAK,CAACqC,KAAK,EAAE;UACrBP,KAAK,EAAG,GAAEnC,KAAK,CAACwB,IAAK,IAAG;UACxBU,MAAM,EAAG,GAAElC,KAAK,CAACwB,IAAK,IAAG;UACzBmB,eAAe,EAAEpB,WAAW,CAACD,KAAK,CAACM;QACrC,CAAC,CAAC;QACF,OAAO,EAAE,CAACb,MAAM,CAACO,KAAK,EAAEmB,GAAG,EAAE;UAC3B,CAAE,GAAEA,GAAI,aAAY,GAAG,CAACzC,KAAK,CAAC4C;QAChC,CAAC;MACH,CAAC,CAAC,EAAE,CAAC5C,KAAK,CAAC6C,MAAM,KAAK,QAAQ,IAAIhE,YAAY,CAAC,KAAK,EAAE;QACpD,OAAO,EAAG,GAAE4D,GAAI;MAClB,CAAC,EAAE,CAACzC,KAAK,CAAC6C,MAAM,KAAK,SAAS,IAAIhE,YAAY,CAACQ,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAEW,KAAK,CAAC6C,MAAM,KAAK,SAAS,IAAIhE,YAAY,CAACF,SAAS,EAAE,IAAI,EAAE,CAACE,YAAY,CAAC,GAAG,EAAE;QAC/I,OAAO,EAAG,GAAE4D,GAAI;MAClB,CAAC,EAAE,CAAC7B,MAAM,CAACU,KAAK,CAACwB,OAAO,CAAC,CAAC,EAAEjE,YAAY,CAACS,MAAM,EAAE;QAC/C,MAAM,EAAE,MAAM;QACd,SAAS,EAAEyD,CAAC,IAAI3C,IAAI,CAAC,SAAS,EAAE2C,CAAC;MACnC,CAAC,EAAE;QACDC,OAAO,EAAEA,CAAA,KAAM,CAACpC,MAAM,CAACU,KAAK,CAAC2B,OAAO,CAAC;QACrCvC,IAAI,EAAEA,CAAA,KAAM7B,YAAY,CAACU,cAAc,EAAE,IAAI,EAAE,IAAI;MACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAES,KAAK,CAACmB,IAAI,KAAK,QAAQ,GAAGtC,YAAY,CAACY,YAAY,EAAElB,aAAa,CAAC;QACzE,KAAK,EAAE0C;MACT,CAAC,EAAEM,WAAW,CAACD,KAAK,CAAC,EAAE,IAAI,CAAC,GAAGzC,YAAY,CAACa,SAAS,EAAE6B,WAAW,CAACD,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;EACH;AACF,CAAC,CAAC;AACF,eAAelC,WAAW,CAACS,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}