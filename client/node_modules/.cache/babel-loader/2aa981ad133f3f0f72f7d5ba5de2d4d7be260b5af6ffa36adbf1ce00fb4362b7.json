{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport Cell from '../Cell';\nimport { useInjectTable } from '../context/TableContext';\nimport { getCellFixedInfo } from '../utils/fixUtil';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport DragHandleVue from './DragHandle';\nexport default defineComponent({\n  name: 'HeaderRow',\n  props: ['cells', 'stickyOffsets', 'flattenColumns', 'rowComponent', 'cellComponent', 'index', 'customHeaderRow'],\n  setup(props) {\n    const tableContext = useInjectTable();\n    return () => {\n      const {\n        prefixCls,\n        direction\n      } = tableContext;\n      const {\n        cells,\n        stickyOffsets,\n        flattenColumns,\n        rowComponent: RowComponent,\n        cellComponent: CellComponent,\n        customHeaderRow,\n        index\n      } = props;\n      let rowProps;\n      if (customHeaderRow) {\n        rowProps = customHeaderRow(cells.map(cell => cell.column), index);\n      }\n      const columnsKey = getColumnsKey(cells.map(cell => cell.column));\n      return _createVNode(RowComponent, rowProps, {\n        default: () => [cells.map((cell, cellIndex) => {\n          const {\n            column\n          } = cell;\n          const fixedInfo = getCellFixedInfo(cell.colStart, cell.colEnd, flattenColumns, stickyOffsets, direction);\n          let additionalProps;\n          if (column && column.customHeaderCell) {\n            additionalProps = cell.column.customHeaderCell(column);\n          }\n          const col = column;\n          return _createVNode(Cell, _objectSpread(_objectSpread(_objectSpread({}, cell), {}, {\n            \"cellType\": \"header\",\n            \"ellipsis\": column.ellipsis,\n            \"align\": column.align,\n            \"component\": CellComponent,\n            \"prefixCls\": prefixCls,\n            \"key\": columnsKey[cellIndex]\n          }, fixedInfo), {}, {\n            \"additionalProps\": additionalProps,\n            \"rowType\": \"header\",\n            \"column\": column\n          }), {\n            default: () => column.title,\n            dragHandle: () => col.resizable ? _createVNode(DragHandleVue, {\n              \"prefixCls\": prefixCls,\n              \"width\": col.width,\n              \"minWidth\": col.minWidth,\n              \"maxWidth\": col.maxWidth,\n              \"column\": col\n            }, null) : null\n          });\n        })]\n      });\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","resolveDirective","_resolveDirective","createVNode","_createVNode","defineComponent","Cell","useInjectTable","getCellFixedInfo","getColumnsKey","DragHandleVue","name","props","setup","tableContext","prefixCls","direction","cells","stickyOffsets","flattenColumns","rowComponent","RowComponent","cellComponent","CellComponent","customHeaderRow","index","rowProps","map","cell","column","columnsKey","default","cellIndex","fixedInfo","colStart","colEnd","additionalProps","customHeaderCell","col","ellipsis","align","title","dragHandle","resizable","width","minWidth","maxWidth"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-table/Header/HeaderRow.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport Cell from '../Cell';\nimport { useInjectTable } from '../context/TableContext';\nimport { getCellFixedInfo } from '../utils/fixUtil';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport DragHandleVue from './DragHandle';\nexport default defineComponent({\n  name: 'HeaderRow',\n  props: ['cells', 'stickyOffsets', 'flattenColumns', 'rowComponent', 'cellComponent', 'index', 'customHeaderRow'],\n  setup(props) {\n    const tableContext = useInjectTable();\n    return () => {\n      const {\n        prefixCls,\n        direction\n      } = tableContext;\n      const {\n        cells,\n        stickyOffsets,\n        flattenColumns,\n        rowComponent: RowComponent,\n        cellComponent: CellComponent,\n        customHeaderRow,\n        index\n      } = props;\n      let rowProps;\n      if (customHeaderRow) {\n        rowProps = customHeaderRow(cells.map(cell => cell.column), index);\n      }\n      const columnsKey = getColumnsKey(cells.map(cell => cell.column));\n      return _createVNode(RowComponent, rowProps, {\n        default: () => [cells.map((cell, cellIndex) => {\n          const {\n            column\n          } = cell;\n          const fixedInfo = getCellFixedInfo(cell.colStart, cell.colEnd, flattenColumns, stickyOffsets, direction);\n          let additionalProps;\n          if (column && column.customHeaderCell) {\n            additionalProps = cell.column.customHeaderCell(column);\n          }\n          const col = column;\n          return _createVNode(Cell, _objectSpread(_objectSpread(_objectSpread({}, cell), {}, {\n            \"cellType\": \"header\",\n            \"ellipsis\": column.ellipsis,\n            \"align\": column.align,\n            \"component\": CellComponent,\n            \"prefixCls\": prefixCls,\n            \"key\": columnsKey[cellIndex]\n          }, fixedInfo), {}, {\n            \"additionalProps\": additionalProps,\n            \"rowType\": \"header\",\n            \"column\": column\n          }), {\n            default: () => column.title,\n            dragHandle: () => col.resizable ? _createVNode(DragHandleVue, {\n              \"prefixCls\": prefixCls,\n              \"width\": col.width,\n              \"minWidth\": col.minWidth,\n              \"maxWidth\": col.maxWidth,\n              \"column\": col\n            }, null) : null\n          });\n        })]\n      });\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}