{"ast":null,"code":"import Markdown from \"@/components/code/Markdown\";\nimport { getSlateDoc } from \"@/api/request\";\nexport default {\n  name: 'SlateGenerator',\n  components: {\n    Markdown\n  },\n  data() {\n    return {\n      componentKey: 0,\n      docContent: \"\",\n      loading: false,\n      buttonConfirmIsDisabled: true,\n      controllerLists: [],\n      selectedController: null,\n      existSelectController: false\n    };\n  },\n  created() {\n    this.$bus.$on('markdownInput', newVal => {\n      this.docContent = newVal;\n    });\n    this.getControllerLists();\n  },\n  beforeDestroy() {\n    if (this.docContent === \"\") {\n      localStorage.removeItem(\"selected_controller\");\n    }\n  },\n  mounted() {\n    // 从缓存中拿编辑器中的的doc\n    var editDoc = localStorage.getItem(\"edit_doc\");\n    if (editDoc !== null && editDoc !== \"\") {\n      this.docContent = editDoc;\n    }\n    // 从缓存中拿编辑器中拿已选择的controller\n    var selectedController = localStorage.getItem(\"selected_controller\");\n    if (selectedController !== null && selectedController !== \"\") {\n      if (editDoc !== null && editDoc === \"\") {\n        this.docContent = editDoc;\n        this.docContent = editDoc;\n        this.existSelectController = false;\n      } else {\n        this.existSelectController = true;\n        this.selectedController = selectedController;\n      }\n    }\n  },\n  methods: {\n    // 获取默认文档\n    getDefaultClick() {\n      if (this.docContent !== \"\") {\n        this.buttonConfirmIsDisabled = false;\n        return;\n      }\n      this.existSelectController = false;\n      this.selectedController = \"\";\n      this.buttonConfirmIsDisabled = true;\n      localStorage.removeItem(\"selected_controller\");\n      this.handleGetSlateDoc();\n    },\n    // controller选择器完成选择触发\n    handleSelect(value, option) {\n      localStorage.setItem(\"selected_controller\", value);\n      if (this.docContent !== \"\") {\n        var confirm = this.$confirm({\n          title: '提示',\n          content: '编辑器中还有内容，确认生成新的文档吗？',\n          okText: '确认',\n          cancelText: '取消',\n          onOk: () => {\n            // 使用箭头函数来保持this的指向\n            this.existSelectController = true;\n            this.selectedController = value;\n            this.handleGetSlateDoc(value);\n            confirm.destroy();\n          },\n          onCancel() {\n            confirm.destroy();\n          }\n        });\n        return;\n      }\n      this.existSelectController = true;\n      this.selectedController = value;\n      this.handleGetSlateDoc(value);\n    },\n    // 选择器取消事件\n    confirm(e) {\n      this.componentKey += 1;\n      this.existSelectController = false;\n      localStorage.removeItem(\"selected_controller\");\n      this.handleGetSlateDoc();\n    },\n    cancel(e) {},\n    // 选择器搜索\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    /*\n      一些请求事件\n     */\n    // 生成slate文档\n    handleGetSlateDoc(controller) {\n      this.loading = true;\n      var param = \"\";\n      if (controller !== undefined) {\n        param = \"?controller=\" + controller;\n      }\n      this.$request.getSlateDoc(param).then(res => {\n        if (res.status === 200) {\n          this.docContent = res.data;\n        }\n        this.loading = false;\n      });\n    },\n    // 获取r1所有controller\n    getControllerLists() {\n      var params = \"?type=controller\";\n      this.$request.getFileLists(params).then(res => {\n        if (res.status === 200) {\n          this.controllerLists = res.data;\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}