{"ast":null,"code":"import Code from \"@/components/code/Code\";\nimport clipboard from \"clipboard\";\nimport { getFileLists } from \"@/api/request\";\nexport default {\n  name: \"CodeGenerator\",\n  components: {\n    Code\n  },\n  data() {\n    return {\n      entityLists: [],\n      selectEntity: \"\",\n      selectedType: \"dto\",\n      codeText: \"\",\n      copySuccess: false,\n      loading: false\n    };\n  },\n  created() {\n    this.getEntityLists();\n  },\n  methods: {\n    // entity选择器发生变化时触发\n    handleChange(value) {\n      this.loading = true; // 打开code显示 的loading\n      this.selectEntity = value;\n      this.$request.generateCode(this.selectEntity, this.selectedType).then(res => {\n        if (res.status === 200) {\n          this.codeText = res.data;\n        }\n        this.loading = false;\n      });\n    },\n    // entity选择器搜索\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    /**\n     * 一些请求事件\n     */\n    // 获取r1所有的entity列表\n    getEntityLists() {\n      var params = \"?type=entity\";\n      this.$request.getFileLists(params).then(res => {\n        if (res.status === 200) {\n          this.entityLists = res.data;\n        }\n      });\n    },\n    // radio发生变化 也就是需要生成代码类型发生变化时调用\n    handleChangeType(e) {\n      this.loading = true; // 打开code显示 的loading\n\n      this.selectedType = e.target.value;\n      if (this.selectEntity !== \"\") {\n        this.$request.generateCode(this.selectEntity, this.selectedType).then(res => {\n          if (res.status === 200) {\n            this.codeText = res.data;\n            this.loading = false;\n          } else {\n            this.loading = false;\n          }\n        });\n      } else {\n        this.$message.warning(\"请先选择实体类\");\n        this.loading = false;\n      }\n    },\n    // 复制功能\n    copyMessage() {\n      let _this = this;\n      if (_this.codeText === \"\") {\n        _this.$message.warn(\"没有可以复制的内容\");\n        return;\n      }\n      _this.copySuccess = false;\n      let clipboardObj = new clipboard(\".code-data-copy\");\n      clipboardObj.on(\"success\", function (e) {\n        _this.copySuccess = true;\n        _this.$message.success(\"已复制到剪贴板\");\n        clipboardObj.destroy(); // 销毁,避免多次点击重复出现\n      });\n\n      clipboardObj.on(\"error\", function () {\n        _this.$message.error(\"复制错误\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["Code","clipboard","getFileLists","name","components","data","entityLists","selectEntity","selectedType","codeText","copySuccess","loading","created","getEntityLists","methods","handleChange","value","$request","generateCode","then","res","status","filterOption","input","option","componentOptions","children","text","toLowerCase","indexOf","params","handleChangeType","e","target","$message","warning","copyMessage","_this","warn","clipboardObj","on","success","destroy","error"],"sources":["src/views/CodeGenerator.vue"],"sourcesContent":["<template>\n  <div>\n    <a-select\n        show-search\n        placeholder=\"选择Entity\"\n        option-filter-prop=\"children\"\n        style=\"width: 200px;margin: 20px 20px 20px 0\"\n        :filter-option=\"filterOption\"\n        @change=\"handleChange\"\n    >\n      <a-select-option v-for=\"(item,index) in entityLists\" :key=\"index\" :value=\"item\">\n        {{item}}\n      </a-select-option>\n    </a-select>\n\n\n    <a-radio-group :value=\"selectedType\" size=\"default\" @change=\"handleChangeType\" buttonStyle=\"solid\" v-model=\"selectedType\">\n      <a-radio-button value=\"dto\">\n        Dto\n      </a-radio-button>\n      <a-radio-button value=\"factory\">\n        Factory\n      </a-radio-button>\n      <a-radio-button value=\"controller\">\n        Controller\n      </a-radio-button>\n      <a-radio-button value=\"service\">\n        Service\n      </a-radio-button>\n    </a-radio-group>\n\n    <a-button\n        class=\"copy-btn code-data-copy\"\n        icon=\"copy\"\n        v-if=\"codeText!==''\"\n        style=\"float: right;margin-top: 20px\"\n        @click=\"copyMessage\"\n        data-clipboard-action=\"copy\"\n        :data-clipboard-text=\"codeText\">\n      复制\n    </a-button>\n\n    <a-spin size=\"large\" :spinning=\"loading\">\n      <Code :language-class=\"'language-php'\" :code-text=\"codeText\"><a-spin /></Code>\n    </a-spin>\n  </div>\n</template>\n\n<script>\nimport Code from \"@/components/code/Code\";\nimport clipboard from \"clipboard\";\nimport {getFileLists} from \"@/api/request\";\n\nexport default {\n  name: \"CodeGenerator\",\n  components: {Code},\n  data(){\n    return{\n      entityLists:[],\n      selectEntity:\"\",\n      selectedType:\"dto\",\n      codeText: \"\",\n      copySuccess: false,\n      loading:false,\n    }\n  },\n  created() {\n    this.getEntityLists()\n  },\n  methods: {\n    // entity选择器发生变化时触发\n    handleChange(value) {\n      this.loading = true // 打开code显示 的loading\n      this.selectEntity = value\n      this.$request.generateCode(this.selectEntity,this.selectedType).then(res=>{\n        if (res.status === 200){\n          this.codeText = res.data\n        }\n        this.loading = false\n      })\n    },\n    // entity选择器搜索\n    filterOption(input, option) {\n      return (\n          option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      );\n    },\n\n    /**\n     * 一些请求事件\n     */\n    // 获取r1所有的entity列表\n    getEntityLists(){\n      var params = \"?type=entity\"\n      this.$request.getFileLists(params).then(res=>{\n        if (res.status === 200){\n          this.entityLists = res.data\n        }\n      })\n    },\n    // radio发生变化 也就是需要生成代码类型发生变化时调用\n    handleChangeType(e) {\n      this.loading = true // 打开code显示 的loading\n\n      this.selectedType = e.target.value\n      if (this.selectEntity !== \"\"){\n        this.$request.generateCode(this.selectEntity,this.selectedType).then(res=>{\n          if (res.status === 200){\n            this.codeText = res.data\n            this.loading = false\n          }else {\n            this.loading =false\n          }\n        })\n      }else {\n        this.$message.warning(\"请先选择实体类\")\n        this.loading = false\n      }\n    },\n\n    // 复制功能\n    copyMessage() {\n      let _this = this;\n      if (_this.codeText===\"\"){\n        _this.$message.warn(\"没有可以复制的内容\");\n        return\n      }\n      _this.copySuccess = false;\n      let clipboardObj = new clipboard(\".code-data-copy\");\n      clipboardObj.on(\"success\", function (e) {\n        _this.copySuccess = true;\n        _this.$message.success(\"已复制到剪贴板\");\n        clipboardObj.destroy(); // 销毁,避免多次点击重复出现\n      });\n      clipboardObj.on(\"error\", function () {\n        _this.$message.error(\"复制错误\");\n      });\n    }\n  },\n}\n</script>\n<style scoped>\n/deep/ .ant-select-selection--single{\n  height: 35px;\n}\n</style>\n"],"mappings":"AAiDA,OAAAA,IAAA;AACA,OAAAC,SAAA;AACA,SAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAJ;EAAA;EACAK,KAAA;IACA;MACAC,WAAA;MACAC,YAAA;MACAC,YAAA;MACAC,QAAA;MACAC,WAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACA;IACAC,aAAAC,KAAA;MACA,KAAAL,OAAA;MACA,KAAAJ,YAAA,GAAAS,KAAA;MACA,KAAAC,QAAA,CAAAC,YAAA,MAAAX,YAAA,OAAAC,YAAA,EAAAW,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,KAAAZ,QAAA,GAAAW,GAAA,CAAAf,IAAA;QACA;QACA,KAAAM,OAAA;MACA;IACA;IACA;IACAW,aAAAC,KAAA,EAAAC,MAAA;MACA,OACAA,MAAA,CAAAC,gBAAA,CAAAC,QAAA,IAAAC,IAAA,CAAAC,WAAA,GAAAC,OAAA,CAAAN,KAAA,CAAAK,WAAA;IAEA;IAEA;AACA;AACA;IACA;IACAf,eAAA;MACA,IAAAiB,MAAA;MACA,KAAAb,QAAA,CAAAf,YAAA,CAAA4B,MAAA,EAAAX,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,KAAAf,WAAA,GAAAc,GAAA,CAAAf,IAAA;QACA;MACA;IACA;IACA;IACA0B,iBAAAC,CAAA;MACA,KAAArB,OAAA;;MAEA,KAAAH,YAAA,GAAAwB,CAAA,CAAAC,MAAA,CAAAjB,KAAA;MACA,SAAAT,YAAA;QACA,KAAAU,QAAA,CAAAC,YAAA,MAAAX,YAAA,OAAAC,YAAA,EAAAW,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,MAAA;YACA,KAAAZ,QAAA,GAAAW,GAAA,CAAAf,IAAA;YACA,KAAAM,OAAA;UACA;YACA,KAAAA,OAAA;UACA;QACA;MACA;QACA,KAAAuB,QAAA,CAAAC,OAAA;QACA,KAAAxB,OAAA;MACA;IACA;IAEA;IACAyB,YAAA;MACA,IAAAC,KAAA;MACA,IAAAA,KAAA,CAAA5B,QAAA;QACA4B,KAAA,CAAAH,QAAA,CAAAI,IAAA;QACA;MACA;MACAD,KAAA,CAAA3B,WAAA;MACA,IAAA6B,YAAA,OAAAtC,SAAA;MACAsC,YAAA,CAAAC,EAAA,sBAAAR,CAAA;QACAK,KAAA,CAAA3B,WAAA;QACA2B,KAAA,CAAAH,QAAA,CAAAO,OAAA;QACAF,YAAA,CAAAG,OAAA;MACA;;MACAH,YAAA,CAAAC,EAAA;QACAH,KAAA,CAAAH,QAAA,CAAAS,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}