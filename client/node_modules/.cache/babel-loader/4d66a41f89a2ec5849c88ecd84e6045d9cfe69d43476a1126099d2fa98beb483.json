{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport RcTable from '../vc-table';\nimport { INTERNAL_HOOKS } from '../vc-table/Table';\nimport Spin from '../spin';\nimport Pagination from '../pagination';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport renderExpandIcon from './ExpandIcon';\nimport scrollTo from '../_util/scrollTo';\nimport defaultLocale from '../locale/en_US';\nimport devWarning from '../vc-util/devWarning';\nimport { nextTick, reactive, ref, computed, defineComponent, toRef, watchEffect, watch } from 'vue';\nimport useBreakpoint from '../_util/hooks/useBreakpoint';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport classNames from '../_util/classNames';\nimport omit from '../_util/omit';\nimport { initDefaultProps } from '../_util/props-util';\nimport { useProvideSlots, useProvideTableContext } from './context';\nimport useColumns from './hooks/useColumns';\nimport { convertChildrenToColumns } from './util';\nimport { stringType, booleanType, arrayType, someType, functionType, objectType } from '../_util/type';\n// CSSINJS\nimport useStyle from './style';\nconst EMPTY_LIST = [];\nexport const tableProps = () => {\n  return {\n    prefixCls: stringType(),\n    columns: arrayType(),\n    rowKey: someType([String, Function]),\n    tableLayout: stringType(),\n    rowClassName: someType([String, Function]),\n    title: functionType(),\n    footer: functionType(),\n    id: stringType(),\n    showHeader: booleanType(),\n    components: objectType(),\n    customRow: functionType(),\n    customHeaderRow: functionType(),\n    direction: stringType(),\n    expandFixed: someType([Boolean, String]),\n    expandColumnWidth: Number,\n    expandedRowKeys: arrayType(),\n    defaultExpandedRowKeys: arrayType(),\n    expandedRowRender: functionType(),\n    expandRowByClick: booleanType(),\n    expandIcon: functionType(),\n    onExpand: functionType(),\n    onExpandedRowsChange: functionType(),\n    'onUpdate:expandedRowKeys': functionType(),\n    defaultExpandAllRows: booleanType(),\n    indentSize: Number,\n    /** @deprecated Please use `EXPAND_COLUMN` in `columns` directly */\n    expandIconColumnIndex: Number,\n    showExpandColumn: booleanType(),\n    expandedRowClassName: functionType(),\n    childrenColumnName: stringType(),\n    rowExpandable: functionType(),\n    sticky: someType([Boolean, Object]),\n    dropdownPrefixCls: String,\n    dataSource: arrayType(),\n    pagination: someType([Boolean, Object]),\n    loading: someType([Boolean, Object]),\n    size: stringType(),\n    bordered: booleanType(),\n    locale: objectType(),\n    onChange: functionType(),\n    onResizeColumn: functionType(),\n    rowSelection: objectType(),\n    getPopupContainer: functionType(),\n    scroll: objectType(),\n    sortDirections: arrayType(),\n    showSorterTooltip: someType([Boolean, Object], true),\n    transformCellText: functionType()\n  };\n};\nconst InteralTable = defineComponent({\n  name: 'InteralTable',\n  inheritAttrs: false,\n  props: initDefaultProps(_extends(_extends({}, tableProps()), {\n    contextSlots: objectType()\n  }), {\n    rowKey: 'key'\n  }),\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      expose,\n      emit\n    } = _ref;\n    devWarning(!(typeof props.rowKey === 'function' && props.rowKey.length > 1), 'Table', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.');\n    useProvideSlots(computed(() => props.contextSlots));\n    useProvideTableContext({\n      onResizeColumn: (w, col) => {\n        emit('resizeColumn', w, col);\n      }\n    });\n    const screens = useBreakpoint();\n    const mergedColumns = computed(() => {\n      const matched = new Set(Object.keys(screens.value).filter(m => screens.value[m]));\n      return props.columns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n    });\n    const {\n      size: mergedSize,\n      renderEmpty,\n      direction,\n      prefixCls,\n      configProvider\n    } = useConfigInject('table', props);\n    // Style\n    const [wrapSSR, hashId] = useStyle(prefixCls);\n    const transformCellText = computed(() => {\n      var _a;\n      return props.transformCellText || ((_a = configProvider.transformCellText) === null || _a === void 0 ? void 0 : _a.value);\n    });\n    const [tableLocale] = useLocaleReceiver('Table', defaultLocale.Table, toRef(props, 'locale'));\n    const rawData = computed(() => props.dataSource || EMPTY_LIST);\n    const dropdownPrefixCls = computed(() => configProvider.getPrefixCls('dropdown', props.dropdownPrefixCls));\n    const childrenColumnName = computed(() => props.childrenColumnName || 'children');\n    const expandType = computed(() => {\n      if (rawData.value.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName.value])) {\n        return 'nest';\n      }\n      if (props.expandedRowRender) {\n        return 'row';\n      }\n      return null;\n    });\n    const internalRefs = reactive({\n      body: null\n    });\n    const updateInternalRefs = refs => {\n      _extends(internalRefs, refs);\n    };\n    // ============================ RowKey ============================\n    const getRowKey = computed(() => {\n      if (typeof props.rowKey === 'function') {\n        return props.rowKey;\n      }\n      return record => record === null || record === void 0 ? void 0 : record[props.rowKey];\n    });\n    const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n    // ============================ Events =============================\n    const changeEventInfo = {};\n    const triggerOnChange = function (info, action) {\n      let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const {\n        pagination,\n        scroll,\n        onChange\n      } = props;\n      const changeInfo = _extends(_extends({}, changeEventInfo), info);\n      if (reset) {\n        changeEventInfo.resetPagination();\n        // Reset event param\n        if (changeInfo.pagination.current) {\n          changeInfo.pagination.current = 1;\n        }\n        // Trigger pagination events\n        if (pagination && pagination.onChange) {\n          pagination.onChange(1, changeInfo.pagination.pageSize);\n        }\n      }\n      if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body) {\n        scrollTo(0, {\n          getContainer: () => internalRefs.body\n        });\n      }\n      onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n        currentDataSource: getFilterData(getSortData(rawData.value, changeInfo.sorterStates, childrenColumnName.value), changeInfo.filterStates),\n        action\n      });\n    };\n    /**\n     * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n     * state out and then put it back to title render. Move these code into `hooks` but still too\n     * complex. We should provides Table props like `sorter` & `filter` to handle control in next big version.\n     */\n    // ============================ Sorter =============================\n    const onSorterChange = (sorter, sorterStates) => {\n      triggerOnChange({\n        sorter,\n        sorterStates\n      }, 'sort', false);\n    };\n    const [transformSorterColumns, sortStates, sorterTitleProps, sorters] = useSorter({\n      prefixCls,\n      mergedColumns,\n      onSorterChange,\n      sortDirections: computed(() => props.sortDirections || ['ascend', 'descend']),\n      tableLocale,\n      showSorterTooltip: toRef(props, 'showSorterTooltip')\n    });\n    const sortedData = computed(() => getSortData(rawData.value, sortStates.value, childrenColumnName.value));\n    // ============================ Filter ============================\n    const onFilterChange = (filters, filterStates) => {\n      triggerOnChange({\n        filters,\n        filterStates\n      }, 'filter', true);\n    };\n    const [transformFilterColumns, filterStates, filters] = useFilter({\n      prefixCls,\n      locale: tableLocale,\n      dropdownPrefixCls,\n      mergedColumns,\n      onFilterChange,\n      getPopupContainer: toRef(props, 'getPopupContainer')\n    });\n    const mergedData = computed(() => getFilterData(sortedData.value, filterStates.value));\n    // ============================ Column ============================\n    const [transformBasicColumns] = useColumns(toRef(props, 'contextSlots'));\n    const columnTitleProps = computed(() => {\n      const mergedFilters = {};\n      const filtersValue = filters.value;\n      Object.keys(filtersValue).forEach(filterKey => {\n        if (filtersValue[filterKey] !== null) {\n          mergedFilters[filterKey] = filtersValue[filterKey];\n        }\n      });\n      return _extends(_extends({}, sorterTitleProps.value), {\n        filters: mergedFilters\n      });\n    });\n    const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n    // ========================== Pagination ==========================\n    const onPaginationChange = (current, pageSize) => {\n      triggerOnChange({\n        pagination: _extends(_extends({}, changeEventInfo.pagination), {\n          current,\n          pageSize\n        })\n      }, 'paginate');\n    };\n    const [mergedPagination, resetPagination] = usePagination(computed(() => mergedData.value.length), toRef(props, 'pagination'), onPaginationChange);\n    watchEffect(() => {\n      changeEventInfo.sorter = sorters.value;\n      changeEventInfo.sorterStates = sortStates.value;\n      changeEventInfo.filters = filters.value;\n      changeEventInfo.filterStates = filterStates.value;\n      changeEventInfo.pagination = props.pagination === false ? {} : getPaginationParam(mergedPagination.value, props.pagination);\n      changeEventInfo.resetPagination = resetPagination;\n    });\n    // ============================= Data =============================\n    const pageData = computed(() => {\n      if (props.pagination === false || !mergedPagination.value.pageSize) {\n        return mergedData.value;\n      }\n      const {\n        current = 1,\n        total,\n        pageSize = DEFAULT_PAGE_SIZE\n      } = mergedPagination.value;\n      devWarning(current > 0, 'Table', '`current` should be positive number.');\n      // Dynamic table data\n      if (mergedData.value.length < total) {\n        if (mergedData.value.length > pageSize) {\n          return mergedData.value.slice((current - 1) * pageSize, current * pageSize);\n        }\n        return mergedData.value;\n      }\n      return mergedData.value.slice((current - 1) * pageSize, current * pageSize);\n    });\n    watchEffect(() => {\n      nextTick(() => {\n        const {\n          total,\n          pageSize = DEFAULT_PAGE_SIZE\n        } = mergedPagination.value;\n        // Dynamic table data\n        if (mergedData.value.length < total) {\n          if (mergedData.value.length > pageSize) {\n            devWarning(false, 'Table', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.');\n          }\n        }\n      });\n    }, {\n      flush: 'post'\n    });\n    const expandIconColumnIndex = computed(() => {\n      if (props.showExpandColumn === false) return -1;\n      // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n      if (expandType.value === 'nest' && props.expandIconColumnIndex === undefined) {\n        return props.rowSelection ? 1 : 0;\n      } else if (props.expandIconColumnIndex > 0 && props.rowSelection) {\n        return props.expandIconColumnIndex - 1;\n      }\n      return props.expandIconColumnIndex;\n    });\n    const rowSelection = ref();\n    watch(() => props.rowSelection, () => {\n      rowSelection.value = props.rowSelection ? _extends({}, props.rowSelection) : props.rowSelection;\n    }, {\n      deep: true,\n      immediate: true\n    });\n    // ========================== Selections ==========================\n    const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n      prefixCls,\n      data: mergedData,\n      pageData,\n      getRowKey,\n      getRecordByKey,\n      expandType,\n      childrenColumnName,\n      locale: tableLocale,\n      getPopupContainer: computed(() => props.getPopupContainer)\n    });\n    const internalRowClassName = (record, index, indent) => {\n      let mergedRowClassName;\n      const {\n        rowClassName\n      } = props;\n      if (typeof rowClassName === 'function') {\n        mergedRowClassName = classNames(rowClassName(record, index, indent));\n      } else {\n        mergedRowClassName = classNames(rowClassName);\n      }\n      return classNames({\n        [`${prefixCls.value}-row-selected`]: selectedKeySet.value.has(getRowKey.value(record, index))\n      }, mergedRowClassName);\n    };\n    expose({\n      selectedKeySet\n    });\n    const indentSize = computed(() => {\n      // Indent size\n      return typeof props.indentSize === 'number' ? props.indentSize : 15;\n    });\n    const transformColumns = innerColumns => {\n      const res = transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(transformBasicColumns(innerColumns)))));\n      return res;\n    };\n    return () => {\n      var _a;\n      const {\n        expandIcon = slots.expandIcon || renderExpandIcon(tableLocale.value),\n        pagination,\n        loading,\n        bordered\n      } = props;\n      let topPaginationNode;\n      let bottomPaginationNode;\n      if (pagination !== false && ((_a = mergedPagination.value) === null || _a === void 0 ? void 0 : _a.total)) {\n        let paginationSize;\n        if (mergedPagination.value.size) {\n          paginationSize = mergedPagination.value.size;\n        } else {\n          paginationSize = mergedSize.value === 'small' || mergedSize.value === 'middle' ? 'small' : undefined;\n        }\n        const renderPagination = position => _createVNode(Pagination, _objectSpread(_objectSpread({}, mergedPagination.value), {}, {\n          \"class\": [`${prefixCls.value}-pagination ${prefixCls.value}-pagination-${position}`, mergedPagination.value.class],\n          \"size\": paginationSize\n        }), null);\n        const defaultPosition = direction.value === 'rtl' ? 'left' : 'right';\n        const {\n          position\n        } = mergedPagination.value;\n        if (position !== null && Array.isArray(position)) {\n          const topPos = position.find(p => p.includes('top'));\n          const bottomPos = position.find(p => p.includes('bottom'));\n          const isDisable = position.every(p => `${p}` === 'none');\n          if (!topPos && !bottomPos && !isDisable) {\n            bottomPaginationNode = renderPagination(defaultPosition);\n          }\n          if (topPos) {\n            topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n          }\n          if (bottomPos) {\n            bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n          }\n        } else {\n          bottomPaginationNode = renderPagination(defaultPosition);\n        }\n      }\n      // >>>>>>>>> Spinning\n      let spinProps;\n      if (typeof loading === 'boolean') {\n        spinProps = {\n          spinning: loading\n        };\n      } else if (typeof loading === 'object') {\n        spinProps = _extends({\n          spinning: true\n        }, loading);\n      }\n      const wrapperClassNames = classNames(`${prefixCls.value}-wrapper`, {\n        [`${prefixCls.value}-wrapper-rtl`]: direction.value === 'rtl'\n      }, attrs.class, hashId.value);\n      const tableProps = omit(props, ['columns']);\n      return wrapSSR(_createVNode(\"div\", {\n        \"class\": wrapperClassNames,\n        \"style\": attrs.style\n      }, [_createVNode(Spin, _objectSpread({\n        \"spinning\": false\n      }, spinProps), {\n        default: () => [topPaginationNode, _createVNode(RcTable, _objectSpread(_objectSpread(_objectSpread({}, attrs), tableProps), {}, {\n          \"expandedRowKeys\": props.expandedRowKeys,\n          \"defaultExpandedRowKeys\": props.defaultExpandedRowKeys,\n          \"expandIconColumnIndex\": expandIconColumnIndex.value,\n          \"indentSize\": indentSize.value,\n          \"expandIcon\": expandIcon,\n          \"columns\": mergedColumns.value,\n          \"direction\": direction.value,\n          \"prefixCls\": prefixCls.value,\n          \"class\": classNames({\n            [`${prefixCls.value}-middle`]: mergedSize.value === 'middle',\n            [`${prefixCls.value}-small`]: mergedSize.value === 'small',\n            [`${prefixCls.value}-bordered`]: bordered,\n            [`${prefixCls.value}-empty`]: rawData.value.length === 0\n          }),\n          \"data\": pageData.value,\n          \"rowKey\": getRowKey.value,\n          \"rowClassName\": internalRowClassName,\n          \"internalHooks\": INTERNAL_HOOKS,\n          \"internalRefs\": internalRefs,\n          \"onUpdateInternalRefs\": updateInternalRefs,\n          \"transformColumns\": transformColumns,\n          \"transformCellText\": transformCellText.value\n        }), _extends(_extends({}, slots), {\n          emptyText: () => {\n            var _a, _b;\n            return ((_a = slots.emptyText) === null || _a === void 0 ? void 0 : _a.call(slots)) || ((_b = props.locale) === null || _b === void 0 ? void 0 : _b.emptyText) || renderEmpty('Table');\n          }\n        })), bottomPaginationNode]\n      })]));\n    };\n  }\n});\nconst Table = defineComponent({\n  name: 'ATable',\n  inheritAttrs: false,\n  props: initDefaultProps(tableProps(), {\n    rowKey: 'key'\n  }),\n  slots: Object,\n  setup(props, _ref2) {\n    let {\n      attrs,\n      slots,\n      expose\n    } = _ref2;\n    const table = ref();\n    expose({\n      table\n    });\n    return () => {\n      var _a;\n      const columns = props.columns || convertChildrenToColumns((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\n      return _createVNode(InteralTable, _objectSpread(_objectSpread(_objectSpread({\n        \"ref\": table\n      }, attrs), props), {}, {\n        \"columns\": columns || [],\n        \"expandedRowRender\": slots.expandedRowRender,\n        \"contextSlots\": _extends({}, slots)\n      }), slots);\n    };\n  }\n});\nexport default Table;","map":{"version":3,"names":["_objectSpread","_extends","resolveDirective","_resolveDirective","createVNode","_createVNode","RcTable","INTERNAL_HOOKS","Spin","Pagination","usePagination","DEFAULT_PAGE_SIZE","getPaginationParam","useLazyKVMap","useSelection","useSorter","getSortData","useFilter","getFilterData","useTitleColumns","renderExpandIcon","scrollTo","defaultLocale","devWarning","nextTick","reactive","ref","computed","defineComponent","toRef","watchEffect","watch","useBreakpoint","useConfigInject","useLocaleReceiver","classNames","omit","initDefaultProps","useProvideSlots","useProvideTableContext","useColumns","convertChildrenToColumns","stringType","booleanType","arrayType","someType","functionType","objectType","useStyle","EMPTY_LIST","tableProps","prefixCls","columns","rowKey","String","Function","tableLayout","rowClassName","title","footer","id","showHeader","components","customRow","customHeaderRow","direction","expandFixed","Boolean","expandColumnWidth","Number","expandedRowKeys","defaultExpandedRowKeys","expandedRowRender","expandRowByClick","expandIcon","onExpand","onExpandedRowsChange","defaultExpandAllRows","indentSize","expandIconColumnIndex","showExpandColumn","expandedRowClassName","childrenColumnName","rowExpandable","sticky","Object","dropdownPrefixCls","dataSource","pagination","loading","size","bordered","locale","onChange","onResizeColumn","rowSelection","getPopupContainer","scroll","sortDirections","showSorterTooltip","transformCellText","InteralTable","name","inheritAttrs","props","contextSlots","setup","_ref","attrs","slots","expose","emit","length","w","col","screens","mergedColumns","matched","Set","keys","value","filter","m","c","responsive","some","r","has","mergedSize","renderEmpty","configProvider","wrapSSR","hashId","_a","tableLocale","Table","rawData","getPrefixCls","expandType","item","internalRefs","body","updateInternalRefs","refs","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","action","reset","arguments","undefined","changeInfo","resetPagination","current","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","sorters","sortedData","onFilterChange","transformFilterColumns","mergedData","transformBasicColumns","columnTitleProps","mergedFilters","filtersValue","forEach","filterKey","transformTitleColumns","onPaginationChange","mergedPagination","pageData","total","slice","flush","deep","immediate","transformSelectionColumns","selectedKeySet","data","internalRowClassName","index","indent","mergedRowClassName","transformColumns","innerColumns","res","topPaginationNode","bottomPaginationNode","paginationSize","renderPagination","position","class","defaultPosition","Array","isArray","topPos","find","p","includes","bottomPos","isDisable","every","toLowerCase","replace","spinProps","spinning","wrapperClassNames","style","default","emptyText","_b","call","_ref2","table"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/table/Table.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport RcTable from '../vc-table';\nimport { INTERNAL_HOOKS } from '../vc-table/Table';\nimport Spin from '../spin';\nimport Pagination from '../pagination';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport renderExpandIcon from './ExpandIcon';\nimport scrollTo from '../_util/scrollTo';\nimport defaultLocale from '../locale/en_US';\nimport devWarning from '../vc-util/devWarning';\nimport { nextTick, reactive, ref, computed, defineComponent, toRef, watchEffect, watch } from 'vue';\nimport useBreakpoint from '../_util/hooks/useBreakpoint';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport classNames from '../_util/classNames';\nimport omit from '../_util/omit';\nimport { initDefaultProps } from '../_util/props-util';\nimport { useProvideSlots, useProvideTableContext } from './context';\nimport useColumns from './hooks/useColumns';\nimport { convertChildrenToColumns } from './util';\nimport { stringType, booleanType, arrayType, someType, functionType, objectType } from '../_util/type';\n// CSSINJS\nimport useStyle from './style';\nconst EMPTY_LIST = [];\nexport const tableProps = () => {\n  return {\n    prefixCls: stringType(),\n    columns: arrayType(),\n    rowKey: someType([String, Function]),\n    tableLayout: stringType(),\n    rowClassName: someType([String, Function]),\n    title: functionType(),\n    footer: functionType(),\n    id: stringType(),\n    showHeader: booleanType(),\n    components: objectType(),\n    customRow: functionType(),\n    customHeaderRow: functionType(),\n    direction: stringType(),\n    expandFixed: someType([Boolean, String]),\n    expandColumnWidth: Number,\n    expandedRowKeys: arrayType(),\n    defaultExpandedRowKeys: arrayType(),\n    expandedRowRender: functionType(),\n    expandRowByClick: booleanType(),\n    expandIcon: functionType(),\n    onExpand: functionType(),\n    onExpandedRowsChange: functionType(),\n    'onUpdate:expandedRowKeys': functionType(),\n    defaultExpandAllRows: booleanType(),\n    indentSize: Number,\n    /** @deprecated Please use `EXPAND_COLUMN` in `columns` directly */\n    expandIconColumnIndex: Number,\n    showExpandColumn: booleanType(),\n    expandedRowClassName: functionType(),\n    childrenColumnName: stringType(),\n    rowExpandable: functionType(),\n    sticky: someType([Boolean, Object]),\n    dropdownPrefixCls: String,\n    dataSource: arrayType(),\n    pagination: someType([Boolean, Object]),\n    loading: someType([Boolean, Object]),\n    size: stringType(),\n    bordered: booleanType(),\n    locale: objectType(),\n    onChange: functionType(),\n    onResizeColumn: functionType(),\n    rowSelection: objectType(),\n    getPopupContainer: functionType(),\n    scroll: objectType(),\n    sortDirections: arrayType(),\n    showSorterTooltip: someType([Boolean, Object], true),\n    transformCellText: functionType()\n  };\n};\nconst InteralTable = defineComponent({\n  name: 'InteralTable',\n  inheritAttrs: false,\n  props: initDefaultProps(_extends(_extends({}, tableProps()), {\n    contextSlots: objectType()\n  }), {\n    rowKey: 'key'\n  }),\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      expose,\n      emit\n    } = _ref;\n    devWarning(!(typeof props.rowKey === 'function' && props.rowKey.length > 1), 'Table', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.');\n    useProvideSlots(computed(() => props.contextSlots));\n    useProvideTableContext({\n      onResizeColumn: (w, col) => {\n        emit('resizeColumn', w, col);\n      }\n    });\n    const screens = useBreakpoint();\n    const mergedColumns = computed(() => {\n      const matched = new Set(Object.keys(screens.value).filter(m => screens.value[m]));\n      return props.columns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n    });\n    const {\n      size: mergedSize,\n      renderEmpty,\n      direction,\n      prefixCls,\n      configProvider\n    } = useConfigInject('table', props);\n    // Style\n    const [wrapSSR, hashId] = useStyle(prefixCls);\n    const transformCellText = computed(() => {\n      var _a;\n      return props.transformCellText || ((_a = configProvider.transformCellText) === null || _a === void 0 ? void 0 : _a.value);\n    });\n    const [tableLocale] = useLocaleReceiver('Table', defaultLocale.Table, toRef(props, 'locale'));\n    const rawData = computed(() => props.dataSource || EMPTY_LIST);\n    const dropdownPrefixCls = computed(() => configProvider.getPrefixCls('dropdown', props.dropdownPrefixCls));\n    const childrenColumnName = computed(() => props.childrenColumnName || 'children');\n    const expandType = computed(() => {\n      if (rawData.value.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName.value])) {\n        return 'nest';\n      }\n      if (props.expandedRowRender) {\n        return 'row';\n      }\n      return null;\n    });\n    const internalRefs = reactive({\n      body: null\n    });\n    const updateInternalRefs = refs => {\n      _extends(internalRefs, refs);\n    };\n    // ============================ RowKey ============================\n    const getRowKey = computed(() => {\n      if (typeof props.rowKey === 'function') {\n        return props.rowKey;\n      }\n      return record => record === null || record === void 0 ? void 0 : record[props.rowKey];\n    });\n    const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n    // ============================ Events =============================\n    const changeEventInfo = {};\n    const triggerOnChange = function (info, action) {\n      let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const {\n        pagination,\n        scroll,\n        onChange\n      } = props;\n      const changeInfo = _extends(_extends({}, changeEventInfo), info);\n      if (reset) {\n        changeEventInfo.resetPagination();\n        // Reset event param\n        if (changeInfo.pagination.current) {\n          changeInfo.pagination.current = 1;\n        }\n        // Trigger pagination events\n        if (pagination && pagination.onChange) {\n          pagination.onChange(1, changeInfo.pagination.pageSize);\n        }\n      }\n      if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body) {\n        scrollTo(0, {\n          getContainer: () => internalRefs.body\n        });\n      }\n      onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n        currentDataSource: getFilterData(getSortData(rawData.value, changeInfo.sorterStates, childrenColumnName.value), changeInfo.filterStates),\n        action\n      });\n    };\n    /**\n     * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n     * state out and then put it back to title render. Move these code into `hooks` but still too\n     * complex. We should provides Table props like `sorter` & `filter` to handle control in next big version.\n     */\n    // ============================ Sorter =============================\n    const onSorterChange = (sorter, sorterStates) => {\n      triggerOnChange({\n        sorter,\n        sorterStates\n      }, 'sort', false);\n    };\n    const [transformSorterColumns, sortStates, sorterTitleProps, sorters] = useSorter({\n      prefixCls,\n      mergedColumns,\n      onSorterChange,\n      sortDirections: computed(() => props.sortDirections || ['ascend', 'descend']),\n      tableLocale,\n      showSorterTooltip: toRef(props, 'showSorterTooltip')\n    });\n    const sortedData = computed(() => getSortData(rawData.value, sortStates.value, childrenColumnName.value));\n    // ============================ Filter ============================\n    const onFilterChange = (filters, filterStates) => {\n      triggerOnChange({\n        filters,\n        filterStates\n      }, 'filter', true);\n    };\n    const [transformFilterColumns, filterStates, filters] = useFilter({\n      prefixCls,\n      locale: tableLocale,\n      dropdownPrefixCls,\n      mergedColumns,\n      onFilterChange,\n      getPopupContainer: toRef(props, 'getPopupContainer')\n    });\n    const mergedData = computed(() => getFilterData(sortedData.value, filterStates.value));\n    // ============================ Column ============================\n    const [transformBasicColumns] = useColumns(toRef(props, 'contextSlots'));\n    const columnTitleProps = computed(() => {\n      const mergedFilters = {};\n      const filtersValue = filters.value;\n      Object.keys(filtersValue).forEach(filterKey => {\n        if (filtersValue[filterKey] !== null) {\n          mergedFilters[filterKey] = filtersValue[filterKey];\n        }\n      });\n      return _extends(_extends({}, sorterTitleProps.value), {\n        filters: mergedFilters\n      });\n    });\n    const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n    // ========================== Pagination ==========================\n    const onPaginationChange = (current, pageSize) => {\n      triggerOnChange({\n        pagination: _extends(_extends({}, changeEventInfo.pagination), {\n          current,\n          pageSize\n        })\n      }, 'paginate');\n    };\n    const [mergedPagination, resetPagination] = usePagination(computed(() => mergedData.value.length), toRef(props, 'pagination'), onPaginationChange);\n    watchEffect(() => {\n      changeEventInfo.sorter = sorters.value;\n      changeEventInfo.sorterStates = sortStates.value;\n      changeEventInfo.filters = filters.value;\n      changeEventInfo.filterStates = filterStates.value;\n      changeEventInfo.pagination = props.pagination === false ? {} : getPaginationParam(mergedPagination.value, props.pagination);\n      changeEventInfo.resetPagination = resetPagination;\n    });\n    // ============================= Data =============================\n    const pageData = computed(() => {\n      if (props.pagination === false || !mergedPagination.value.pageSize) {\n        return mergedData.value;\n      }\n      const {\n        current = 1,\n        total,\n        pageSize = DEFAULT_PAGE_SIZE\n      } = mergedPagination.value;\n      devWarning(current > 0, 'Table', '`current` should be positive number.');\n      // Dynamic table data\n      if (mergedData.value.length < total) {\n        if (mergedData.value.length > pageSize) {\n          return mergedData.value.slice((current - 1) * pageSize, current * pageSize);\n        }\n        return mergedData.value;\n      }\n      return mergedData.value.slice((current - 1) * pageSize, current * pageSize);\n    });\n    watchEffect(() => {\n      nextTick(() => {\n        const {\n          total,\n          pageSize = DEFAULT_PAGE_SIZE\n        } = mergedPagination.value;\n        // Dynamic table data\n        if (mergedData.value.length < total) {\n          if (mergedData.value.length > pageSize) {\n            devWarning(false, 'Table', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.');\n          }\n        }\n      });\n    }, {\n      flush: 'post'\n    });\n    const expandIconColumnIndex = computed(() => {\n      if (props.showExpandColumn === false) return -1;\n      // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n      if (expandType.value === 'nest' && props.expandIconColumnIndex === undefined) {\n        return props.rowSelection ? 1 : 0;\n      } else if (props.expandIconColumnIndex > 0 && props.rowSelection) {\n        return props.expandIconColumnIndex - 1;\n      }\n      return props.expandIconColumnIndex;\n    });\n    const rowSelection = ref();\n    watch(() => props.rowSelection, () => {\n      rowSelection.value = props.rowSelection ? _extends({}, props.rowSelection) : props.rowSelection;\n    }, {\n      deep: true,\n      immediate: true\n    });\n    // ========================== Selections ==========================\n    const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n      prefixCls,\n      data: mergedData,\n      pageData,\n      getRowKey,\n      getRecordByKey,\n      expandType,\n      childrenColumnName,\n      locale: tableLocale,\n      getPopupContainer: computed(() => props.getPopupContainer)\n    });\n    const internalRowClassName = (record, index, indent) => {\n      let mergedRowClassName;\n      const {\n        rowClassName\n      } = props;\n      if (typeof rowClassName === 'function') {\n        mergedRowClassName = classNames(rowClassName(record, index, indent));\n      } else {\n        mergedRowClassName = classNames(rowClassName);\n      }\n      return classNames({\n        [`${prefixCls.value}-row-selected`]: selectedKeySet.value.has(getRowKey.value(record, index))\n      }, mergedRowClassName);\n    };\n    expose({\n      selectedKeySet\n    });\n    const indentSize = computed(() => {\n      // Indent size\n      return typeof props.indentSize === 'number' ? props.indentSize : 15;\n    });\n    const transformColumns = innerColumns => {\n      const res = transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(transformBasicColumns(innerColumns)))));\n      return res;\n    };\n    return () => {\n      var _a;\n      const {\n        expandIcon = slots.expandIcon || renderExpandIcon(tableLocale.value),\n        pagination,\n        loading,\n        bordered\n      } = props;\n      let topPaginationNode;\n      let bottomPaginationNode;\n      if (pagination !== false && ((_a = mergedPagination.value) === null || _a === void 0 ? void 0 : _a.total)) {\n        let paginationSize;\n        if (mergedPagination.value.size) {\n          paginationSize = mergedPagination.value.size;\n        } else {\n          paginationSize = mergedSize.value === 'small' || mergedSize.value === 'middle' ? 'small' : undefined;\n        }\n        const renderPagination = position => _createVNode(Pagination, _objectSpread(_objectSpread({}, mergedPagination.value), {}, {\n          \"class\": [`${prefixCls.value}-pagination ${prefixCls.value}-pagination-${position}`, mergedPagination.value.class],\n          \"size\": paginationSize\n        }), null);\n        const defaultPosition = direction.value === 'rtl' ? 'left' : 'right';\n        const {\n          position\n        } = mergedPagination.value;\n        if (position !== null && Array.isArray(position)) {\n          const topPos = position.find(p => p.includes('top'));\n          const bottomPos = position.find(p => p.includes('bottom'));\n          const isDisable = position.every(p => `${p}` === 'none');\n          if (!topPos && !bottomPos && !isDisable) {\n            bottomPaginationNode = renderPagination(defaultPosition);\n          }\n          if (topPos) {\n            topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n          }\n          if (bottomPos) {\n            bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n          }\n        } else {\n          bottomPaginationNode = renderPagination(defaultPosition);\n        }\n      }\n      // >>>>>>>>> Spinning\n      let spinProps;\n      if (typeof loading === 'boolean') {\n        spinProps = {\n          spinning: loading\n        };\n      } else if (typeof loading === 'object') {\n        spinProps = _extends({\n          spinning: true\n        }, loading);\n      }\n      const wrapperClassNames = classNames(`${prefixCls.value}-wrapper`, {\n        [`${prefixCls.value}-wrapper-rtl`]: direction.value === 'rtl'\n      }, attrs.class, hashId.value);\n      const tableProps = omit(props, ['columns']);\n      return wrapSSR(_createVNode(\"div\", {\n        \"class\": wrapperClassNames,\n        \"style\": attrs.style\n      }, [_createVNode(Spin, _objectSpread({\n        \"spinning\": false\n      }, spinProps), {\n        default: () => [topPaginationNode, _createVNode(RcTable, _objectSpread(_objectSpread(_objectSpread({}, attrs), tableProps), {}, {\n          \"expandedRowKeys\": props.expandedRowKeys,\n          \"defaultExpandedRowKeys\": props.defaultExpandedRowKeys,\n          \"expandIconColumnIndex\": expandIconColumnIndex.value,\n          \"indentSize\": indentSize.value,\n          \"expandIcon\": expandIcon,\n          \"columns\": mergedColumns.value,\n          \"direction\": direction.value,\n          \"prefixCls\": prefixCls.value,\n          \"class\": classNames({\n            [`${prefixCls.value}-middle`]: mergedSize.value === 'middle',\n            [`${prefixCls.value}-small`]: mergedSize.value === 'small',\n            [`${prefixCls.value}-bordered`]: bordered,\n            [`${prefixCls.value}-empty`]: rawData.value.length === 0\n          }),\n          \"data\": pageData.value,\n          \"rowKey\": getRowKey.value,\n          \"rowClassName\": internalRowClassName,\n          \"internalHooks\": INTERNAL_HOOKS,\n          \"internalRefs\": internalRefs,\n          \"onUpdateInternalRefs\": updateInternalRefs,\n          \"transformColumns\": transformColumns,\n          \"transformCellText\": transformCellText.value\n        }), _extends(_extends({}, slots), {\n          emptyText: () => {\n            var _a, _b;\n            return ((_a = slots.emptyText) === null || _a === void 0 ? void 0 : _a.call(slots)) || ((_b = props.locale) === null || _b === void 0 ? void 0 : _b.emptyText) || renderEmpty('Table');\n          }\n        })), bottomPaginationNode]\n      })]));\n    };\n  }\n});\nconst Table = defineComponent({\n  name: 'ATable',\n  inheritAttrs: false,\n  props: initDefaultProps(tableProps(), {\n    rowKey: 'key'\n  }),\n  slots: Object,\n  setup(props, _ref2) {\n    let {\n      attrs,\n      slots,\n      expose\n    } = _ref2;\n    const table = ref();\n    expose({\n      table\n    });\n    return () => {\n      var _a;\n      const columns = props.columns || convertChildrenToColumns((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\n      return _createVNode(InteralTable, _objectSpread(_objectSpread(_objectSpread({\n        \"ref\": table\n      }, attrs), props), {}, {\n        \"columns\": columns || [],\n        \"expandedRowRender\": slots.expandedRowRender,\n        \"contextSlots\": _extends({}, slots)\n      }), slots);\n    };\n  }\n});\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}