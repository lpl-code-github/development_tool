{"ast":null,"code":"export default {\n  name: \"Statistics\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      echartsStyles: {\n        width: '100%',\n        height: \"300px\"\n      },\n      myChart: null,\n      visible: false,\n      apiInfo: null\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        if (newVal === true) {\n          this.getApiInfo();\n        } else {\n          this.visible = newVal;\n        }\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n    // this.getApiInfo()\n  },\n\n  methods: {\n    afterVisibleChange(val) {\n      console.log('visible', val);\n    },\n    onClose() {\n      this.$emit('updateDrawerStatus', false);\n    },\n    async getApiInfo() {\n      await this.$request.getR1Api().then(res => {\n        if (res.status !== 200) {\n          this.$emit('updateDrawerStatus', false);\n        } else {\n          this.visible = true;\n          this.apiInfo = res.data.data;\n        }\n      });\n    },\n    echarts() {\n      if (this.myChart != null && this.myChart !== \"\" && this.myChart !== undefined) {\n        this.myChart.dispose();\n      }\n      this.myChart = this.$echarts.init(document.getElementById('main'));\n      this.myChart.setOption({\n        //animation:false,// 取消动画\n        title: {\n          text: '数据服务节点(Refresh every 5 seconds)',\n          textStyle: {\n            color: '#a19e9e'\n          }\n        },\n        tooltip: {},\n        animationDurationUpdate: 1500,\n        animationEasingUpdate: 'quinticInOut',\n        series: [{\n          type: 'graph',\n          layout: 'none',\n          symbolSize: 50,\n          // roam: true,\n          label: {\n            show: true\n          },\n          edgeSymbol: ['circle', 'arrow'],\n          edgeSymbolSize: [4, 10],\n          edgeLabel: {\n            fontSize: 20\n          },\n          data: this.HeartbeatEChartsData.map(item => {\n            return {\n              symbol: item.symbol,\n              name: item.name,\n              value: item.value,\n              colors: item.colors,\n              x: item.x,\n              y: item.y\n            };\n          }),\n          links: this.links.map(item => {\n            return {\n              source: item.source,\n              target: item.target,\n              lineStyle: item.lineStyle\n            };\n          }),\n          lineStyle: {\n            opacity: 0.9,\n            width: 2,\n            curveness: 0.2\n          },\n          itemStyle: {\n            normal: {\n              color: function (params) {\n                return params.data.colors; //获取具体的参数\n              }\n            }\n          }\n        }]\n      });\n\n      // 让图表跟随屏幕自动的去适应\n      window.addEventListener('resize', () => {\n        this.myChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","openFlag","type","Boolean","required","data","echartsStyles","width","height","myChart","visible","apiInfo","watch","handler","newVal","oldVal","getApiInfo","deep","mounted","methods","afterVisibleChange","val","console","log","onClose","$emit","$request","getR1Api","then","res","status","echarts","undefined","dispose","$echarts","init","document","getElementById","setOption","title","text","textStyle","color","tooltip","animationDurationUpdate","animationEasingUpdate","series","layout","symbolSize","label","show","edgeSymbol","edgeSymbolSize","edgeLabel","fontSize","HeartbeatEChartsData","map","item","symbol","value","colors","x","y","links","source","target","lineStyle","opacity","curveness","itemStyle","normal","params","window","addEventListener","resize"],"sources":["src/components/preview/Statistics.vue"],"sourcesContent":["<template>\n    <div>\n      <a-drawer\n          title=\"R1项目概览\"\n          placement=\"right\"\n          :closable=\"false\"\n          :visible=\"visible\"\n          :after-visible-change=\"afterVisibleChange\"\n          @close=\"onClose\"\n      >\n        <div>\n          <a-statistic title=\"Api总数\" suffix=\"个\" :value=\"apiInfo && apiInfo.sum.total_num\" style=\"margin-right: 50px\" />\n          <div id=\"main\" :style=\"echartsStyles\"></div>\n        </div>\n      </a-drawer>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"Statistics\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n  },\n  data(){\n    return{\n      echartsStyles: {\n        width: '100%',\n        height: \"300px\"\n      },\n      myChart: null,\n      visible: false,\n      apiInfo: null\n    }\n  },\n  watch:{\n    openFlag:{\n      handler: function (newVal, oldVal) {\n        if (newVal === true){\n          this.getApiInfo()\n        }else {\n          this.visible = newVal\n        }\n\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag\n    // this.getApiInfo()\n  },\n  methods:{\n    afterVisibleChange(val) {\n      console.log('visible', val);\n    },\n    onClose() {\n      this.$emit('updateDrawerStatus', false)\n    },\n    async getApiInfo() {\n\n       await this.$request.getR1Api().then(res => {\n         if (res.status !== 200) {\n           this.$emit('updateDrawerStatus', false)\n         }else {\n           this.visible = true\n           this.apiInfo = res.data.data\n         }\n       })\n     },\n    echarts() {\n      if (this.myChart != null && this.myChart !== \"\" && this.myChart !== undefined) {\n        this.myChart.dispose();\n      }\n      this.myChart = this.$echarts.init(document.getElementById('main'));\n\n      this.myChart.setOption({\n        //animation:false,// 取消动画\n        title: {\n          text: '数据服务节点(Refresh every 5 seconds)',\n          textStyle: {\n            color: '#a19e9e'\n          }\n        },\n        tooltip: {},\n        animationDurationUpdate: 1500,\n        animationEasingUpdate: 'quinticInOut',\n        series: [\n          {\n            type: 'graph',\n            layout: 'none',\n            symbolSize: 50,\n            // roam: true,\n            label: {\n              show: true\n            },\n            edgeSymbol: ['circle', 'arrow'],\n            edgeSymbolSize: [4, 10],\n            edgeLabel: {\n              fontSize: 20\n            },\n            data: this.HeartbeatEChartsData.map((item) => {\n              return {\n                symbol: item.symbol,\n                name: item.name,\n                value: item.value,\n                colors: item.colors,\n                x: item.x,\n                y: item.y\n              }\n            }),\n            links: this.links.map((item) => {\n              return {\n                source: item.source,\n                target: item.target,\n                lineStyle: item.lineStyle\n              }\n            }),\n            lineStyle: {\n              opacity: 0.9,\n              width: 2,\n              curveness: 0.2\n            },\n            itemStyle: {\n              normal: {\n                color: function (params) {\n                  return params.data.colors; //获取具体的参数\n                }\n              }\n            }\n          }\n        ]\n      })\n\n      // 让图表跟随屏幕自动的去适应\n      window.addEventListener('resize', () => {\n        this.myChart.resize()\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n.statistics{\n  /*width: 100px!important;*/\n}\n/deep/ .ant-drawer-content-wrapper{\n  width: 600px!important;\n  right: 0!important;\n}\n.small-statistic{\n  display: flex;\n  justify-content: start;\n  align-items: center;\n}\n</style>\n"],"mappings":"AAmBA;EACAA,IAAA;EACAC,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,aAAA;QACAC,KAAA;QACAC,MAAA;MACA;MACAC,OAAA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,KAAA;IACAX,QAAA;MACAY,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACA,IAAAD,MAAA;UACA,KAAAE,UAAA;QACA;UACA,KAAAN,OAAA,GAAAI,MAAA;QACA;MAEA;MACA;MACAG,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAR,OAAA,QAAAT,QAAA;IACA;EACA;;EACAkB,OAAA;IACAC,mBAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,YAAAF,GAAA;IACA;IACAG,QAAA;MACA,KAAAC,KAAA;IACA;IACA,MAAAT,WAAA;MAEA,WAAAU,QAAA,CAAAC,QAAA,GAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,KAAAL,KAAA;QACA;UACA,KAAAf,OAAA;UACA,KAAAC,OAAA,GAAAkB,GAAA,CAAAxB,IAAA,CAAAA,IAAA;QACA;MACA;IACA;IACA0B,QAAA;MACA,SAAAtB,OAAA,iBAAAA,OAAA,gBAAAA,OAAA,KAAAuB,SAAA;QACA,KAAAvB,OAAA,CAAAwB,OAAA;MACA;MACA,KAAAxB,OAAA,QAAAyB,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MAEA,KAAA5B,OAAA,CAAA6B,SAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAC,SAAA;YACAC,KAAA;UACA;QACA;QACAC,OAAA;QACAC,uBAAA;QACAC,qBAAA;QACAC,MAAA,GACA;UACA5C,IAAA;UACA6C,MAAA;UACAC,UAAA;UACA;UACAC,KAAA;YACAC,IAAA;UACA;UACAC,UAAA;UACAC,cAAA;UACAC,SAAA;YACAC,QAAA;UACA;UACAjD,IAAA,OAAAkD,oBAAA,CAAAC,GAAA,CAAAC,IAAA;YACA;cACAC,MAAA,EAAAD,IAAA,CAAAC,MAAA;cACA3D,IAAA,EAAA0D,IAAA,CAAA1D,IAAA;cACA4D,KAAA,EAAAF,IAAA,CAAAE,KAAA;cACAC,MAAA,EAAAH,IAAA,CAAAG,MAAA;cACAC,CAAA,EAAAJ,IAAA,CAAAI,CAAA;cACAC,CAAA,EAAAL,IAAA,CAAAK;YACA;UACA;UACAC,KAAA,OAAAA,KAAA,CAAAP,GAAA,CAAAC,IAAA;YACA;cACAO,MAAA,EAAAP,IAAA,CAAAO,MAAA;cACAC,MAAA,EAAAR,IAAA,CAAAQ,MAAA;cACAC,SAAA,EAAAT,IAAA,CAAAS;YACA;UACA;UACAA,SAAA;YACAC,OAAA;YACA5D,KAAA;YACA6D,SAAA;UACA;UACAC,SAAA;YACAC,MAAA;cACA5B,KAAA,WAAAA,CAAA6B,MAAA;gBACA,OAAAA,MAAA,CAAAlE,IAAA,CAAAuD,MAAA;cACA;YACA;UACA;QACA;MAEA;;MAEA;MACAY,MAAA,CAAAC,gBAAA;QACA,KAAAhE,OAAA,CAAAiE,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}