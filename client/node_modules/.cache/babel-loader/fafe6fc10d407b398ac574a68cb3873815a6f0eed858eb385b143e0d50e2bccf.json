{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { nextTick, onActivated, watchEffect, defineComponent, onBeforeUnmount, onMounted, ref, shallowRef, watch } from 'vue';\nimport addEventListenerWrap from '../vc-util/Dom/addEventListener';\nimport { getOffset } from '../vc-util/Dom/css';\nimport classNames from '../_util/classNames';\nimport getScrollBarSize from '../_util/getScrollBarSize';\nimport { useInjectTable } from './context/TableContext';\nimport { useLayoutState } from './hooks/useFrame';\nexport default defineComponent({\n  name: 'StickyScrollBar',\n  inheritAttrs: false,\n  props: ['offsetScroll', 'container', 'scrollBodyRef', 'scrollBodySizeInfo'],\n  emits: ['scroll'],\n  setup(props, _ref) {\n    let {\n      emit,\n      expose\n    } = _ref;\n    const tableContext = useInjectTable();\n    const bodyScrollWidth = shallowRef(0);\n    const bodyWidth = shallowRef(0);\n    const scrollBarWidth = shallowRef(0);\n    watchEffect(() => {\n      bodyScrollWidth.value = props.scrollBodySizeInfo.scrollWidth || 0;\n      bodyWidth.value = props.scrollBodySizeInfo.clientWidth || 0;\n      scrollBarWidth.value = bodyScrollWidth.value && bodyWidth.value * (bodyWidth.value / bodyScrollWidth.value);\n    }, {\n      flush: 'post'\n    });\n    const scrollBarRef = shallowRef();\n    const [scrollState, setScrollState] = useLayoutState({\n      scrollLeft: 0,\n      isHiddenScrollBar: true\n    });\n    const refState = ref({\n      delta: 0,\n      x: 0\n    });\n    const isActive = shallowRef(false);\n    const onMouseUp = () => {\n      isActive.value = false;\n    };\n    const onMouseDown = event => {\n      refState.value = {\n        delta: event.pageX - scrollState.value.scrollLeft,\n        x: 0\n      };\n      isActive.value = true;\n      event.preventDefault();\n    };\n    const onMouseMove = event => {\n      // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n      const {\n        buttons\n      } = event || (window === null || window === void 0 ? void 0 : window.event);\n      if (!isActive.value || buttons === 0) {\n        // If out body mouse up, we can set isActive false when mouse move\n        if (isActive.value) {\n          isActive.value = false;\n        }\n        return;\n      }\n      let left = refState.value.x + event.pageX - refState.value.x - refState.value.delta;\n      if (left <= 0) {\n        left = 0;\n      }\n      if (left + scrollBarWidth.value >= bodyWidth.value) {\n        left = bodyWidth.value - scrollBarWidth.value;\n      }\n      emit('scroll', {\n        scrollLeft: left / bodyWidth.value * (bodyScrollWidth.value + 2)\n      });\n      refState.value.x = event.pageX;\n    };\n    const onContainerScroll = () => {\n      if (!props.scrollBodyRef.value) {\n        return;\n      }\n      const tableOffsetTop = getOffset(props.scrollBodyRef.value).top;\n      const tableBottomOffset = tableOffsetTop + props.scrollBodyRef.value.offsetHeight;\n      const currentClientOffset = props.container === window ? document.documentElement.scrollTop + window.innerHeight : getOffset(props.container).top + props.container.clientHeight;\n      if (tableBottomOffset - getScrollBarSize() <= currentClientOffset || tableOffsetTop >= currentClientOffset - props.offsetScroll) {\n        setScrollState(state => _extends(_extends({}, state), {\n          isHiddenScrollBar: true\n        }));\n      } else {\n        setScrollState(state => _extends(_extends({}, state), {\n          isHiddenScrollBar: false\n        }));\n      }\n    };\n    const setScrollLeft = left => {\n      setScrollState(state => {\n        return _extends(_extends({}, state), {\n          scrollLeft: left / bodyScrollWidth.value * bodyWidth.value || 0\n        });\n      });\n    };\n    expose({\n      setScrollLeft\n    });\n    let onMouseUpListener = null;\n    let onMouseMoveListener = null;\n    let onResizeListener = null;\n    let onScrollListener = null;\n    onMounted(() => {\n      onMouseUpListener = addEventListenerWrap(document.body, 'mouseup', onMouseUp, false);\n      onMouseMoveListener = addEventListenerWrap(document.body, 'mousemove', onMouseMove, false);\n      onResizeListener = addEventListenerWrap(window, 'resize', onContainerScroll, false);\n    });\n    onActivated(() => {\n      nextTick(() => {\n        onContainerScroll();\n      });\n    });\n    onMounted(() => {\n      setTimeout(() => {\n        watch([scrollBarWidth, isActive], () => {\n          onContainerScroll();\n        }, {\n          immediate: true,\n          flush: 'post'\n        });\n      });\n    });\n    watch(() => props.container, () => {\n      onScrollListener === null || onScrollListener === void 0 ? void 0 : onScrollListener.remove();\n      onScrollListener = addEventListenerWrap(props.container, 'scroll', onContainerScroll, false);\n    }, {\n      immediate: true,\n      flush: 'post'\n    });\n    onBeforeUnmount(() => {\n      onMouseUpListener === null || onMouseUpListener === void 0 ? void 0 : onMouseUpListener.remove();\n      onMouseMoveListener === null || onMouseMoveListener === void 0 ? void 0 : onMouseMoveListener.remove();\n      onScrollListener === null || onScrollListener === void 0 ? void 0 : onScrollListener.remove();\n      onResizeListener === null || onResizeListener === void 0 ? void 0 : onResizeListener.remove();\n    });\n    watch(() => _extends({}, scrollState.value), (newState, preState) => {\n      if (newState.isHiddenScrollBar !== (preState === null || preState === void 0 ? void 0 : preState.isHiddenScrollBar) && !newState.isHiddenScrollBar) {\n        setScrollState(state => {\n          const bodyNode = props.scrollBodyRef.value;\n          if (!bodyNode) {\n            return state;\n          }\n          return _extends(_extends({}, state), {\n            scrollLeft: bodyNode.scrollLeft / bodyNode.scrollWidth * bodyNode.clientWidth\n          });\n        });\n      }\n    }, {\n      immediate: true\n    });\n    const scrollbarSize = getScrollBarSize();\n    return () => {\n      if (bodyScrollWidth.value <= bodyWidth.value || !scrollBarWidth.value || scrollState.value.isHiddenScrollBar) {\n        return null;\n      }\n      const {\n        prefixCls\n      } = tableContext;\n      return _createVNode(\"div\", {\n        \"style\": {\n          height: `${scrollbarSize}px`,\n          width: `${bodyWidth.value}px`,\n          bottom: `${props.offsetScroll}px`\n        },\n        \"class\": `${prefixCls}-sticky-scroll`\n      }, [_createVNode(\"div\", {\n        \"onMousedown\": onMouseDown,\n        \"ref\": scrollBarRef,\n        \"class\": classNames(`${prefixCls}-sticky-scroll-bar`, {\n          [`${prefixCls}-sticky-scroll-bar-active`]: isActive.value\n        }),\n        \"style\": {\n          width: `${scrollBarWidth.value}px`,\n          transform: `translate3d(${scrollState.value.scrollLeft}px, 0, 0)`\n        }\n      }, null)]);\n    };\n  }\n});","map":{"version":3,"names":["_extends","createVNode","_createVNode","nextTick","onActivated","watchEffect","defineComponent","onBeforeUnmount","onMounted","ref","shallowRef","watch","addEventListenerWrap","getOffset","classNames","getScrollBarSize","useInjectTable","useLayoutState","name","inheritAttrs","props","emits","setup","_ref","emit","expose","tableContext","bodyScrollWidth","bodyWidth","scrollBarWidth","value","scrollBodySizeInfo","scrollWidth","clientWidth","flush","scrollBarRef","scrollState","setScrollState","scrollLeft","isHiddenScrollBar","refState","delta","x","isActive","onMouseUp","onMouseDown","event","pageX","preventDefault","onMouseMove","buttons","window","left","onContainerScroll","scrollBodyRef","tableOffsetTop","top","tableBottomOffset","offsetHeight","currentClientOffset","container","document","documentElement","scrollTop","innerHeight","clientHeight","offsetScroll","state","setScrollLeft","onMouseUpListener","onMouseMoveListener","onResizeListener","onScrollListener","body","setTimeout","immediate","remove","newState","preState","bodyNode","scrollbarSize","prefixCls","height","width","bottom","transform"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-table/stickyScrollBar.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { nextTick, onActivated, watchEffect, defineComponent, onBeforeUnmount, onMounted, ref, shallowRef, watch } from 'vue';\nimport addEventListenerWrap from '../vc-util/Dom/addEventListener';\nimport { getOffset } from '../vc-util/Dom/css';\nimport classNames from '../_util/classNames';\nimport getScrollBarSize from '../_util/getScrollBarSize';\nimport { useInjectTable } from './context/TableContext';\nimport { useLayoutState } from './hooks/useFrame';\nexport default defineComponent({\n  name: 'StickyScrollBar',\n  inheritAttrs: false,\n  props: ['offsetScroll', 'container', 'scrollBodyRef', 'scrollBodySizeInfo'],\n  emits: ['scroll'],\n  setup(props, _ref) {\n    let {\n      emit,\n      expose\n    } = _ref;\n    const tableContext = useInjectTable();\n    const bodyScrollWidth = shallowRef(0);\n    const bodyWidth = shallowRef(0);\n    const scrollBarWidth = shallowRef(0);\n    watchEffect(() => {\n      bodyScrollWidth.value = props.scrollBodySizeInfo.scrollWidth || 0;\n      bodyWidth.value = props.scrollBodySizeInfo.clientWidth || 0;\n      scrollBarWidth.value = bodyScrollWidth.value && bodyWidth.value * (bodyWidth.value / bodyScrollWidth.value);\n    }, {\n      flush: 'post'\n    });\n    const scrollBarRef = shallowRef();\n    const [scrollState, setScrollState] = useLayoutState({\n      scrollLeft: 0,\n      isHiddenScrollBar: true\n    });\n    const refState = ref({\n      delta: 0,\n      x: 0\n    });\n    const isActive = shallowRef(false);\n    const onMouseUp = () => {\n      isActive.value = false;\n    };\n    const onMouseDown = event => {\n      refState.value = {\n        delta: event.pageX - scrollState.value.scrollLeft,\n        x: 0\n      };\n      isActive.value = true;\n      event.preventDefault();\n    };\n    const onMouseMove = event => {\n      // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n      const {\n        buttons\n      } = event || (window === null || window === void 0 ? void 0 : window.event);\n      if (!isActive.value || buttons === 0) {\n        // If out body mouse up, we can set isActive false when mouse move\n        if (isActive.value) {\n          isActive.value = false;\n        }\n        return;\n      }\n      let left = refState.value.x + event.pageX - refState.value.x - refState.value.delta;\n      if (left <= 0) {\n        left = 0;\n      }\n      if (left + scrollBarWidth.value >= bodyWidth.value) {\n        left = bodyWidth.value - scrollBarWidth.value;\n      }\n      emit('scroll', {\n        scrollLeft: left / bodyWidth.value * (bodyScrollWidth.value + 2)\n      });\n      refState.value.x = event.pageX;\n    };\n    const onContainerScroll = () => {\n      if (!props.scrollBodyRef.value) {\n        return;\n      }\n      const tableOffsetTop = getOffset(props.scrollBodyRef.value).top;\n      const tableBottomOffset = tableOffsetTop + props.scrollBodyRef.value.offsetHeight;\n      const currentClientOffset = props.container === window ? document.documentElement.scrollTop + window.innerHeight : getOffset(props.container).top + props.container.clientHeight;\n      if (tableBottomOffset - getScrollBarSize() <= currentClientOffset || tableOffsetTop >= currentClientOffset - props.offsetScroll) {\n        setScrollState(state => _extends(_extends({}, state), {\n          isHiddenScrollBar: true\n        }));\n      } else {\n        setScrollState(state => _extends(_extends({}, state), {\n          isHiddenScrollBar: false\n        }));\n      }\n    };\n    const setScrollLeft = left => {\n      setScrollState(state => {\n        return _extends(_extends({}, state), {\n          scrollLeft: left / bodyScrollWidth.value * bodyWidth.value || 0\n        });\n      });\n    };\n    expose({\n      setScrollLeft\n    });\n    let onMouseUpListener = null;\n    let onMouseMoveListener = null;\n    let onResizeListener = null;\n    let onScrollListener = null;\n    onMounted(() => {\n      onMouseUpListener = addEventListenerWrap(document.body, 'mouseup', onMouseUp, false);\n      onMouseMoveListener = addEventListenerWrap(document.body, 'mousemove', onMouseMove, false);\n      onResizeListener = addEventListenerWrap(window, 'resize', onContainerScroll, false);\n    });\n    onActivated(() => {\n      nextTick(() => {\n        onContainerScroll();\n      });\n    });\n    onMounted(() => {\n      setTimeout(() => {\n        watch([scrollBarWidth, isActive], () => {\n          onContainerScroll();\n        }, {\n          immediate: true,\n          flush: 'post'\n        });\n      });\n    });\n    watch(() => props.container, () => {\n      onScrollListener === null || onScrollListener === void 0 ? void 0 : onScrollListener.remove();\n      onScrollListener = addEventListenerWrap(props.container, 'scroll', onContainerScroll, false);\n    }, {\n      immediate: true,\n      flush: 'post'\n    });\n    onBeforeUnmount(() => {\n      onMouseUpListener === null || onMouseUpListener === void 0 ? void 0 : onMouseUpListener.remove();\n      onMouseMoveListener === null || onMouseMoveListener === void 0 ? void 0 : onMouseMoveListener.remove();\n      onScrollListener === null || onScrollListener === void 0 ? void 0 : onScrollListener.remove();\n      onResizeListener === null || onResizeListener === void 0 ? void 0 : onResizeListener.remove();\n    });\n    watch(() => _extends({}, scrollState.value), (newState, preState) => {\n      if (newState.isHiddenScrollBar !== (preState === null || preState === void 0 ? void 0 : preState.isHiddenScrollBar) && !newState.isHiddenScrollBar) {\n        setScrollState(state => {\n          const bodyNode = props.scrollBodyRef.value;\n          if (!bodyNode) {\n            return state;\n          }\n          return _extends(_extends({}, state), {\n            scrollLeft: bodyNode.scrollLeft / bodyNode.scrollWidth * bodyNode.clientWidth\n          });\n        });\n      }\n    }, {\n      immediate: true\n    });\n    const scrollbarSize = getScrollBarSize();\n    return () => {\n      if (bodyScrollWidth.value <= bodyWidth.value || !scrollBarWidth.value || scrollState.value.isHiddenScrollBar) {\n        return null;\n      }\n      const {\n        prefixCls\n      } = tableContext;\n      return _createVNode(\"div\", {\n        \"style\": {\n          height: `${scrollbarSize}px`,\n          width: `${bodyWidth.value}px`,\n          bottom: `${props.offsetScroll}px`\n        },\n        \"class\": `${prefixCls}-sticky-scroll`\n      }, [_createVNode(\"div\", {\n        \"onMousedown\": onMouseDown,\n        \"ref\": scrollBarRef,\n        \"class\": classNames(`${prefixCls}-sticky-scroll-bar`, {\n          [`${prefixCls}-sticky-scroll-bar-active`]: isActive.value\n        }),\n        \"style\": {\n          width: `${scrollBarWidth.value}px`,\n          transform: `translate3d(${scrollState.value.scrollLeft}px, 0, 0)`\n        }\n      }, null)]);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}