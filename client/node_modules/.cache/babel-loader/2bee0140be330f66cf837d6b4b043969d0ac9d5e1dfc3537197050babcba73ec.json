{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { TinyColor } from '@ctrl/tinycolor';\nexport default function genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  return _extends(_extends({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorBgMask: new TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}","map":{"version":3,"names":["_extends","TinyColor","genColorMapToken","seed","_ref","generateColorPalettes","generateNeutralColorPalettes","colorSuccess","colorSuccessBase","colorWarning","colorWarningBase","colorError","colorErrorBase","colorInfo","colorInfoBase","colorPrimary","colorPrimaryBase","colorBgBase","colorTextBase","primaryColors","successColors","warningColors","errorColors","infoColors","neutralColors","colorPrimaryBg","colorPrimaryBgHover","colorPrimaryBorder","colorPrimaryBorderHover","colorPrimaryHover","colorPrimaryActive","colorPrimaryTextHover","colorPrimaryText","colorPrimaryTextActive","colorSuccessBg","colorSuccessBgHover","colorSuccessBorder","colorSuccessBorderHover","colorSuccessHover","colorSuccessActive","colorSuccessTextHover","colorSuccessText","colorSuccessTextActive","colorErrorBg","colorErrorBgHover","colorErrorBorder","colorErrorBorderHover","colorErrorHover","colorErrorActive","colorErrorTextHover","colorErrorText","colorErrorTextActive","colorWarningBg","colorWarningBgHover","colorWarningBorder","colorWarningBorderHover","colorWarningHover","colorWarningActive","colorWarningTextHover","colorWarningText","colorWarningTextActive","colorInfoBg","colorInfoBgHover","colorInfoBorder","colorInfoBorderHover","colorInfoHover","colorInfoActive","colorInfoTextHover","colorInfoText","colorInfoTextActive","colorBgMask","setAlpha","toRgbString","colorWhite"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/theme/themes/shared/genColorMapToken.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { TinyColor } from '@ctrl/tinycolor';\nexport default function genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  return _extends(_extends({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorBgMask: new TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}