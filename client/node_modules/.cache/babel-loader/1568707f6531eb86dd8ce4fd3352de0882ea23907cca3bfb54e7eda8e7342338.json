{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MyHeader from \"@/components/common/MyHeader\";\nexport default {\n  name: \"App\",\n  components: {\n    MyHeader\n  },\n  data() {\n    return {\n      collapsed: false,\n      defaultSelectedKeys: [],\n      breadcrumb: [],\n      selectedKeys: [],\n      simpleSidebarData: [{\n        key: \"1\",\n        icon: \"code\",\n        text: \"日志\",\n        link: '/index'\n      }, {\n        key: \"2\",\n        icon: \"code\",\n        text: \"脚本\",\n        link: '/script'\n      }, {\n        key: \"3\",\n        icon: \"bug\",\n        text: \"调试\",\n        link: '/debug'\n      }],\n      subSidebarData: [{\n        key: \"4\",\n        icon: \"branches\",\n        text: \"测试\",\n        children: [{\n          key: \"4-1\",\n          text: \"数据库备份\",\n          link: \"/backup\"\n        }, {\n          key: \"4-2\",\n          text: \"Newman\",\n          link: \"/newman\"\n        }]\n      }, {\n        key: \"5\",\n        icon: \"codepen\",\n        text: \"生成器\",\n        children: [{\n          key: \"5-1\",\n          text: \"代码生成器\",\n          link: \"/code-generator\"\n        }, {\n          key: \"5-2\",\n          text: \"Slate生成器\",\n          link: \"/slate-generator\"\n        }]\n      }],\n      defaultOpenKeys: [],\n      routeName: \"\"\n    };\n  },\n  mounted() {},\n  created() {\n    if (this.defaultSelectedKeys === null) {\n      this.defaultSelectedKeys = ['1'];\n      this.selectedKeys = defaultSelectedKeys;\n      this.breadcrumb = [this.simpleSidebarData[0].text];\n    } else {\n      var path = sessionStorage.getItem('development-tool-path');\n      this.defaultSelectedKeys = this.findKeyByLink(path);\n      this.selectedKeys = this.defaultSelectedKeys;\n      var tempBreadcrumb = [];\n      this.selectedKeys.forEach(item => {\n        tempBreadcrumb = this.findTextByKey(item);\n      });\n      this.defaultOpenKeys = [this.selectedKeys[0]];\n      console.log(this.defaultOpenKeys);\n      this.breadcrumb = tempBreadcrumb;\n    }\n  },\n  methods: {\n    test(val) {\n      console.log(val);\n    },\n    findTextByKey(key) {\n      let result = [];\n      // 在simpleSidebarData中查找\n      for (let item of this.simpleSidebarData) {\n        if (item.key === key) {\n          result.push(item.text);\n          break;\n        }\n      }\n      // 在subSidebarData中查找\n      for (let item of this.subSidebarData) {\n        if (item.key === key) {\n          result.push(item.text);\n          break;\n        }\n        if (item.children && item.children.length > 0) {\n          for (let child of item.children) {\n            if (child.key === key) {\n              result.push(item.text);\n              result.push(child.text);\n              break;\n            }\n          }\n        }\n      }\n      return result;\n    },\n    findKeyByLink(link) {\n      let result = [];\n      // 在simpleSidebarData中查找\n      for (let item of this.simpleSidebarData) {\n        if (item.link === link) {\n          result.push(item.key);\n          break;\n        }\n      }\n      // 在subSidebarData中查找\n      for (let item of this.subSidebarData) {\n        if (item.link === link) {\n          result.push(item.key);\n          break;\n        }\n        if (item.children && item.children.length > 0) {\n          for (let child of item.children) {\n            if (child.link === link) {\n              result.push(item.key);\n              result.push(child.key);\n              break;\n            }\n          }\n        }\n      }\n      return result;\n    }\n  },\n  watch: {\n    $route: {\n      handler: function (newVal, oldVal) {\n        const path = newVal.path;\n        sessionStorage.setItem('development-tool-path', path);\n        this.defaultSelectedKeys = this.findKeyByLink(path);\n        this.selectedKeys = this.defaultSelectedKeys;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["MyHeader","name","components","data","collapsed","defaultSelectedKeys","breadcrumb","selectedKeys","simpleSidebarData","key","icon","text","link","subSidebarData","children","defaultOpenKeys","routeName","mounted","created","path","sessionStorage","getItem","findKeyByLink","tempBreadcrumb","forEach","item","findTextByKey","console","log","methods","test","val","result","push","length","child","watch","$route","handler","newVal","oldVal","setItem","deep"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <a-layout id=\"components-layout-demo-side\" style=\"height: 100vh!important;\">\n      <a-layout-sider v-model=\"collapsed\" collapsible>\n        <div class=\"logo_img\">\n          <img class=\"logo\" src=\"./assets/r1_logo.png\" style=\"background: none;width: 35%;height: auto\"/>\n        </div>\n\n        <!--  导航栏 这里应该拆成组件 -->\n        <a-menu theme=\"dark\" :defaultOpenKeys=\"defaultOpenKeys\"\n                :selectedKeys=\"selectedKeys\"\n                :default-selected-keys=\"defaultSelectedKeys\"\n                mode=\"inline\"\n\n        >\n          <!-- 一级菜单 -->\n          <a-menu-item v-for=\"item in simpleSidebarData\" :key=\"item.key\">\n            <router-link :to=\"item.link\"></router-link>\n            <a-icon :type=\"item.icon\"/>\n            <span>{{ item.text }}</span>\n          </a-menu-item>\n          <!-- 多级菜单 -->\n          <a-sub-menu v-for=\"item in subSidebarData\" :key=\"item.key\"  >\n            <span slot=\"title\">\n              <a-icon :type=\"item.icon\"/>\n              <span>{{ item.text }}</span>\n            </span>\n            <a-menu-item v-for=\"child in item.children\" :key=\"child.key\">\n              <router-link :to=\"child.link\"></router-link>\n              {{ child.text }}\n            </a-menu-item>\n          </a-sub-menu>\n        </a-menu>\n\n      </a-layout-sider>\n      <a-layout style=\"height: 100%;overflow-y: hidden\">\n        <!--  头部组件  -->\n        <MyHeader></MyHeader>\n\n        <!-- 显示内容  -->\n        <a-layout-content style=\"margin: 10px 16px;\">\n          <a-breadcrumb>\n            <span>/&nbsp;&nbsp;</span>\n            <a-breadcrumb-item v-for=\"item in breadcrumb\" :key=\"item\">\n              {{ item }}\n            </a-breadcrumb-item>\n          </a-breadcrumb>\n\n          <router-view style=\"height:95%;overflow-y: auto\"></router-view>\n        </a-layout-content>\n        <a-layout-footer style=\"text-align: center;height: 7%\">\n          Development Tool ©2023 Created by Teamsupport ApiTeam\n        </a-layout-footer>\n      </a-layout>\n    </a-layout>\n  </div>\n</template>\n\n<script>\nimport MyHeader from \"@/components/common/MyHeader\";\n\nexport default {\n  name: \"App\",\n  components: {MyHeader},\n  data() {\n    return {\n      collapsed: false,\n      defaultSelectedKeys: [],\n      breadcrumb: [],\n      selectedKeys: [],\n      simpleSidebarData: [\n        {\n          key: \"1\",\n          icon: \"code\",\n          text: \"日志\",\n          link: '/index'\n        },\n        {\n          key: \"2\",\n          icon: \"code\",\n          text: \"脚本\",\n          link: '/script'\n        },\n        {\n          key: \"3\",\n          icon: \"bug\",\n          text: \"调试\",\n          link: '/debug'\n        },\n      ],\n      subSidebarData: [\n        {\n          key: \"4\",\n          icon: \"branches\",\n          text: \"测试\",\n          children: [\n            {key: \"4-1\", text: \"数据库备份\", link: \"/backup\"},\n            {key: \"4-2\", text: \"Newman\", link: \"/newman\"}\n          ]\n        },\n        {\n          key: \"5\",\n          icon: \"codepen\",\n          text: \"生成器\",\n          children: [\n            {key: \"5-1\", text: \"代码生成器\", link: \"/code-generator\"},\n            {key: \"5-2\", text: \"Slate生成器\", link: \"/slate-generator\"}\n          ]\n        }\n      ],\n      defaultOpenKeys:[],\n      routeName:\"\"\n    };\n  },\n  mounted() {\n  },\n  created() {\n    if (this.defaultSelectedKeys === null){\n      this.defaultSelectedKeys = ['1']\n      this.selectedKeys = defaultSelectedKeys;\n      this.breadcrumb = [this.simpleSidebarData[0].text]\n    }else {\n      var path = sessionStorage.getItem('development-tool-path');\n      this.defaultSelectedKeys = this.findKeyByLink(path)\n      this.selectedKeys = this.defaultSelectedKeys;\n      var tempBreadcrumb = []\n      this.selectedKeys.forEach(item=>{\n        tempBreadcrumb = this.findTextByKey(item)\n      })\n      this.defaultOpenKeys =[this.selectedKeys[0]]\n\n      console.log(this.defaultOpenKeys)\n      this.breadcrumb = tempBreadcrumb\n    }\n  },\n  methods: {\n    test(val){\n      console.log(val)\n    },\n    findTextByKey(key) {\n      let result = [];\n      // 在simpleSidebarData中查找\n      for (let item of this.simpleSidebarData) {\n        if (item.key === key) {\n          result.push(item.text);\n          break;\n        }\n      }\n      // 在subSidebarData中查找\n      for (let item of this.subSidebarData) {\n        if (item.key === key) {\n          result.push(item.text);\n          break;\n        }\n        if (item.children && item.children.length > 0) {\n          for (let child of item.children) {\n            if (child.key === key) {\n              result.push(item.text);\n              result.push(child.text);\n              break;\n            }\n          }\n        }\n      }\n      return result;\n    },\n    findKeyByLink(link) {\n      let result = [];\n      // 在simpleSidebarData中查找\n      for (let item of this.simpleSidebarData) {\n        if (item.link === link) {\n          result.push(item.key);\n          break;\n        }\n      }\n      // 在subSidebarData中查找\n      for (let item of this.subSidebarData) {\n        if (item.link === link) {\n          result.push(item.key);\n          break;\n        }\n        if (item.children && item.children.length > 0) {\n          for (let child of item.children) {\n            if (child.link === link) {\n              result.push(item.key);\n              result.push(child.key);\n              break;\n            }\n          }\n        }\n      }\n      return result;\n    }\n  },\n  watch: {\n    $route: {\n      handler: function (newVal,oldVal) {\n        const path = newVal.path;\n        sessionStorage.setItem('development-tool-path',path)\n        this.defaultSelectedKeys = this.findKeyByLink(path)\n        this.selectedKeys = this.defaultSelectedKeys;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n\n};\n</script>\n\n<style>\n#components-layout-demo-side .logo {\n  height: 32px;\n  background: rgba(255, 255, 255, 0.2);\n  margin: 16px;\n}\n\n.logo_img {\n  display: flex !important;\n  justify-content: center !important;\n\n}\n\n.app {\n  max-height: 100vh !important;\n  overflow-y: hidden;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}