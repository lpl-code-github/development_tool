{"ast":null,"code":"import padEnd from 'lodash/padEnd';\nexport default {\n  name: 'AStatisticNumber',\n  functional: true,\n  render: function render(h, context) {\n    var _context$props = context.props,\n      value = _context$props.value,\n      formatter = _context$props.formatter,\n      precision = _context$props.precision,\n      decimalSeparator = _context$props.decimalSeparator,\n      _context$props$groupS = _context$props.groupSeparator,\n      groupSeparator = _context$props$groupS === undefined ? '' : _context$props$groupS,\n      prefixCls = _context$props.prefixCls;\n    var valueNode = void 0;\n    if (typeof formatter === 'function') {\n      // Customize formatter\n      valueNode = formatter({\n        value: value,\n        h: h\n      });\n    } else {\n      // Internal formatter\n      var val = String(value);\n      var cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/);\n      // Process if illegal number\n      if (!cells) {\n        valueNode = val;\n      } else {\n        var negative = cells[1];\n        var int = cells[2] || '0';\n        var decimal = cells[4] || '';\n        int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n        if (typeof precision === 'number') {\n          decimal = padEnd(decimal, precision, '0').slice(0, precision);\n        }\n        if (decimal) {\n          decimal = '' + decimalSeparator + decimal;\n        }\n        valueNode = [h('span', {\n          key: 'int',\n          'class': prefixCls + '-content-value-int'\n        }, [negative, int]), decimal && h('span', {\n          key: 'decimal',\n          'class': prefixCls + '-content-value-decimal'\n        }, [decimal])];\n      }\n    }\n    return h('span', {\n      'class': prefixCls + '-content-value'\n    }, [valueNode]);\n  }\n};","map":{"version":3,"names":["padEnd","name","functional","render","h","context","_context$props","props","value","formatter","precision","decimalSeparator","_context$props$groupS","groupSeparator","undefined","prefixCls","valueNode","val","String","cells","match","negative","int","decimal","replace","slice","key"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/statistic/Number.js"],"sourcesContent":["import padEnd from 'lodash/padEnd';\n\nexport default {\n  name: 'AStatisticNumber',\n  functional: true,\n  render: function render(h, context) {\n    var _context$props = context.props,\n        value = _context$props.value,\n        formatter = _context$props.formatter,\n        precision = _context$props.precision,\n        decimalSeparator = _context$props.decimalSeparator,\n        _context$props$groupS = _context$props.groupSeparator,\n        groupSeparator = _context$props$groupS === undefined ? '' : _context$props$groupS,\n        prefixCls = _context$props.prefixCls;\n\n    var valueNode = void 0;\n\n    if (typeof formatter === 'function') {\n      // Customize formatter\n      valueNode = formatter({ value: value, h: h });\n    } else {\n      // Internal formatter\n      var val = String(value);\n      var cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/);\n      // Process if illegal number\n      if (!cells) {\n        valueNode = val;\n      } else {\n        var negative = cells[1];\n        var int = cells[2] || '0';\n        var decimal = cells[4] || '';\n\n        int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n        if (typeof precision === 'number') {\n          decimal = padEnd(decimal, precision, '0').slice(0, precision);\n        }\n\n        if (decimal) {\n          decimal = '' + decimalSeparator + decimal;\n        }\n\n        valueNode = [h(\n          'span',\n          { key: 'int', 'class': prefixCls + '-content-value-int' },\n          [negative, int]\n        ), decimal && h(\n          'span',\n          { key: 'decimal', 'class': prefixCls + '-content-value-decimal' },\n          [decimal]\n        )];\n      }\n    }\n\n    return h(\n      'span',\n      { 'class': prefixCls + '-content-value' },\n      [valueNode]\n    );\n  }\n};"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAElC,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE,IAAI;EAChBC,MAAM,EAAE,SAASA,MAAMA,CAACC,CAAC,EAAEC,OAAO,EAAE;IAClC,IAAIC,cAAc,GAAGD,OAAO,CAACE,KAAK;MAC9BC,KAAK,GAAGF,cAAc,CAACE,KAAK;MAC5BC,SAAS,GAAGH,cAAc,CAACG,SAAS;MACpCC,SAAS,GAAGJ,cAAc,CAACI,SAAS;MACpCC,gBAAgB,GAAGL,cAAc,CAACK,gBAAgB;MAClDC,qBAAqB,GAAGN,cAAc,CAACO,cAAc;MACrDA,cAAc,GAAGD,qBAAqB,KAAKE,SAAS,GAAG,EAAE,GAAGF,qBAAqB;MACjFG,SAAS,GAAGT,cAAc,CAACS,SAAS;IAExC,IAAIC,SAAS,GAAG,KAAK,CAAC;IAEtB,IAAI,OAAOP,SAAS,KAAK,UAAU,EAAE;MACnC;MACAO,SAAS,GAAGP,SAAS,CAAC;QAAED,KAAK,EAAEA,KAAK;QAAEJ,CAAC,EAAEA;MAAE,CAAC,CAAC;IAC/C,CAAC,MAAM;MACL;MACA,IAAIa,GAAG,GAAGC,MAAM,CAACV,KAAK,CAAC;MACvB,IAAIW,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,uBAAuB,CAAC;MAC9C;MACA,IAAI,CAACD,KAAK,EAAE;QACVH,SAAS,GAAGC,GAAG;MACjB,CAAC,MAAM;QACL,IAAII,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;QACvB,IAAIG,GAAG,GAAGH,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG;QACzB,IAAII,OAAO,GAAGJ,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;QAE5BG,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,uBAAuB,EAAEX,cAAc,CAAC;QAC1D,IAAI,OAAOH,SAAS,KAAK,QAAQ,EAAE;UACjCa,OAAO,GAAGvB,MAAM,CAACuB,OAAO,EAAEb,SAAS,EAAE,GAAG,CAAC,CAACe,KAAK,CAAC,CAAC,EAAEf,SAAS,CAAC;QAC/D;QAEA,IAAIa,OAAO,EAAE;UACXA,OAAO,GAAG,EAAE,GAAGZ,gBAAgB,GAAGY,OAAO;QAC3C;QAEAP,SAAS,GAAG,CAACZ,CAAC,CACZ,MAAM,EACN;UAAEsB,GAAG,EAAE,KAAK;UAAE,OAAO,EAAEX,SAAS,GAAG;QAAqB,CAAC,EACzD,CAACM,QAAQ,EAAEC,GAAG,CAChB,CAAC,EAAEC,OAAO,IAAInB,CAAC,CACb,MAAM,EACN;UAAEsB,GAAG,EAAE,SAAS;UAAE,OAAO,EAAEX,SAAS,GAAG;QAAyB,CAAC,EACjE,CAACQ,OAAO,CACV,CAAC,CAAC;MACJ;IACF;IAEA,OAAOnB,CAAC,CACN,MAAM,EACN;MAAE,OAAO,EAAEW,SAAS,GAAG;IAAiB,CAAC,EACzC,CAACC,SAAS,CACZ,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}