{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useInjectKeysState, useInjectTreeContext } from './contextTypes';\nimport Indent from './Indent';\nimport { convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport { computed, defineComponent, getCurrentInstance, onMounted, onUpdated, reactive, shallowRef } from 'vue';\nimport { treeNodeProps } from './props';\nimport classNames from '../_util/classNames';\nimport { warning } from '../vc-util/warning';\nimport pickAttrs from '../_util/pickAttrs';\nimport eagerComputed from '../_util/eagerComputed';\nconst ICON_OPEN = 'open';\nconst ICON_CLOSE = 'close';\nconst defaultTitle = '---';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ATreeNode',\n  inheritAttrs: false,\n  props: treeNodeProps,\n  isTreeNode: 1,\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      expose\n    } = _ref;\n    warning(!('slots' in props.data), `treeData slots is deprecated, please use ${Object.keys(props.data.slots || {}).map(key => '`v-slot:' + key + '` ')}instead`);\n    const dragNodeHighlight = shallowRef(false);\n    const context = useInjectTreeContext();\n    const {\n      expandedKeysSet,\n      selectedKeysSet,\n      loadedKeysSet,\n      loadingKeysSet,\n      checkedKeysSet,\n      halfCheckedKeysSet\n    } = useInjectKeysState();\n    const {\n      dragOverNodeKey,\n      dropPosition,\n      keyEntities\n    } = context.value;\n    const mergedTreeNodeProps = computed(() => {\n      return getTreeNodeProps(props.eventKey, {\n        expandedKeysSet: expandedKeysSet.value,\n        selectedKeysSet: selectedKeysSet.value,\n        loadedKeysSet: loadedKeysSet.value,\n        loadingKeysSet: loadingKeysSet.value,\n        checkedKeysSet: checkedKeysSet.value,\n        halfCheckedKeysSet: halfCheckedKeysSet.value,\n        dragOverNodeKey,\n        dropPosition,\n        keyEntities\n      });\n    });\n    const expanded = eagerComputed(() => mergedTreeNodeProps.value.expanded);\n    const selected = eagerComputed(() => mergedTreeNodeProps.value.selected);\n    const checked = eagerComputed(() => mergedTreeNodeProps.value.checked);\n    const loaded = eagerComputed(() => mergedTreeNodeProps.value.loaded);\n    const loading = eagerComputed(() => mergedTreeNodeProps.value.loading);\n    const halfChecked = eagerComputed(() => mergedTreeNodeProps.value.halfChecked);\n    const dragOver = eagerComputed(() => mergedTreeNodeProps.value.dragOver);\n    const dragOverGapTop = eagerComputed(() => mergedTreeNodeProps.value.dragOverGapTop);\n    const dragOverGapBottom = eagerComputed(() => mergedTreeNodeProps.value.dragOverGapBottom);\n    const pos = eagerComputed(() => mergedTreeNodeProps.value.pos);\n    const selectHandle = shallowRef();\n    const hasChildren = computed(() => {\n      const {\n        eventKey\n      } = props;\n      const {\n        keyEntities\n      } = context.value;\n      const {\n        children\n      } = keyEntities[eventKey] || {};\n      return !!(children || []).length;\n    });\n    const isLeaf = computed(() => {\n      const {\n        isLeaf\n      } = props;\n      const {\n        loadData\n      } = context.value;\n      const has = hasChildren.value;\n      if (isLeaf === false) {\n        return false;\n      }\n      return isLeaf || !loadData && !has || loadData && loaded.value && !has;\n    });\n    const nodeState = computed(() => {\n      if (isLeaf.value) {\n        return null;\n      }\n      return expanded.value ? ICON_OPEN : ICON_CLOSE;\n    });\n    const isDisabled = computed(() => {\n      const {\n        disabled\n      } = props;\n      const {\n        disabled: treeDisabled\n      } = context.value;\n      return !!(treeDisabled || disabled);\n    });\n    const isCheckable = computed(() => {\n      const {\n        checkable\n      } = props;\n      const {\n        checkable: treeCheckable\n      } = context.value;\n      // Return false if tree or treeNode is not checkable\n      if (!treeCheckable || checkable === false) return false;\n      return treeCheckable;\n    });\n    const isSelectable = computed(() => {\n      const {\n        selectable\n      } = props;\n      const {\n        selectable: treeSelectable\n      } = context.value;\n      // Ignore when selectable is undefined or null\n      if (typeof selectable === 'boolean') {\n        return selectable;\n      }\n      return treeSelectable;\n    });\n    const renderArgsData = computed(() => {\n      const {\n        data,\n        active,\n        checkable,\n        disableCheckbox,\n        disabled,\n        selectable\n      } = props;\n      return _extends(_extends({\n        active,\n        checkable,\n        disableCheckbox,\n        disabled,\n        selectable\n      }, data), {\n        dataRef: data,\n        data,\n        isLeaf: isLeaf.value,\n        checked: checked.value,\n        expanded: expanded.value,\n        loading: loading.value,\n        selected: selected.value,\n        halfChecked: halfChecked.value\n      });\n    });\n    const instance = getCurrentInstance();\n    const eventData = computed(() => {\n      const {\n        eventKey\n      } = props;\n      const {\n        keyEntities\n      } = context.value;\n      const {\n        parent\n      } = keyEntities[eventKey] || {};\n      return _extends(_extends({}, convertNodePropsToEventData(_extends({}, props, mergedTreeNodeProps.value))), {\n        parent\n      });\n    });\n    const dragNodeEvent = reactive({\n      eventData,\n      eventKey: computed(() => props.eventKey),\n      selectHandle,\n      pos,\n      key: instance.vnode.key\n    });\n    expose(dragNodeEvent);\n    const onSelectorDoubleClick = e => {\n      const {\n        onNodeDoubleClick\n      } = context.value;\n      onNodeDoubleClick(e, eventData.value);\n    };\n    const onSelect = e => {\n      if (isDisabled.value) return;\n      const {\n        onNodeSelect\n      } = context.value;\n      e.preventDefault();\n      onNodeSelect(e, eventData.value);\n    };\n    const onCheck = e => {\n      if (isDisabled.value) return;\n      const {\n        disableCheckbox\n      } = props;\n      const {\n        onNodeCheck\n      } = context.value;\n      if (!isCheckable.value || disableCheckbox) return;\n      e.preventDefault();\n      const targetChecked = !checked.value;\n      onNodeCheck(e, eventData.value, targetChecked);\n    };\n    const onSelectorClick = e => {\n      // Click trigger before select/check operation\n      const {\n        onNodeClick\n      } = context.value;\n      onNodeClick(e, eventData.value);\n      if (isSelectable.value) {\n        onSelect(e);\n      } else {\n        onCheck(e);\n      }\n    };\n    const onMouseEnter = e => {\n      const {\n        onNodeMouseEnter\n      } = context.value;\n      onNodeMouseEnter(e, eventData.value);\n    };\n    const onMouseLeave = e => {\n      const {\n        onNodeMouseLeave\n      } = context.value;\n      onNodeMouseLeave(e, eventData.value);\n    };\n    const onContextmenu = e => {\n      const {\n        onNodeContextMenu\n      } = context.value;\n      onNodeContextMenu(e, eventData.value);\n    };\n    const onDragStart = e => {\n      const {\n        onNodeDragStart\n      } = context.value;\n      e.stopPropagation();\n      dragNodeHighlight.value = true;\n      onNodeDragStart(e, dragNodeEvent);\n      try {\n        // ie throw error\n        // firefox-need-it\n        e.dataTransfer.setData('text/plain', '');\n      } catch (error) {\n        // empty\n      }\n    };\n    const onDragEnter = e => {\n      const {\n        onNodeDragEnter\n      } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragEnter(e, dragNodeEvent);\n    };\n    const onDragOver = e => {\n      const {\n        onNodeDragOver\n      } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragOver(e, dragNodeEvent);\n    };\n    const onDragLeave = e => {\n      const {\n        onNodeDragLeave\n      } = context.value;\n      e.stopPropagation();\n      onNodeDragLeave(e, dragNodeEvent);\n    };\n    const onDragEnd = e => {\n      const {\n        onNodeDragEnd\n      } = context.value;\n      e.stopPropagation();\n      dragNodeHighlight.value = false;\n      onNodeDragEnd(e, dragNodeEvent);\n    };\n    const onDrop = e => {\n      const {\n        onNodeDrop\n      } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      dragNodeHighlight.value = false;\n      onNodeDrop(e, dragNodeEvent);\n    };\n    // Disabled item still can be switch\n    const onExpand = e => {\n      const {\n        onNodeExpand\n      } = context.value;\n      if (loading.value) return;\n      onNodeExpand(e, eventData.value);\n    };\n    const isDraggable = () => {\n      const {\n        data\n      } = props;\n      const {\n        draggable\n      } = context.value;\n      return !!(draggable && (!draggable.nodeDraggable || draggable.nodeDraggable(data)));\n    };\n    // ==================== Render: Drag Handler ====================\n    const renderDragHandler = () => {\n      const {\n        draggable,\n        prefixCls\n      } = context.value;\n      return draggable && (draggable === null || draggable === void 0 ? void 0 : draggable.icon) ? _createVNode(\"span\", {\n        \"class\": `${prefixCls}-draggable-icon`\n      }, [draggable.icon]) : null;\n    };\n    const renderSwitcherIconDom = () => {\n      var _a, _b, _c;\n      const {\n        switcherIcon: switcherIconFromProps = slots.switcherIcon || ((_a = context.value.slots) === null || _a === void 0 ? void 0 : _a[(_c = (_b = props.data) === null || _b === void 0 ? void 0 : _b.slots) === null || _c === void 0 ? void 0 : _c.switcherIcon])\n      } = props;\n      const {\n        switcherIcon: switcherIconFromCtx\n      } = context.value;\n      const switcherIcon = switcherIconFromProps || switcherIconFromCtx;\n      // if switcherIconDom is null, no render switcher span\n      if (typeof switcherIcon === 'function') {\n        return switcherIcon(renderArgsData.value);\n      }\n      return switcherIcon;\n    };\n    // Load data to avoid default expanded tree without data\n    const syncLoadData = () => {\n      //const { expanded, loading, loaded } = props;\n      const {\n        loadData,\n        onNodeLoad\n      } = context.value;\n      if (loading.value) {\n        return;\n      }\n      // read from state to avoid loadData at same time\n      if (loadData && expanded.value && !isLeaf.value) {\n        // We needn't reload data when has children in sync logic\n        // It's only needed in node expanded\n        if (!hasChildren.value && !loaded.value) {\n          onNodeLoad(eventData.value);\n        }\n      }\n    };\n    onMounted(() => {\n      syncLoadData();\n    });\n    onUpdated(() => {\n      // https://github.com/vueComponent/ant-design-vue/issues/4835\n      syncLoadData();\n    });\n    // Switcher\n    const renderSwitcher = () => {\n      const {\n        prefixCls\n      } = context.value;\n      // if switcherIconDom is null, no render switcher span\n      const switcherIconDom = renderSwitcherIconDom();\n      if (isLeaf.value) {\n        return switcherIconDom !== false ? _createVNode(\"span\", {\n          \"class\": classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher-noop`)\n        }, [switcherIconDom]) : null;\n      }\n      const switcherCls = classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher_${expanded.value ? ICON_OPEN : ICON_CLOSE}`);\n      return switcherIconDom !== false ? _createVNode(\"span\", {\n        \"onClick\": onExpand,\n        \"class\": switcherCls\n      }, [switcherIconDom]) : null;\n    };\n    // Checkbox\n    const renderCheckbox = () => {\n      var _a, _b;\n      const {\n        disableCheckbox\n      } = props;\n      const {\n        prefixCls\n      } = context.value;\n      const disabled = isDisabled.value;\n      const checkable = isCheckable.value;\n      if (!checkable) return null;\n      return _createVNode(\"span\", {\n        \"class\": classNames(`${prefixCls}-checkbox`, checked.value && `${prefixCls}-checkbox-checked`, !checked.value && halfChecked.value && `${prefixCls}-checkbox-indeterminate`, (disabled || disableCheckbox) && `${prefixCls}-checkbox-disabled`),\n        \"onClick\": onCheck\n      }, [(_b = (_a = context.value).customCheckable) === null || _b === void 0 ? void 0 : _b.call(_a)]);\n    };\n    const renderIcon = () => {\n      const {\n        prefixCls\n      } = context.value;\n      return _createVNode(\"span\", {\n        \"class\": classNames(`${prefixCls}-iconEle`, `${prefixCls}-icon__${nodeState.value || 'docu'}`, loading.value && `${prefixCls}-icon_loading`)\n      }, null);\n    };\n    const renderDropIndicator = () => {\n      const {\n        disabled,\n        eventKey\n      } = props;\n      const {\n        draggable,\n        dropLevelOffset,\n        dropPosition,\n        prefixCls,\n        indent,\n        dropIndicatorRender,\n        dragOverNodeKey,\n        direction\n      } = context.value;\n      const rootDraggable = draggable !== false;\n      // allowDrop is calculated in Tree.tsx, there is no need for calc it here\n      const showIndicator = !disabled && rootDraggable && dragOverNodeKey === eventKey;\n      return showIndicator ? dropIndicatorRender({\n        dropPosition,\n        dropLevelOffset,\n        indent,\n        prefixCls,\n        direction\n      }) : null;\n    };\n    // Icon + Title\n    const renderSelector = () => {\n      var _a, _b, _c, _d, _e, _f;\n      const {\n        // title = slots.title ||\n        //   context.value.slots?.[props.data?.slots?.title] ||\n        //   context.value.slots?.title,\n        // selected,\n        icon = slots.icon,\n        // loading,\n        data\n      } = props;\n      const title = slots.title || ((_a = context.value.slots) === null || _a === void 0 ? void 0 : _a[(_c = (_b = props.data) === null || _b === void 0 ? void 0 : _b.slots) === null || _c === void 0 ? void 0 : _c.title]) || ((_d = context.value.slots) === null || _d === void 0 ? void 0 : _d.title) || props.title;\n      const {\n        prefixCls,\n        showIcon,\n        icon: treeIcon,\n        loadData\n        // slots: contextSlots,\n      } = context.value;\n      const disabled = isDisabled.value;\n      const wrapClass = `${prefixCls}-node-content-wrapper`;\n      // Icon - Still show loading icon when loading without showIcon\n      let $icon;\n      if (showIcon) {\n        const currentIcon = icon || ((_e = context.value.slots) === null || _e === void 0 ? void 0 : _e[(_f = data === null || data === void 0 ? void 0 : data.slots) === null || _f === void 0 ? void 0 : _f.icon]) || treeIcon;\n        $icon = currentIcon ? _createVNode(\"span\", {\n          \"class\": classNames(`${prefixCls}-iconEle`, `${prefixCls}-icon__customize`)\n        }, [typeof currentIcon === 'function' ? currentIcon(renderArgsData.value) : currentIcon]) : renderIcon();\n      } else if (loadData && loading.value) {\n        $icon = renderIcon();\n      }\n      // Title\n      let titleNode;\n      if (typeof title === 'function') {\n        titleNode = title(renderArgsData.value);\n        // } else if (contextSlots.titleRender) {\n        //   titleNode = contextSlots.titleRender(renderArgsData.value);\n      } else {\n        titleNode = title;\n      }\n      titleNode = titleNode === undefined ? defaultTitle : titleNode;\n      const $title = _createVNode(\"span\", {\n        \"class\": `${prefixCls}-title`\n      }, [titleNode]);\n      return _createVNode(\"span\", {\n        \"ref\": selectHandle,\n        \"title\": typeof title === 'string' ? title : '',\n        \"class\": classNames(`${wrapClass}`, `${wrapClass}-${nodeState.value || 'normal'}`, !disabled && (selected.value || dragNodeHighlight.value) && `${prefixCls}-node-selected`),\n        \"onMouseenter\": onMouseEnter,\n        \"onMouseleave\": onMouseLeave,\n        \"onContextmenu\": onContextmenu,\n        \"onClick\": onSelectorClick,\n        \"onDblclick\": onSelectorDoubleClick\n      }, [$icon, $title, renderDropIndicator()]);\n    };\n    return () => {\n      const _a = _extends(_extends({}, props), attrs),\n        {\n          eventKey,\n          isLeaf,\n          isStart,\n          isEnd,\n          domRef,\n          active,\n          data,\n          onMousemove,\n          selectable\n        } = _a,\n        otherProps = __rest(_a, [\"eventKey\", \"isLeaf\", \"isStart\", \"isEnd\", \"domRef\", \"active\", \"data\", \"onMousemove\", \"selectable\"]);\n      const {\n        prefixCls,\n        filterTreeNode,\n        keyEntities,\n        dropContainerKey,\n        dropTargetKey,\n        draggingNodeKey\n      } = context.value;\n      const disabled = isDisabled.value;\n      const dataOrAriaAttributeProps = pickAttrs(otherProps, {\n        aria: true,\n        data: true\n      });\n      const {\n        level\n      } = keyEntities[eventKey] || {};\n      const isEndNode = isEnd[isEnd.length - 1];\n      const mergedDraggable = isDraggable();\n      const draggableWithoutDisabled = !disabled && mergedDraggable;\n      const dragging = draggingNodeKey === eventKey;\n      const ariaSelected = selectable !== undefined ? {\n        'aria-selected': !!selectable\n      } : undefined;\n      // console.log(1);\n      return _createVNode(\"div\", _objectSpread(_objectSpread({\n        \"ref\": domRef,\n        \"class\": classNames(attrs.class, `${prefixCls}-treenode`, {\n          [`${prefixCls}-treenode-disabled`]: disabled,\n          [`${prefixCls}-treenode-switcher-${expanded.value ? 'open' : 'close'}`]: !isLeaf,\n          [`${prefixCls}-treenode-checkbox-checked`]: checked.value,\n          [`${prefixCls}-treenode-checkbox-indeterminate`]: halfChecked.value,\n          [`${prefixCls}-treenode-selected`]: selected.value,\n          [`${prefixCls}-treenode-loading`]: loading.value,\n          [`${prefixCls}-treenode-active`]: active,\n          [`${prefixCls}-treenode-leaf-last`]: isEndNode,\n          [`${prefixCls}-treenode-draggable`]: draggableWithoutDisabled,\n          dragging,\n          'drop-target': dropTargetKey === eventKey,\n          'drop-container': dropContainerKey === eventKey,\n          'drag-over': !disabled && dragOver.value,\n          'drag-over-gap-top': !disabled && dragOverGapTop.value,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom.value,\n          'filter-node': filterTreeNode && filterTreeNode(eventData.value)\n        }),\n        \"style\": attrs.style,\n        \"draggable\": draggableWithoutDisabled,\n        \"aria-grabbed\": dragging,\n        \"onDragstart\": draggableWithoutDisabled ? onDragStart : undefined,\n        \"onDragenter\": mergedDraggable ? onDragEnter : undefined,\n        \"onDragover\": mergedDraggable ? onDragOver : undefined,\n        \"onDragleave\": mergedDraggable ? onDragLeave : undefined,\n        \"onDrop\": mergedDraggable ? onDrop : undefined,\n        \"onDragend\": mergedDraggable ? onDragEnd : undefined,\n        \"onMousemove\": onMousemove\n      }, ariaSelected), dataOrAriaAttributeProps), [_createVNode(Indent, {\n        \"prefixCls\": prefixCls,\n        \"level\": level,\n        \"isStart\": isStart,\n        \"isEnd\": isEnd\n      }, null), renderDragHandler(), renderSwitcher(), renderCheckbox(), renderSelector()]);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_extends","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useInjectKeysState","useInjectTreeContext","Indent","convertNodePropsToEventData","getTreeNodeProps","computed","defineComponent","getCurrentInstance","onMounted","onUpdated","reactive","shallowRef","treeNodeProps","classNames","warning","pickAttrs","eagerComputed","ICON_OPEN","ICON_CLOSE","defaultTitle","compatConfig","MODE","name","inheritAttrs","props","isTreeNode","setup","_ref","attrs","slots","expose","data","keys","map","key","dragNodeHighlight","context","expandedKeysSet","selectedKeysSet","loadedKeysSet","loadingKeysSet","checkedKeysSet","halfCheckedKeysSet","dragOverNodeKey","dropPosition","keyEntities","value","mergedTreeNodeProps","eventKey","expanded","selected","checked","loaded","loading","halfChecked","dragOver","dragOverGapTop","dragOverGapBottom","pos","selectHandle","hasChildren","children","isLeaf","loadData","has","nodeState","isDisabled","disabled","treeDisabled","isCheckable","checkable","treeCheckable","isSelectable","selectable","treeSelectable","renderArgsData","active","disableCheckbox","dataRef","instance","eventData","parent","dragNodeEvent","vnode","onSelectorDoubleClick","onNodeDoubleClick","onSelect","onNodeSelect","preventDefault","onCheck","onNodeCheck","targetChecked","onSelectorClick","onNodeClick","onMouseEnter","onNodeMouseEnter","onMouseLeave","onNodeMouseLeave","onContextmenu","onNodeContextMenu","onDragStart","onNodeDragStart","stopPropagation","dataTransfer","setData","error","onDragEnter","onNodeDragEnter","onDragOver","onNodeDragOver","onDragLeave","onNodeDragLeave","onDragEnd","onNodeDragEnd","onDrop","onNodeDrop","onExpand","onNodeExpand","isDraggable","draggable","nodeDraggable","renderDragHandler","prefixCls","icon","renderSwitcherIconDom","_a","_b","_c","switcherIcon","switcherIconFromProps","switcherIconFromCtx","syncLoadData","onNodeLoad","renderSwitcher","switcherIconDom","switcherCls","renderCheckbox","customCheckable","renderIcon","renderDropIndicator","dropLevelOffset","indent","dropIndicatorRender","direction","rootDraggable","showIndicator","renderSelector","_d","_e","_f","title","showIcon","treeIcon","wrapClass","$icon","currentIcon","titleNode","undefined","$title","isStart","isEnd","domRef","onMousemove","otherProps","filterTreeNode","dropContainerKey","dropTargetKey","draggingNodeKey","dataOrAriaAttributeProps","aria","level","isEndNode","mergedDraggable","draggableWithoutDisabled","dragging","ariaSelected","class","style"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-tree/TreeNode.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useInjectKeysState, useInjectTreeContext } from './contextTypes';\nimport Indent from './Indent';\nimport { convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport { computed, defineComponent, getCurrentInstance, onMounted, onUpdated, reactive, shallowRef } from 'vue';\nimport { treeNodeProps } from './props';\nimport classNames from '../_util/classNames';\nimport { warning } from '../vc-util/warning';\nimport pickAttrs from '../_util/pickAttrs';\nimport eagerComputed from '../_util/eagerComputed';\nconst ICON_OPEN = 'open';\nconst ICON_CLOSE = 'close';\nconst defaultTitle = '---';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ATreeNode',\n  inheritAttrs: false,\n  props: treeNodeProps,\n  isTreeNode: 1,\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      expose\n    } = _ref;\n    warning(!('slots' in props.data), `treeData slots is deprecated, please use ${Object.keys(props.data.slots || {}).map(key => '`v-slot:' + key + '` ')}instead`);\n    const dragNodeHighlight = shallowRef(false);\n    const context = useInjectTreeContext();\n    const {\n      expandedKeysSet,\n      selectedKeysSet,\n      loadedKeysSet,\n      loadingKeysSet,\n      checkedKeysSet,\n      halfCheckedKeysSet\n    } = useInjectKeysState();\n    const {\n      dragOverNodeKey,\n      dropPosition,\n      keyEntities\n    } = context.value;\n    const mergedTreeNodeProps = computed(() => {\n      return getTreeNodeProps(props.eventKey, {\n        expandedKeysSet: expandedKeysSet.value,\n        selectedKeysSet: selectedKeysSet.value,\n        loadedKeysSet: loadedKeysSet.value,\n        loadingKeysSet: loadingKeysSet.value,\n        checkedKeysSet: checkedKeysSet.value,\n        halfCheckedKeysSet: halfCheckedKeysSet.value,\n        dragOverNodeKey,\n        dropPosition,\n        keyEntities\n      });\n    });\n    const expanded = eagerComputed(() => mergedTreeNodeProps.value.expanded);\n    const selected = eagerComputed(() => mergedTreeNodeProps.value.selected);\n    const checked = eagerComputed(() => mergedTreeNodeProps.value.checked);\n    const loaded = eagerComputed(() => mergedTreeNodeProps.value.loaded);\n    const loading = eagerComputed(() => mergedTreeNodeProps.value.loading);\n    const halfChecked = eagerComputed(() => mergedTreeNodeProps.value.halfChecked);\n    const dragOver = eagerComputed(() => mergedTreeNodeProps.value.dragOver);\n    const dragOverGapTop = eagerComputed(() => mergedTreeNodeProps.value.dragOverGapTop);\n    const dragOverGapBottom = eagerComputed(() => mergedTreeNodeProps.value.dragOverGapBottom);\n    const pos = eagerComputed(() => mergedTreeNodeProps.value.pos);\n    const selectHandle = shallowRef();\n    const hasChildren = computed(() => {\n      const {\n        eventKey\n      } = props;\n      const {\n        keyEntities\n      } = context.value;\n      const {\n        children\n      } = keyEntities[eventKey] || {};\n      return !!(children || []).length;\n    });\n    const isLeaf = computed(() => {\n      const {\n        isLeaf\n      } = props;\n      const {\n        loadData\n      } = context.value;\n      const has = hasChildren.value;\n      if (isLeaf === false) {\n        return false;\n      }\n      return isLeaf || !loadData && !has || loadData && loaded.value && !has;\n    });\n    const nodeState = computed(() => {\n      if (isLeaf.value) {\n        return null;\n      }\n      return expanded.value ? ICON_OPEN : ICON_CLOSE;\n    });\n    const isDisabled = computed(() => {\n      const {\n        disabled\n      } = props;\n      const {\n        disabled: treeDisabled\n      } = context.value;\n      return !!(treeDisabled || disabled);\n    });\n    const isCheckable = computed(() => {\n      const {\n        checkable\n      } = props;\n      const {\n        checkable: treeCheckable\n      } = context.value;\n      // Return false if tree or treeNode is not checkable\n      if (!treeCheckable || checkable === false) return false;\n      return treeCheckable;\n    });\n    const isSelectable = computed(() => {\n      const {\n        selectable\n      } = props;\n      const {\n        selectable: treeSelectable\n      } = context.value;\n      // Ignore when selectable is undefined or null\n      if (typeof selectable === 'boolean') {\n        return selectable;\n      }\n      return treeSelectable;\n    });\n    const renderArgsData = computed(() => {\n      const {\n        data,\n        active,\n        checkable,\n        disableCheckbox,\n        disabled,\n        selectable\n      } = props;\n      return _extends(_extends({\n        active,\n        checkable,\n        disableCheckbox,\n        disabled,\n        selectable\n      }, data), {\n        dataRef: data,\n        data,\n        isLeaf: isLeaf.value,\n        checked: checked.value,\n        expanded: expanded.value,\n        loading: loading.value,\n        selected: selected.value,\n        halfChecked: halfChecked.value\n      });\n    });\n    const instance = getCurrentInstance();\n    const eventData = computed(() => {\n      const {\n        eventKey\n      } = props;\n      const {\n        keyEntities\n      } = context.value;\n      const {\n        parent\n      } = keyEntities[eventKey] || {};\n      return _extends(_extends({}, convertNodePropsToEventData(_extends({}, props, mergedTreeNodeProps.value))), {\n        parent\n      });\n    });\n    const dragNodeEvent = reactive({\n      eventData,\n      eventKey: computed(() => props.eventKey),\n      selectHandle,\n      pos,\n      key: instance.vnode.key\n    });\n    expose(dragNodeEvent);\n    const onSelectorDoubleClick = e => {\n      const {\n        onNodeDoubleClick\n      } = context.value;\n      onNodeDoubleClick(e, eventData.value);\n    };\n    const onSelect = e => {\n      if (isDisabled.value) return;\n      const {\n        onNodeSelect\n      } = context.value;\n      e.preventDefault();\n      onNodeSelect(e, eventData.value);\n    };\n    const onCheck = e => {\n      if (isDisabled.value) return;\n      const {\n        disableCheckbox\n      } = props;\n      const {\n        onNodeCheck\n      } = context.value;\n      if (!isCheckable.value || disableCheckbox) return;\n      e.preventDefault();\n      const targetChecked = !checked.value;\n      onNodeCheck(e, eventData.value, targetChecked);\n    };\n    const onSelectorClick = e => {\n      // Click trigger before select/check operation\n      const {\n        onNodeClick\n      } = context.value;\n      onNodeClick(e, eventData.value);\n      if (isSelectable.value) {\n        onSelect(e);\n      } else {\n        onCheck(e);\n      }\n    };\n    const onMouseEnter = e => {\n      const {\n        onNodeMouseEnter\n      } = context.value;\n      onNodeMouseEnter(e, eventData.value);\n    };\n    const onMouseLeave = e => {\n      const {\n        onNodeMouseLeave\n      } = context.value;\n      onNodeMouseLeave(e, eventData.value);\n    };\n    const onContextmenu = e => {\n      const {\n        onNodeContextMenu\n      } = context.value;\n      onNodeContextMenu(e, eventData.value);\n    };\n    const onDragStart = e => {\n      const {\n        onNodeDragStart\n      } = context.value;\n      e.stopPropagation();\n      dragNodeHighlight.value = true;\n      onNodeDragStart(e, dragNodeEvent);\n      try {\n        // ie throw error\n        // firefox-need-it\n        e.dataTransfer.setData('text/plain', '');\n      } catch (error) {\n        // empty\n      }\n    };\n    const onDragEnter = e => {\n      const {\n        onNodeDragEnter\n      } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragEnter(e, dragNodeEvent);\n    };\n    const onDragOver = e => {\n      const {\n        onNodeDragOver\n      } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragOver(e, dragNodeEvent);\n    };\n    const onDragLeave = e => {\n      const {\n        onNodeDragLeave\n      } = context.value;\n      e.stopPropagation();\n      onNodeDragLeave(e, dragNodeEvent);\n    };\n    const onDragEnd = e => {\n      const {\n        onNodeDragEnd\n      } = context.value;\n      e.stopPropagation();\n      dragNodeHighlight.value = false;\n      onNodeDragEnd(e, dragNodeEvent);\n    };\n    const onDrop = e => {\n      const {\n        onNodeDrop\n      } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      dragNodeHighlight.value = false;\n      onNodeDrop(e, dragNodeEvent);\n    };\n    // Disabled item still can be switch\n    const onExpand = e => {\n      const {\n        onNodeExpand\n      } = context.value;\n      if (loading.value) return;\n      onNodeExpand(e, eventData.value);\n    };\n    const isDraggable = () => {\n      const {\n        data\n      } = props;\n      const {\n        draggable\n      } = context.value;\n      return !!(draggable && (!draggable.nodeDraggable || draggable.nodeDraggable(data)));\n    };\n    // ==================== Render: Drag Handler ====================\n    const renderDragHandler = () => {\n      const {\n        draggable,\n        prefixCls\n      } = context.value;\n      return draggable && (draggable === null || draggable === void 0 ? void 0 : draggable.icon) ? _createVNode(\"span\", {\n        \"class\": `${prefixCls}-draggable-icon`\n      }, [draggable.icon]) : null;\n    };\n    const renderSwitcherIconDom = () => {\n      var _a, _b, _c;\n      const {\n        switcherIcon: switcherIconFromProps = slots.switcherIcon || ((_a = context.value.slots) === null || _a === void 0 ? void 0 : _a[(_c = (_b = props.data) === null || _b === void 0 ? void 0 : _b.slots) === null || _c === void 0 ? void 0 : _c.switcherIcon])\n      } = props;\n      const {\n        switcherIcon: switcherIconFromCtx\n      } = context.value;\n      const switcherIcon = switcherIconFromProps || switcherIconFromCtx;\n      // if switcherIconDom is null, no render switcher span\n      if (typeof switcherIcon === 'function') {\n        return switcherIcon(renderArgsData.value);\n      }\n      return switcherIcon;\n    };\n    // Load data to avoid default expanded tree without data\n    const syncLoadData = () => {\n      //const { expanded, loading, loaded } = props;\n      const {\n        loadData,\n        onNodeLoad\n      } = context.value;\n      if (loading.value) {\n        return;\n      }\n      // read from state to avoid loadData at same time\n      if (loadData && expanded.value && !isLeaf.value) {\n        // We needn't reload data when has children in sync logic\n        // It's only needed in node expanded\n        if (!hasChildren.value && !loaded.value) {\n          onNodeLoad(eventData.value);\n        }\n      }\n    };\n    onMounted(() => {\n      syncLoadData();\n    });\n    onUpdated(() => {\n      // https://github.com/vueComponent/ant-design-vue/issues/4835\n      syncLoadData();\n    });\n    // Switcher\n    const renderSwitcher = () => {\n      const {\n        prefixCls\n      } = context.value;\n      // if switcherIconDom is null, no render switcher span\n      const switcherIconDom = renderSwitcherIconDom();\n      if (isLeaf.value) {\n        return switcherIconDom !== false ? _createVNode(\"span\", {\n          \"class\": classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher-noop`)\n        }, [switcherIconDom]) : null;\n      }\n      const switcherCls = classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher_${expanded.value ? ICON_OPEN : ICON_CLOSE}`);\n      return switcherIconDom !== false ? _createVNode(\"span\", {\n        \"onClick\": onExpand,\n        \"class\": switcherCls\n      }, [switcherIconDom]) : null;\n    };\n    // Checkbox\n    const renderCheckbox = () => {\n      var _a, _b;\n      const {\n        disableCheckbox\n      } = props;\n      const {\n        prefixCls\n      } = context.value;\n      const disabled = isDisabled.value;\n      const checkable = isCheckable.value;\n      if (!checkable) return null;\n      return _createVNode(\"span\", {\n        \"class\": classNames(`${prefixCls}-checkbox`, checked.value && `${prefixCls}-checkbox-checked`, !checked.value && halfChecked.value && `${prefixCls}-checkbox-indeterminate`, (disabled || disableCheckbox) && `${prefixCls}-checkbox-disabled`),\n        \"onClick\": onCheck\n      }, [(_b = (_a = context.value).customCheckable) === null || _b === void 0 ? void 0 : _b.call(_a)]);\n    };\n    const renderIcon = () => {\n      const {\n        prefixCls\n      } = context.value;\n      return _createVNode(\"span\", {\n        \"class\": classNames(`${prefixCls}-iconEle`, `${prefixCls}-icon__${nodeState.value || 'docu'}`, loading.value && `${prefixCls}-icon_loading`)\n      }, null);\n    };\n    const renderDropIndicator = () => {\n      const {\n        disabled,\n        eventKey\n      } = props;\n      const {\n        draggable,\n        dropLevelOffset,\n        dropPosition,\n        prefixCls,\n        indent,\n        dropIndicatorRender,\n        dragOverNodeKey,\n        direction\n      } = context.value;\n      const rootDraggable = draggable !== false;\n      // allowDrop is calculated in Tree.tsx, there is no need for calc it here\n      const showIndicator = !disabled && rootDraggable && dragOverNodeKey === eventKey;\n      return showIndicator ? dropIndicatorRender({\n        dropPosition,\n        dropLevelOffset,\n        indent,\n        prefixCls,\n        direction\n      }) : null;\n    };\n    // Icon + Title\n    const renderSelector = () => {\n      var _a, _b, _c, _d, _e, _f;\n      const {\n        // title = slots.title ||\n        //   context.value.slots?.[props.data?.slots?.title] ||\n        //   context.value.slots?.title,\n        // selected,\n        icon = slots.icon,\n        // loading,\n        data\n      } = props;\n      const title = slots.title || ((_a = context.value.slots) === null || _a === void 0 ? void 0 : _a[(_c = (_b = props.data) === null || _b === void 0 ? void 0 : _b.slots) === null || _c === void 0 ? void 0 : _c.title]) || ((_d = context.value.slots) === null || _d === void 0 ? void 0 : _d.title) || props.title;\n      const {\n        prefixCls,\n        showIcon,\n        icon: treeIcon,\n        loadData\n        // slots: contextSlots,\n      } = context.value;\n      const disabled = isDisabled.value;\n      const wrapClass = `${prefixCls}-node-content-wrapper`;\n      // Icon - Still show loading icon when loading without showIcon\n      let $icon;\n      if (showIcon) {\n        const currentIcon = icon || ((_e = context.value.slots) === null || _e === void 0 ? void 0 : _e[(_f = data === null || data === void 0 ? void 0 : data.slots) === null || _f === void 0 ? void 0 : _f.icon]) || treeIcon;\n        $icon = currentIcon ? _createVNode(\"span\", {\n          \"class\": classNames(`${prefixCls}-iconEle`, `${prefixCls}-icon__customize`)\n        }, [typeof currentIcon === 'function' ? currentIcon(renderArgsData.value) : currentIcon]) : renderIcon();\n      } else if (loadData && loading.value) {\n        $icon = renderIcon();\n      }\n      // Title\n      let titleNode;\n      if (typeof title === 'function') {\n        titleNode = title(renderArgsData.value);\n        // } else if (contextSlots.titleRender) {\n        //   titleNode = contextSlots.titleRender(renderArgsData.value);\n      } else {\n        titleNode = title;\n      }\n      titleNode = titleNode === undefined ? defaultTitle : titleNode;\n      const $title = _createVNode(\"span\", {\n        \"class\": `${prefixCls}-title`\n      }, [titleNode]);\n      return _createVNode(\"span\", {\n        \"ref\": selectHandle,\n        \"title\": typeof title === 'string' ? title : '',\n        \"class\": classNames(`${wrapClass}`, `${wrapClass}-${nodeState.value || 'normal'}`, !disabled && (selected.value || dragNodeHighlight.value) && `${prefixCls}-node-selected`),\n        \"onMouseenter\": onMouseEnter,\n        \"onMouseleave\": onMouseLeave,\n        \"onContextmenu\": onContextmenu,\n        \"onClick\": onSelectorClick,\n        \"onDblclick\": onSelectorDoubleClick\n      }, [$icon, $title, renderDropIndicator()]);\n    };\n    return () => {\n      const _a = _extends(_extends({}, props), attrs),\n        {\n          eventKey,\n          isLeaf,\n          isStart,\n          isEnd,\n          domRef,\n          active,\n          data,\n          onMousemove,\n          selectable\n        } = _a,\n        otherProps = __rest(_a, [\"eventKey\", \"isLeaf\", \"isStart\", \"isEnd\", \"domRef\", \"active\", \"data\", \"onMousemove\", \"selectable\"]);\n      const {\n        prefixCls,\n        filterTreeNode,\n        keyEntities,\n        dropContainerKey,\n        dropTargetKey,\n        draggingNodeKey\n      } = context.value;\n      const disabled = isDisabled.value;\n      const dataOrAriaAttributeProps = pickAttrs(otherProps, {\n        aria: true,\n        data: true\n      });\n      const {\n        level\n      } = keyEntities[eventKey] || {};\n      const isEndNode = isEnd[isEnd.length - 1];\n      const mergedDraggable = isDraggable();\n      const draggableWithoutDisabled = !disabled && mergedDraggable;\n      const dragging = draggingNodeKey === eventKey;\n      const ariaSelected = selectable !== undefined ? {\n        'aria-selected': !!selectable\n      } : undefined;\n      // console.log(1);\n      return _createVNode(\"div\", _objectSpread(_objectSpread({\n        \"ref\": domRef,\n        \"class\": classNames(attrs.class, `${prefixCls}-treenode`, {\n          [`${prefixCls}-treenode-disabled`]: disabled,\n          [`${prefixCls}-treenode-switcher-${expanded.value ? 'open' : 'close'}`]: !isLeaf,\n          [`${prefixCls}-treenode-checkbox-checked`]: checked.value,\n          [`${prefixCls}-treenode-checkbox-indeterminate`]: halfChecked.value,\n          [`${prefixCls}-treenode-selected`]: selected.value,\n          [`${prefixCls}-treenode-loading`]: loading.value,\n          [`${prefixCls}-treenode-active`]: active,\n          [`${prefixCls}-treenode-leaf-last`]: isEndNode,\n          [`${prefixCls}-treenode-draggable`]: draggableWithoutDisabled,\n          dragging,\n          'drop-target': dropTargetKey === eventKey,\n          'drop-container': dropContainerKey === eventKey,\n          'drag-over': !disabled && dragOver.value,\n          'drag-over-gap-top': !disabled && dragOverGapTop.value,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom.value,\n          'filter-node': filterTreeNode && filterTreeNode(eventData.value)\n        }),\n        \"style\": attrs.style,\n        \"draggable\": draggableWithoutDisabled,\n        \"aria-grabbed\": dragging,\n        \"onDragstart\": draggableWithoutDisabled ? onDragStart : undefined,\n        \"onDragenter\": mergedDraggable ? onDragEnter : undefined,\n        \"onDragover\": mergedDraggable ? onDragOver : undefined,\n        \"onDragleave\": mergedDraggable ? onDragLeave : undefined,\n        \"onDrop\": mergedDraggable ? onDrop : undefined,\n        \"onDragend\": mergedDraggable ? onDragEnd : undefined,\n        \"onMousemove\": onMousemove\n      }, ariaSelected), dataOrAriaAttributeProps), [_createVNode(Indent, {\n        \"prefixCls\": prefixCls,\n        \"level\": level,\n        \"isStart\": isStart,\n        \"isEnd\": isEnd\n      }, null), renderDragHandler(), renderSwitcher(), renderCheckbox(), renderSelector()]);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}