{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Code from \"@/components/code/Code\";\nexport default {\n  name: \"Statistics\",\n  components: {\n    Code\n  },\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    systemStatus: {\n      type: Object,\n      required: true\n    },\n    top5ps: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      echartsStyles: {\n        width: '100%',\n        height: \"100%\"\n      },\n      myChart: null,\n      visible: false,\n      apiInfo: null,\n      apiCountInfo: [{\n        value: 0,\n        name: 'Demo'\n      }]\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        if (newVal === true) {\n          this.getApiInfo();\n          this.echarts();\n        } else {\n          this.visible = newVal;\n        }\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  computed: {\n    // 对cpu、内存占用率值判断 设置对应的颜色\n    computedColor() {\n      return function (item) {\n        if (item <= 30) {\n          return '#139606';\n        }\n        if (item > 30 && item <= 80) {\n          return '#e55013';\n        }\n        return '#cf1322';\n      };\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n  },\n  methods: {\n    // 抽屉关闭\n    onClose() {\n      // 向父组件发送状态\n      this.$emit('updateDrawerStatus', false);\n    },\n    /*\n      一些请求事件\n     */\n    // 获取api信息并打开渲染echarts图表\n    async getApiInfo() {\n      await this.$request.getR1Api().then(res => {\n        if (res.status !== 200) {\n          this.$emit('updateDrawerStatus', false);\n        } else {\n          var data = res.data.data;\n          this.visible = true;\n          this.apiInfo = data;\n          var temp = [];\n          for (var key in data.sum.detail) {\n            var newObj = {\n              value: data.sum.detail[key],\n              name: key\n            };\n            temp.push(newObj);\n          }\n          this.apiCountInfo = temp;\n        }\n      });\n      this.echarts();\n    },\n    echarts() {\n      if (this.myChart != null && this.myChart !== \"\" && this.myChart !== undefined) {\n        this.myChart.dispose();\n      }\n      this.myChart = this.$echarts.init(document.getElementById('main'));\n      this.myChart.setOption({\n        tooltip: {\n          trigger: 'item'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          // adjust the start angle\n          startAngle: 180,\n          label: {\n            show: true,\n            formatter(param) {\n              // correct the percentage\n              return param.name + ' (' + param.percent + '%)';\n            }\n          },\n          data: this.apiCountInfo\n        }]\n      });\n\n      // 让图表跟随屏幕自动的去适应\n      window.addEventListener('resize', () => {\n        this.myChart.resize();\n      });\n    },\n    afterVisibleChange(val) {\n      console.log('visible', val);\n    }\n  }\n};","map":{"version":3,"names":["Code","name","components","props","openFlag","type","Boolean","required","systemStatus","Object","top5ps","String","data","echartsStyles","width","height","myChart","visible","apiInfo","apiCountInfo","value","watch","handler","newVal","oldVal","getApiInfo","echarts","deep","computed","computedColor","item","mounted","methods","onClose","$emit","$request","getR1Api","then","res","status","temp","key","sum","detail","newObj","push","undefined","dispose","$echarts","init","document","getElementById","setOption","tooltip","trigger","series","radius","startAngle","label","show","formatter","param","percent","window","addEventListener","resize","afterVisibleChange","val","console","log"],"sources":["src/components/preview/Statistics.vue"],"sourcesContent":["<template>\n  <div>\n    <a-drawer\n        title=\"R1项目概览\"\n        placement=\"right\"\n        :closable=\"false\"\n        :visible=\"visible\"\n        :after-visible-change=\"afterVisibleChange\"\n        @close=\"onClose\"\n    >\n      <div class=\"api-info\">\n        <a-statistic st title=\"Api总数\" suffix=\"个\" :value=\"apiInfo && apiInfo.sum.total_num\" style=\"width: 20%\"/>\n        <div style=\"width: 80%;height: 100%\">\n          <div id=\"main\" :style=\"echartsStyles\"></div>\n        </div>\n      </div>\n\n      <div class=\"hardware-info\">\n        <div style=\"color: rgba(0, 0, 0, 0.45);margin-bottom: 10px\">容器信息</div>\n\n        <a-row :gutter=\"16\">\n          <a-col :span=\"12\">\n            <a-card>\n              <a-statistic\n                  title=\"CPU使用率\"\n                  :value=\"systemStatus.cpu_usage\"\n                  suffix=\"%\"\n                  :value-style=\"{ color: computedColor(systemStatus.cpu_usage) }\"\n                  style=\"margin-right: 50px\"\n              >\n              </a-statistic>\n            </a-card>\n          </a-col>\n          <a-col :span=\"12\">\n            <a-card>\n              <a-statistic\n                  title=\"内存使用率\"\n                  :value=\"systemStatus.memory_usage\"\n                  suffix=\"%\"\n                  class=\"demo-class\"\n                  :value-style=\"{ color: computedColor(systemStatus.memory_usage) }\"\n              >\n              </a-statistic>\n            </a-card>\n          </a-col>\n        </a-row>\n      </div>\n      <div style=\"color: rgba(0, 0, 0, 0.45);margin: 10px 0 0 0\">进程信息Top5</div>\n      <pre v-myHighlight style=\"margin: 0!important;padding: 0!important;\">\n        <code style=\"height: 200px;margin: 0!important;padding: 0!important;\" class=\"lang-javascript\" v-text=\"top5ps\"></code>\n      </pre>\n    </a-drawer>\n  </div>\n</template>\n\n<script>\n\nimport Code from \"@/components/code/Code\";\n\nexport default {\n  name: \"Statistics\",\n  components: {Code},\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    systemStatus: {\n      type: Object,\n      required: true\n    },\n    top5ps: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      echartsStyles: {\n        width: '100%',\n        height: \"100%\"\n      },\n      myChart: null,\n      visible: false,\n      apiInfo: null,\n      apiCountInfo: [\n        {value: 0, name: 'Demo'}\n      ]\n    }\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        if (newVal === true) {\n          this.getApiInfo()\n          this.echarts()\n        } else {\n          this.visible = newVal\n        }\n\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  computed: {\n    // 对cpu、内存占用率值判断 设置对应的颜色\n    computedColor() {\n      return function (item) {\n        if (item <= 30) {\n          return '#139606';\n        }\n        if (item > 30 && item <= 80) {\n          return '#e55013'\n        }\n        return '#cf1322';\n      }\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag\n  },\n  methods: {\n    // 抽屉关闭\n    onClose() {\n      // 向父组件发送状态\n      this.$emit('updateDrawerStatus', false)\n    },\n\n    /*\n      一些请求事件\n     */\n    // 获取api信息并打开渲染echarts图表\n    async getApiInfo() {\n      await this.$request.getR1Api().then(res => {\n        if (res.status !== 200) {\n          this.$emit('updateDrawerStatus', false)\n        } else {\n          var data = res.data.data;\n          this.visible = true\n          this.apiInfo = data\n\n          var temp = [];\n          for (var key in data.sum.detail) {\n            var newObj = {\n              value: data.sum.detail[key],\n              name: key\n            };\n            temp.push(newObj);\n          }\n          this.apiCountInfo = temp\n        }\n      })\n      this.echarts()\n    },\n    echarts() {\n      if (this.myChart != null && this.myChart !== \"\" && this.myChart !== undefined) {\n        this.myChart.dispose();\n      }\n      this.myChart = this.$echarts.init(document.getElementById('main'));\n\n      this.myChart.setOption({\n        tooltip: {\n          trigger: 'item'\n        },\n        series: [\n          {\n            name: 'Access From',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            // adjust the start angle\n            startAngle: 180,\n            label: {\n              show: true,\n              formatter(param) {\n                // correct the percentage\n                return param.name + ' (' + param.percent + '%)';\n              }\n            },\n            data: this.apiCountInfo\n          }\n        ]\n      })\n\n      // 让图表跟随屏幕自动的去适应\n      window.addEventListener('resize', () => {\n        this.myChart.resize()\n      })\n    },\n\n    afterVisibleChange(val) {\n      console.log('visible', val);\n    },\n  }\n}\n</script>\n\n<style scoped>\n.statistics {\n  /*width: 100px!important;*/\n}\n\n/deep/ .ant-drawer-content-wrapper {\n  width: 780px !important;\n  right: 0 !important;\n}\n\n.api-info {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  height: 200px;\n}\n\n.hardware-info {\n  margin-top: 50px;\n}\n</style>\n"],"mappings":";AAyDA,OAAAA,IAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,QAAA;IACA;IACAC,YAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;IACAG,MAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,QAAA;IACA;EACA;EACAK,KAAA;IACA;MACAC,aAAA;QACAC,KAAA;QACAC,MAAA;MACA;MACAC,OAAA;MACAC,OAAA;MACAC,OAAA;MACAC,YAAA,GACA;QAAAC,KAAA;QAAAnB,IAAA;MAAA;IAEA;EACA;EACAoB,KAAA;IACAjB,QAAA;MACAkB,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACA,IAAAD,MAAA;UACA,KAAAE,UAAA;UACA,KAAAC,OAAA;QACA;UACA,KAAAT,OAAA,GAAAM,MAAA;QACA;MAEA;MACA;MACAI,IAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,cAAA;MACA,iBAAAC,IAAA;QACA,IAAAA,IAAA;UACA;QACA;QACA,IAAAA,IAAA,SAAAA,IAAA;UACA;QACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAd,OAAA,QAAAb,QAAA;EACA;EACA4B,OAAA;IACA;IACAC,QAAA;MACA;MACA,KAAAC,KAAA;IACA;IAEA;AACA;AACA;IACA;IACA,MAAAT,WAAA;MACA,WAAAU,QAAA,CAAAC,QAAA,GAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,KAAAL,KAAA;QACA;UACA,IAAAtB,IAAA,GAAA0B,GAAA,CAAA1B,IAAA,CAAAA,IAAA;UACA,KAAAK,OAAA;UACA,KAAAC,OAAA,GAAAN,IAAA;UAEA,IAAA4B,IAAA;UACA,SAAAC,GAAA,IAAA7B,IAAA,CAAA8B,GAAA,CAAAC,MAAA;YACA,IAAAC,MAAA;cACAxB,KAAA,EAAAR,IAAA,CAAA8B,GAAA,CAAAC,MAAA,CAAAF,GAAA;cACAxC,IAAA,EAAAwC;YACA;YACAD,IAAA,CAAAK,IAAA,CAAAD,MAAA;UACA;UACA,KAAAzB,YAAA,GAAAqB,IAAA;QACA;MACA;MACA,KAAAd,OAAA;IACA;IACAA,QAAA;MACA,SAAAV,OAAA,iBAAAA,OAAA,gBAAAA,OAAA,KAAA8B,SAAA;QACA,KAAA9B,OAAA,CAAA+B,OAAA;MACA;MACA,KAAA/B,OAAA,QAAAgC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MAEA,KAAAnC,OAAA,CAAAoC,SAAA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA,GACA;UACAtD,IAAA;UACAI,IAAA;UACAmD,MAAA;UACA;UACAC,UAAA;UACAC,KAAA;YACAC,IAAA;YACAC,UAAAC,KAAA;cACA;cACA,OAAAA,KAAA,CAAA5D,IAAA,UAAA4D,KAAA,CAAAC,OAAA;YACA;UACA;UACAlD,IAAA,OAAAO;QACA;MAEA;;MAEA;MACA4C,MAAA,CAAAC,gBAAA;QACA,KAAAhD,OAAA,CAAAiD,MAAA;MACA;IACA;IAEAC,mBAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,YAAAF,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}