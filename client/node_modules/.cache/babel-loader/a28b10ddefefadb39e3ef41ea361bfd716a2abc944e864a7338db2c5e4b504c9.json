{"ast":null,"code":"import clipboard from \"clipboard\";\nexport default {\n  props: {\n    codeText: {\n      type: String,\n      required: true\n    }\n  },\n  watch: {\n    codeText: {\n      handler: function (newVal, oldVal) {\n        console.log(newVal);\n        this.codeText = newVal;\n        this.updateSourceCode(newVal);\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  name: \"Code\",\n  data() {\n    return {};\n  },\n  methods: {\n    updateSourceCode(code) {\n      this.codeText = code;\n    },\n    copyMessage(value) {\n      let _this = this;\n      _this.success = false;\n      let clipboard = new this.clipboard(\".code-data-copy\");\n      clipboard.on(\"success\", function (e) {\n        //    this.$message.error(\"提問不能為空\");\n        _this.success = true;\n        // setTimeout(() => {\n        //   _this.success = false\n        // }, 300)\n        clipboard.destroy(); // 销毁,避免多次点击重复出现\n      });\n\n      clipboard.on(\"error\", function () {\n        _this.$message.error(\"複製失敗\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["clipboard","props","codeText","type","String","required","watch","handler","newVal","oldVal","console","log","updateSourceCode","deep","name","data","methods","code","copyMessage","value","_this","success","on","e","destroy","$message","error"],"sources":["src/components/code/Code.vue"],"sourcesContent":["<template>\n  <div class=\"my-code\">\n    <!-- 复制按钮 -->\n    <div\n        class=\"copy-btn code-data-copy\"\n        @click=\"copyMessage\"\n        data-clipboard-action=\"copy\"\n        :data-clipboard-text=\"codeText\"\n    >\n      <i class=\"el-icon-document-copy myicon\"></i>\n    </div>\n     <pre v-highlight style=\"margin: 0!important;\">\n        <code style=\"height: 60vh\" class=\"lang-javascript\" v-text=\"codeText\"></code>\n    </pre>\n  </div>\n</template>\n\n<script>\nimport clipboard from \"clipboard\";\nexport default {\n  props:{\n    codeText: {\n      type: String,\n      required: true\n    },\n  },\n  watch:{\n    codeText:{\n      handler: function (newVal,oldVal) {\n        console.log(newVal)\n        this.codeText = newVal\n        this.updateSourceCode(newVal)\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  name: \"Code\",\n  data(){\n    return{\n    }\n  },\n  methods:{\n    updateSourceCode(code) {\n      this.codeText = code\n    },\n    copyMessage(value) {\n      let _this = this;\n      _this.success = false;\n      let clipboard = new this.clipboard(\".code-data-copy\");\n      clipboard.on(\"success\", function (e) {\n        //    this.$message.error(\"提問不能為空\");\n        _this.success = true;\n        // setTimeout(() => {\n        //   _this.success = false\n        // }, 300)\n        clipboard.destroy(); // 销毁,避免多次点击重复出现\n      });\n      clipboard.on(\"error\", function () {\n        _this.$message.error(\"複製失敗\");\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.my-code{\n  margin-top: -20px!important;\n  overflow-y: visible;\n}\n</style>\n"],"mappings":"AAkBA,OAAAA,SAAA;AACA;EACAC,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACAJ,QAAA;MACAK,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACAC,OAAA,CAAAC,GAAA,CAAAH,MAAA;QACA,KAAAN,QAAA,GAAAM,MAAA;QACA,KAAAI,gBAAA,CAAAJ,MAAA;MACA;MACA;MACAK,IAAA;IACA;EACA;EACAC,IAAA;EACAC,KAAA;IACA,QACA;EACA;EACAC,OAAA;IACAJ,iBAAAK,IAAA;MACA,KAAAf,QAAA,GAAAe,IAAA;IACA;IACAC,YAAAC,KAAA;MACA,IAAAC,KAAA;MACAA,KAAA,CAAAC,OAAA;MACA,IAAArB,SAAA,YAAAA,SAAA;MACAA,SAAA,CAAAsB,EAAA,sBAAAC,CAAA;QACA;QACAH,KAAA,CAAAC,OAAA;QACA;QACA;QACA;QACArB,SAAA,CAAAwB,OAAA;MACA;;MACAxB,SAAA,CAAAsB,EAAA;QACAF,KAAA,CAAAK,QAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}