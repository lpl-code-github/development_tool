{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../../_util/vue-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { hasProp, initDefaultProps, getOptionProps, getSlots } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nimport BaseMixin from '../../_util/BaseMixin';\nimport proxyComponent from '../../_util/proxyComponent';\nimport { convertTreeToEntities, convertDataToTree, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\n\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nfunction getWatch() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var watch = {};\n  keys.forEach(function (k) {\n    watch[k] = function () {\n      this.needSyncKeys[k] = true;\n    };\n  });\n  return watch;\n}\nvar Tree = {\n  name: 'Tree',\n  mixins: [BaseMixin],\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    children: PropTypes.any,\n    treeData: PropTypes.array,\n    // Generate treeNode by children\n    showLine: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    focusable: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    multiple: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    checkStrictly: PropTypes.bool,\n    draggable: PropTypes.bool,\n    defaultExpandParent: PropTypes.bool,\n    autoExpandParent: PropTypes.bool,\n    defaultExpandAll: PropTypes.bool,\n    defaultExpandedKeys: PropTypes.array,\n    expandedKeys: PropTypes.array,\n    defaultCheckedKeys: PropTypes.array,\n    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    defaultSelectedKeys: PropTypes.array,\n    selectedKeys: PropTypes.array,\n    // onClick: PropTypes.func,\n    // onDoubleClick: PropTypes.func,\n    // onExpand: PropTypes.func,\n    // onCheck: PropTypes.func,\n    // onSelect: PropTypes.func,\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.array,\n    // onMouseEnter: PropTypes.func,\n    // onMouseLeave: PropTypes.func,\n    // onRightClick: PropTypes.func,\n    // onDragStart: PropTypes.func,\n    // onDragEnter: PropTypes.func,\n    // onDragOver: PropTypes.func,\n    // onDragLeave: PropTypes.func,\n    // onDragEnd: PropTypes.func,\n    // onDrop: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    switcherIcon: PropTypes.any,\n    _propsSymbol: PropTypes.any\n  }, {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  }),\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    warning(this.$props.children, 'please use children prop replace slots.default');\n    this.needSyncKeys = {};\n    this.domTreeNodes = {};\n    var state = {\n      _posEntities: new Map(),\n      _keyEntities: new Map(),\n      _expandedKeys: [],\n      _selectedKeys: [],\n      _checkedKeys: [],\n      _halfCheckedKeys: [],\n      _loadedKeys: [],\n      _loadingKeys: [],\n      _treeNode: [],\n      _prevProps: null,\n      _dragOverNodeKey: '',\n      _dropPosition: null,\n      _dragNodesKeys: []\n    };\n    return _extends({}, state, this.getDerivedState(getOptionProps(this), state));\n  },\n  provide: function provide() {\n    return {\n      vcTree: this\n    };\n  },\n  watch: _extends({}, getWatch(['treeData', 'children', 'expandedKeys', 'autoExpandParent', 'selectedKeys', 'checkedKeys', 'loadedKeys']), {\n    __propsSymbol__: function __propsSymbol__() {\n      this.setState(this.getDerivedState(getOptionProps(this), this.$data));\n      this.needSyncKeys = {};\n    }\n  }),\n  methods: {\n    getDerivedState: function getDerivedState(props, prevState) {\n      var _prevProps = prevState._prevProps;\n      var newState = {\n        _prevProps: _extends({}, props)\n      };\n      var self = this;\n      function needSync(name) {\n        return !_prevProps && name in props || _prevProps && self.needSyncKeys[name];\n      }\n\n      // ================== Tree Node ==================\n      var treeNode = null;\n\n      // Check if `treeData` or `children` changed and save into the state.\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(this.$createElement, props.treeData);\n      } else if (needSync('children')) {\n        treeNode = props.children;\n      }\n\n      // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n      if (treeNode) {\n        newState._treeNode = treeNode;\n\n        // Calculate the entities data for quick match\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState._keyEntities = entitiesMap.keyEntities;\n      }\n      var keyEntities = newState._keyEntities || prevState._keyEntities;\n\n      // ================ expandedKeys =================\n      if (needSync('expandedKeys') || _prevProps && needSync('autoExpandParent')) {\n        newState._expandedKeys = props.autoExpandParent || !_prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!_prevProps && props.defaultExpandAll) {\n        newState._expandedKeys = [].concat(_toConsumableArray(keyEntities.keys()));\n      } else if (!_prevProps && props.defaultExpandedKeys) {\n        newState._expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      // ================ selectedKeys =================\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState._selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!_prevProps && props.defaultSelectedKeys) {\n          newState._selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n\n      // ================= checkedKeys =================\n      if (props.checkable) {\n        var checkedKeyEntity = void 0;\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!_prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState._checkedKeys,\n            halfCheckedKeys: prevState._halfCheckedKeys\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          newState._checkedKeys = checkedKeys;\n          newState._halfCheckedKeys = halfCheckedKeys;\n        }\n      }\n      // ================= loadedKeys ==================\n      if (needSync('loadedKeys')) {\n        newState._loadedKeys = props.loadedKeys;\n      }\n      return newState;\n    },\n    onNodeDragStart: function onNodeDragStart(event, node) {\n      var _expandedKeys = this.$data._expandedKeys;\n      var eventKey = node.eventKey;\n      var children = getSlots(node)['default'];\n      this.dragNode = node;\n      this.setState({\n        _dragNodesKeys: getDragNodesKeys(typeof children === 'function' ? children() : children, node),\n        _expandedKeys: arrDel(_expandedKeys, eventKey)\n      });\n      this.__emit('dragstart', {\n        event: event,\n        node: node\n      });\n    },\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    onNodeDragEnter: function onNodeDragEnter(event, node) {\n      var _this = this;\n      var expandedKeys = this.$data._expandedKeys;\n      var pos = node.pos,\n        eventKey = node.eventKey;\n      if (!this.dragNode || !node.$refs.selectHandle) return;\n      var dropPosition = calcDropPosition(event, node);\n\n      // Skip if drag node is self\n      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {\n        this.setState({\n          _dragOverNodeKey: '',\n          _dropPosition: null\n        });\n        return;\n      }\n\n      // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          _dragOverNodeKey: eventKey,\n          _dropPosition: dropPosition\n        });\n\n        // Side effect for delay drag\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!hasProp(_this, 'expandedKeys')) {\n            _this.setState({\n              _expandedKeys: newExpandedKeys\n            });\n          }\n          _this.__emit('dragenter', {\n            event: event,\n            node: node,\n            expandedKeys: newExpandedKeys\n          });\n        }, 400);\n      }, 0);\n    },\n    onNodeDragOver: function onNodeDragOver(event, node) {\n      var eventKey = node.eventKey;\n      var _$data = this.$data,\n        _dragOverNodeKey = _$data._dragOverNodeKey,\n        _dropPosition = _$data._dropPosition;\n      // Update drag position\n\n      if (this.dragNode && eventKey === _dragOverNodeKey && node.$refs.selectHandle) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _dropPosition) return;\n        this.setState({\n          _dropPosition: dropPosition\n        });\n      }\n      this.__emit('dragover', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeDragLeave: function onNodeDragLeave(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragleave', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeDragEnd: function onNodeDragEnd(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragend', {\n        event: event,\n        node: node\n      });\n      this.dragNode = null;\n    },\n    onNodeDrop: function onNodeDrop(event, node) {\n      var _$data2 = this.$data,\n        _$data2$_dragNodesKey = _$data2._dragNodesKeys,\n        _dragNodesKeys = _$data2$_dragNodesKey === undefined ? [] : _$data2$_dragNodesKey,\n        _dropPosition = _$data2._dropPosition;\n      var eventKey = node.eventKey,\n        pos = node.pos;\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      if (_dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: this.dragNode,\n        dragNodesKeys: _dragNodesKeys.slice(),\n        dropPosition: _dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n      if (_dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n      this.__emit('drop', dropResult);\n      this.dragNode = null;\n    },\n    onNodeClick: function onNodeClick(e, treeNode) {\n      this.__emit('click', e, treeNode);\n    },\n    onNodeDoubleClick: function onNodeDoubleClick(e, treeNode) {\n      this.__emit('dblclick', e, treeNode);\n    },\n    onNodeSelect: function onNodeSelect(e, treeNode) {\n      var selectedKeys = this.$data._selectedKeys;\n      var keyEntities = this.$data._keyEntities;\n      var multiple = this.$props.multiple;\n      var _getOptionProps = getOptionProps(treeNode),\n        selected = _getOptionProps.selected,\n        eventKey = _getOptionProps.eventKey;\n      var targetSelected = !selected;\n      // Update selected keys\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      }\n\n      // [Legacy] Not found related usage in doc or upper libs\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities.get(key);\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      this.setUncontrolledState({\n        _selectedKeys: selectedKeys\n      });\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e\n      };\n      this.__emit('update:selectedKeys', selectedKeys);\n      this.__emit('select', selectedKeys, eventObj);\n    },\n    onNodeCheck: function onNodeCheck(e, treeNode, checked) {\n      var _$data3 = this.$data,\n        keyEntities = _$data3._keyEntities,\n        oriCheckedKeys = _$data3._checkedKeys,\n        oriHalfCheckedKeys = _$data3._halfCheckedKeys;\n      var checkStrictly = this.$props.checkStrictly;\n      var _getOptionProps2 = getOptionProps(treeNode),\n        eventKey = _getOptionProps2.eventKey;\n\n      // Prepare trigger arguments\n\n      var checkedObj = void 0;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities.get(key);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        this.setUncontrolledState({\n          _checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n            checkedKeys: oriCheckedKeys,\n            halfCheckedKeys: oriHalfCheckedKeys\n          }),\n          _checkedKeys = _conductCheck.checkedKeys,\n          _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n        checkedObj = _checkedKeys;\n\n        // [Legacy] This is used for `rc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities.get(key);\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        this.setUncontrolledState({\n          _checkedKeys: _checkedKeys,\n          _halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      this.__emit('check', checkedObj, eventObj);\n    },\n    onNodeLoad: function onNodeLoad(treeNode) {\n      var _this2 = this;\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this2.setState(function (_ref) {\n          var _ref$_loadedKeys = _ref._loadedKeys,\n            loadedKeys = _ref$_loadedKeys === undefined ? [] : _ref$_loadedKeys,\n            _ref$_loadingKeys = _ref._loadingKeys,\n            loadingKeys = _ref$_loadingKeys === undefined ? [] : _ref$_loadingKeys;\n          var loadData = _this2.$props.loadData;\n          var _getOptionProps3 = getOptionProps(treeNode),\n            eventKey = _getOptionProps3.eventKey;\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            return {};\n          }\n\n          // Process load data\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _$data4 = _this2.$data,\n              currentLoadedKeys = _$data4._loadedKeys,\n              currentLoadingKeys = _$data4._loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey);\n\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n            _this2.__emit('load', newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n            _this2.setUncontrolledState({\n              _loadedKeys: newLoadedKeys\n            });\n            _this2.setState({\n              _loadingKeys: newLoadingKeys\n            });\n            resolve();\n          });\n          return {\n            _loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    },\n    onNodeExpand: function onNodeExpand(e, treeNode) {\n      var _this3 = this;\n      var expandedKeys = this.$data._expandedKeys;\n      var loadData = this.$props.loadData;\n      var _getOptionProps4 = getOptionProps(treeNode),\n        eventKey = _getOptionProps4.eventKey,\n        expanded = _getOptionProps4.expanded;\n\n      // Update selected keys\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n      this.setUncontrolledState({\n        _expandedKeys: expandedKeys\n      });\n      this.__emit('expand', expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e\n      });\n      this.__emit('update:expandedKeys', expandedKeys);\n\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this3.setUncontrolledState({\n            _expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n      return null;\n    },\n    onNodeMouseEnter: function onNodeMouseEnter(event, node) {\n      this.__emit('mouseenter', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeMouseLeave: function onNodeMouseLeave(event, node) {\n      this.__emit('mouseleave', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeContextMenu: function onNodeContextMenu(event, node) {\n      event.preventDefault();\n      this.__emit('rightClick', {\n        event: event,\n        node: node\n      });\n    },\n    /**\n     * Only update the value which is not in props\n     */\n    setUncontrolledState: function setUncontrolledState(state) {\n      var needSync = false;\n      var newState = {};\n      var props = getOptionProps(this);\n      Object.keys(state).forEach(function (name) {\n        if (name.replace('_', '') in props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n      if (needSync) {\n        this.setState(newState);\n      }\n    },\n    registerTreeNode: function registerTreeNode(key, node) {\n      if (node) {\n        this.domTreeNodes[key] = node;\n      } else {\n        delete this.domTreeNodes[key];\n      }\n    },\n    isKeyChecked: function isKeyChecked(key) {\n      var _$data$_checkedKeys = this.$data._checkedKeys,\n        checkedKeys = _$data$_checkedKeys === undefined ? [] : _$data$_checkedKeys;\n      return checkedKeys.indexOf(key) !== -1;\n    },\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n    renderTreeNode: function renderTreeNode(child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _$data5 = this.$data,\n        keyEntities = _$data5._keyEntities,\n        _$data5$_expandedKeys = _$data5._expandedKeys,\n        expandedKeys = _$data5$_expandedKeys === undefined ? [] : _$data5$_expandedKeys,\n        _$data5$_selectedKeys = _$data5._selectedKeys,\n        selectedKeys = _$data5$_selectedKeys === undefined ? [] : _$data5$_selectedKeys,\n        _$data5$_halfCheckedK = _$data5._halfCheckedKeys,\n        halfCheckedKeys = _$data5$_halfCheckedK === undefined ? [] : _$data5$_halfCheckedK,\n        _$data5$_loadedKeys = _$data5._loadedKeys,\n        loadedKeys = _$data5$_loadedKeys === undefined ? [] : _$data5$_loadedKeys,\n        _$data5$_loadingKeys = _$data5._loadingKeys,\n        loadingKeys = _$data5$_loadingKeys === undefined ? [] : _$data5$_loadingKeys,\n        dragOverNodeKey = _$data5._dragOverNodeKey,\n        dropPosition = _$data5._dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key;\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n      if (!keyEntities.get(key)) {\n        warnOnlyTreeNode();\n        return null;\n      }\n      return cloneElement(child, {\n        props: {\n          eventKey: key,\n          expanded: expandedKeys.indexOf(key) !== -1,\n          selected: selectedKeys.indexOf(key) !== -1,\n          loaded: loadedKeys.indexOf(key) !== -1,\n          loading: loadingKeys.indexOf(key) !== -1,\n          checked: this.isKeyChecked(key),\n          halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n          pos: pos,\n          // [Legacy] Drag props\n          dragOver: dragOverNodeKey === key && dropPosition === 0,\n          dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n          dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n        },\n        key: key\n      });\n    }\n  },\n  render: function render() {\n    var _this4 = this;\n    var h = arguments[0];\n    var treeNode = this.$data._treeNode;\n    var _$props = this.$props,\n      prefixCls = _$props.prefixCls,\n      focusable = _$props.focusable,\n      showLine = _$props.showLine,\n      _$props$tabIndex = _$props.tabIndex,\n      tabIndex = _$props$tabIndex === undefined ? 0 : _$props$tabIndex;\n    return h('ul', {\n      'class': classNames(prefixCls, _defineProperty({}, prefixCls + '-show-line', showLine)),\n      attrs: {\n        role: 'tree',\n        unselectable: 'on',\n        tabIndex: focusable ? tabIndex : null\n      }\n    }, [mapChildren(treeNode, function (node, index) {\n      return _this4.renderTreeNode(node, index);\n    })]);\n  }\n};\nexport { Tree };\nexport default proxyComponent(Tree);","map":{"version":3,"names":["_defineProperty","_toConsumableArray","_extends","PropTypes","classNames","warning","hasProp","initDefaultProps","getOptionProps","getSlots","cloneElement","BaseMixin","proxyComponent","convertTreeToEntities","convertDataToTree","getPosition","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","mapChildren","conductCheck","warnOnlyTreeNode","getWatch","keys","arguments","length","undefined","watch","forEach","k","needSyncKeys","Tree","name","mixins","props","prefixCls","string","tabIndex","oneOfType","number","children","any","treeData","array","showLine","bool","showIcon","icon","object","func","focusable","selectable","disabled","multiple","checkable","checkStrictly","draggable","defaultExpandParent","autoExpandParent","defaultExpandAll","defaultExpandedKeys","expandedKeys","defaultCheckedKeys","checkedKeys","defaultSelectedKeys","selectedKeys","loadData","loadedKeys","filterTreeNode","openTransitionName","openAnimation","switcherIcon","_propsSymbol","data","$props","__propsSymbol__","domTreeNodes","state","_posEntities","Map","_keyEntities","_expandedKeys","_selectedKeys","_checkedKeys","_halfCheckedKeys","_loadedKeys","_loadingKeys","_treeNode","_prevProps","_dragOverNodeKey","_dropPosition","_dragNodesKeys","getDerivedState","provide","vcTree","setState","$data","methods","prevState","newState","self","needSync","treeNode","$createElement","entitiesMap","keyEntities","concat","checkedKeyEntity","halfCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","onNodeDragStart","event","node","eventKey","dragNode","__emit","onNodeDragEnter","_this","pos","$refs","selectHandle","dropPosition","setTimeout","delayedDragEnterLogic","Object","key","clearTimeout","newExpandedKeys","onNodeDragOver","_$data","onNodeDragLeave","onNodeDragEnd","onNodeDrop","_$data2","_$data2$_dragNodesKey","indexOf","posArr","dropResult","dragNodesKeys","slice","Number","dropToGap","onNodeClick","e","onNodeDoubleClick","onNodeSelect","_getOptionProps","selected","targetSelected","selectedNodes","map","entity","get","filter","setUncontrolledState","eventObj","nativeEvent","onNodeCheck","checked","_$data3","oriCheckedKeys","oriHalfCheckedKeys","_getOptionProps2","checkedObj","halfChecked","checkedNodes","_conductCheck","checkedNodesPositions","push","onNodeLoad","_this2","Promise","resolve","_ref","_ref$_loadedKeys","_ref$_loadingKeys","loadingKeys","_getOptionProps3","promise","then","_$data4","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeExpand","_this3","_getOptionProps4","expanded","index","targetExpanded","loadPromise","onNodeMouseEnter","onNodeMouseLeave","onNodeContextMenu","preventDefault","replace","registerTreeNode","isKeyChecked","_$data$_checkedKeys","renderTreeNode","child","level","_$data5","_$data5$_expandedKeys","_$data5$_selectedKeys","_$data5$_halfCheckedK","_$data5$_loadedKeys","_$data5$_loadingKeys","dragOverNodeKey","loaded","loading","dragOver","dragOverGapTop","dragOverGapBottom","render","_this4","h","_$props","_$props$tabIndex","attrs","role","unselectable"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/vc-tree/src/Tree.js"],"sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../../_util/vue-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { hasProp, initDefaultProps, getOptionProps, getSlots } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nimport BaseMixin from '../../_util/BaseMixin';\nimport proxyComponent from '../../_util/proxyComponent';\nimport { convertTreeToEntities, convertDataToTree, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\n\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nfunction getWatch() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var watch = {};\n  keys.forEach(function (k) {\n    watch[k] = function () {\n      this.needSyncKeys[k] = true;\n    };\n  });\n  return watch;\n}\n\nvar Tree = {\n  name: 'Tree',\n  mixins: [BaseMixin],\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    children: PropTypes.any,\n    treeData: PropTypes.array, // Generate treeNode by children\n    showLine: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    focusable: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    multiple: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    checkStrictly: PropTypes.bool,\n    draggable: PropTypes.bool,\n    defaultExpandParent: PropTypes.bool,\n    autoExpandParent: PropTypes.bool,\n    defaultExpandAll: PropTypes.bool,\n    defaultExpandedKeys: PropTypes.array,\n    expandedKeys: PropTypes.array,\n    defaultCheckedKeys: PropTypes.array,\n    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    defaultSelectedKeys: PropTypes.array,\n    selectedKeys: PropTypes.array,\n    // onClick: PropTypes.func,\n    // onDoubleClick: PropTypes.func,\n    // onExpand: PropTypes.func,\n    // onCheck: PropTypes.func,\n    // onSelect: PropTypes.func,\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.array,\n    // onMouseEnter: PropTypes.func,\n    // onMouseLeave: PropTypes.func,\n    // onRightClick: PropTypes.func,\n    // onDragStart: PropTypes.func,\n    // onDragEnter: PropTypes.func,\n    // onDragOver: PropTypes.func,\n    // onDragLeave: PropTypes.func,\n    // onDragEnd: PropTypes.func,\n    // onDrop: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    switcherIcon: PropTypes.any,\n    _propsSymbol: PropTypes.any\n  }, {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  }),\n\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    warning(this.$props.children, 'please use children prop replace slots.default');\n    this.needSyncKeys = {};\n    this.domTreeNodes = {};\n    var state = {\n      _posEntities: new Map(),\n      _keyEntities: new Map(),\n      _expandedKeys: [],\n      _selectedKeys: [],\n      _checkedKeys: [],\n      _halfCheckedKeys: [],\n      _loadedKeys: [],\n      _loadingKeys: [],\n      _treeNode: [],\n      _prevProps: null,\n      _dragOverNodeKey: '',\n      _dropPosition: null,\n      _dragNodesKeys: []\n    };\n    return _extends({}, state, this.getDerivedState(getOptionProps(this), state));\n  },\n  provide: function provide() {\n    return {\n      vcTree: this\n    };\n  },\n\n\n  watch: _extends({}, getWatch(['treeData', 'children', 'expandedKeys', 'autoExpandParent', 'selectedKeys', 'checkedKeys', 'loadedKeys']), {\n    __propsSymbol__: function __propsSymbol__() {\n      this.setState(this.getDerivedState(getOptionProps(this), this.$data));\n      this.needSyncKeys = {};\n    }\n  }),\n\n  methods: {\n    getDerivedState: function getDerivedState(props, prevState) {\n      var _prevProps = prevState._prevProps;\n\n      var newState = {\n        _prevProps: _extends({}, props)\n      };\n      var self = this;\n      function needSync(name) {\n        return !_prevProps && name in props || _prevProps && self.needSyncKeys[name];\n      }\n\n      // ================== Tree Node ==================\n      var treeNode = null;\n\n      // Check if `treeData` or `children` changed and save into the state.\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(this.$createElement, props.treeData);\n      } else if (needSync('children')) {\n        treeNode = props.children;\n      }\n\n      // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n      if (treeNode) {\n        newState._treeNode = treeNode;\n\n        // Calculate the entities data for quick match\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState._keyEntities = entitiesMap.keyEntities;\n      }\n\n      var keyEntities = newState._keyEntities || prevState._keyEntities;\n\n      // ================ expandedKeys =================\n      if (needSync('expandedKeys') || _prevProps && needSync('autoExpandParent')) {\n        newState._expandedKeys = props.autoExpandParent || !_prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!_prevProps && props.defaultExpandAll) {\n        newState._expandedKeys = [].concat(_toConsumableArray(keyEntities.keys()));\n      } else if (!_prevProps && props.defaultExpandedKeys) {\n        newState._expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      // ================ selectedKeys =================\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState._selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!_prevProps && props.defaultSelectedKeys) {\n          newState._selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n\n      // ================= checkedKeys =================\n      if (props.checkable) {\n        var checkedKeyEntity = void 0;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!_prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState._checkedKeys,\n            halfCheckedKeys: prevState._halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\n\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState._checkedKeys = checkedKeys;\n          newState._halfCheckedKeys = halfCheckedKeys;\n        }\n      }\n      // ================= loadedKeys ==================\n      if (needSync('loadedKeys')) {\n        newState._loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    },\n    onNodeDragStart: function onNodeDragStart(event, node) {\n      var _expandedKeys = this.$data._expandedKeys;\n      var eventKey = node.eventKey;\n\n      var children = getSlots(node)['default'];\n      this.dragNode = node;\n\n      this.setState({\n        _dragNodesKeys: getDragNodesKeys(typeof children === 'function' ? children() : children, node),\n        _expandedKeys: arrDel(_expandedKeys, eventKey)\n      });\n      this.__emit('dragstart', { event: event, node: node });\n    },\n\n\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    onNodeDragEnter: function onNodeDragEnter(event, node) {\n      var _this = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var pos = node.pos,\n          eventKey = node.eventKey;\n\n\n      if (!this.dragNode || !node.$refs.selectHandle) return;\n\n      var dropPosition = calcDropPosition(event, node);\n\n      // Skip if drag node is self\n      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {\n        this.setState({\n          _dragOverNodeKey: '',\n          _dropPosition: null\n        });\n        return;\n      }\n\n      // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          _dragOverNodeKey: eventKey,\n          _dropPosition: dropPosition\n        });\n\n        // Side effect for delay drag\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!hasProp(_this, 'expandedKeys')) {\n            _this.setState({\n              _expandedKeys: newExpandedKeys\n            });\n          }\n          _this.__emit('dragenter', { event: event, node: node, expandedKeys: newExpandedKeys });\n        }, 400);\n      }, 0);\n    },\n    onNodeDragOver: function onNodeDragOver(event, node) {\n      var eventKey = node.eventKey;\n      var _$data = this.$data,\n          _dragOverNodeKey = _$data._dragOverNodeKey,\n          _dropPosition = _$data._dropPosition;\n      // Update drag position\n\n      if (this.dragNode && eventKey === _dragOverNodeKey && node.$refs.selectHandle) {\n        var dropPosition = calcDropPosition(event, node);\n\n        if (dropPosition === _dropPosition) return;\n\n        this.setState({\n          _dropPosition: dropPosition\n        });\n      }\n      this.__emit('dragover', { event: event, node: node });\n    },\n    onNodeDragLeave: function onNodeDragLeave(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragleave', { event: event, node: node });\n    },\n    onNodeDragEnd: function onNodeDragEnd(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragend', { event: event, node: node });\n      this.dragNode = null;\n    },\n    onNodeDrop: function onNodeDrop(event, node) {\n      var _$data2 = this.$data,\n          _$data2$_dragNodesKey = _$data2._dragNodesKeys,\n          _dragNodesKeys = _$data2$_dragNodesKey === undefined ? [] : _$data2$_dragNodesKey,\n          _dropPosition = _$data2._dropPosition;\n\n      var eventKey = node.eventKey,\n          pos = node.pos;\n\n\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      if (_dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: this.dragNode,\n        dragNodesKeys: _dragNodesKeys.slice(),\n        dropPosition: _dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (_dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n      this.__emit('drop', dropResult);\n      this.dragNode = null;\n    },\n    onNodeClick: function onNodeClick(e, treeNode) {\n      this.__emit('click', e, treeNode);\n    },\n    onNodeDoubleClick: function onNodeDoubleClick(e, treeNode) {\n      this.__emit('dblclick', e, treeNode);\n    },\n    onNodeSelect: function onNodeSelect(e, treeNode) {\n      var selectedKeys = this.$data._selectedKeys;\n      var keyEntities = this.$data._keyEntities;\n      var multiple = this.$props.multiple;\n\n      var _getOptionProps = getOptionProps(treeNode),\n          selected = _getOptionProps.selected,\n          eventKey = _getOptionProps.eventKey;\n\n      var targetSelected = !selected;\n      // Update selected keys\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      }\n\n      // [Legacy] Not found related usage in doc or upper libs\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities.get(key);\n        if (!entity) return null;\n\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      this.setUncontrolledState({ _selectedKeys: selectedKeys });\n\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e\n      };\n      this.__emit('update:selectedKeys', selectedKeys);\n      this.__emit('select', selectedKeys, eventObj);\n    },\n    onNodeCheck: function onNodeCheck(e, treeNode, checked) {\n      var _$data3 = this.$data,\n          keyEntities = _$data3._keyEntities,\n          oriCheckedKeys = _$data3._checkedKeys,\n          oriHalfCheckedKeys = _$data3._halfCheckedKeys;\n      var checkStrictly = this.$props.checkStrictly;\n\n      var _getOptionProps2 = getOptionProps(treeNode),\n          eventKey = _getOptionProps2.eventKey;\n\n      // Prepare trigger arguments\n\n\n      var checkedObj = void 0;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = { checked: checkedKeys, halfChecked: halfCheckedKeys };\n\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities.get(key);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        this.setUncontrolledState({ _checkedKeys: checkedKeys });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n          checkedKeys: oriCheckedKeys,\n          halfCheckedKeys: oriHalfCheckedKeys\n        }),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        checkedObj = _checkedKeys;\n\n        // [Legacy] This is used for `rc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities.get(key);\n          if (!entity) return;\n\n          var node = entity.node,\n              pos = entity.pos;\n\n\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({ node: node, pos: pos });\n        });\n\n        this.setUncontrolledState({\n          _checkedKeys: _checkedKeys,\n          _halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      this.__emit('check', checkedObj, eventObj);\n    },\n    onNodeLoad: function onNodeLoad(treeNode) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this2.setState(function (_ref) {\n          var _ref$_loadedKeys = _ref._loadedKeys,\n              loadedKeys = _ref$_loadedKeys === undefined ? [] : _ref$_loadedKeys,\n              _ref$_loadingKeys = _ref._loadingKeys,\n              loadingKeys = _ref$_loadingKeys === undefined ? [] : _ref$_loadingKeys;\n          var loadData = _this2.$props.loadData;\n\n          var _getOptionProps3 = getOptionProps(treeNode),\n              eventKey = _getOptionProps3.eventKey;\n\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            return {};\n          }\n\n          // Process load data\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _$data4 = _this2.$data,\n                currentLoadedKeys = _$data4._loadedKeys,\n                currentLoadingKeys = _$data4._loadingKeys;\n\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey);\n\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n            _this2.__emit('load', newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n            _this2.setUncontrolledState({\n              _loadedKeys: newLoadedKeys\n            });\n            _this2.setState({\n              _loadingKeys: newLoadingKeys\n            });\n            resolve();\n          });\n\n          return {\n            _loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    },\n    onNodeExpand: function onNodeExpand(e, treeNode) {\n      var _this3 = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var loadData = this.$props.loadData;\n\n      var _getOptionProps4 = getOptionProps(treeNode),\n          eventKey = _getOptionProps4.eventKey,\n          expanded = _getOptionProps4.expanded;\n\n      // Update selected keys\n\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n\n      this.setUncontrolledState({ _expandedKeys: expandedKeys });\n      this.__emit('expand', expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e\n      });\n      this.__emit('update:expandedKeys', expandedKeys);\n\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this3.setUncontrolledState({ _expandedKeys: expandedKeys });\n        }) : null;\n      }\n\n      return null;\n    },\n    onNodeMouseEnter: function onNodeMouseEnter(event, node) {\n      this.__emit('mouseenter', { event: event, node: node });\n    },\n    onNodeMouseLeave: function onNodeMouseLeave(event, node) {\n      this.__emit('mouseleave', { event: event, node: node });\n    },\n    onNodeContextMenu: function onNodeContextMenu(event, node) {\n      event.preventDefault();\n      this.__emit('rightClick', { event: event, node: node });\n    },\n\n\n    /**\n     * Only update the value which is not in props\n     */\n    setUncontrolledState: function setUncontrolledState(state) {\n      var needSync = false;\n      var newState = {};\n      var props = getOptionProps(this);\n      Object.keys(state).forEach(function (name) {\n        if (name.replace('_', '') in props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        this.setState(newState);\n      }\n    },\n    registerTreeNode: function registerTreeNode(key, node) {\n      if (node) {\n        this.domTreeNodes[key] = node;\n      } else {\n        delete this.domTreeNodes[key];\n      }\n    },\n    isKeyChecked: function isKeyChecked(key) {\n      var _$data$_checkedKeys = this.$data._checkedKeys,\n          checkedKeys = _$data$_checkedKeys === undefined ? [] : _$data$_checkedKeys;\n\n      return checkedKeys.indexOf(key) !== -1;\n    },\n\n\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n    renderTreeNode: function renderTreeNode(child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _$data5 = this.$data,\n          keyEntities = _$data5._keyEntities,\n          _$data5$_expandedKeys = _$data5._expandedKeys,\n          expandedKeys = _$data5$_expandedKeys === undefined ? [] : _$data5$_expandedKeys,\n          _$data5$_selectedKeys = _$data5._selectedKeys,\n          selectedKeys = _$data5$_selectedKeys === undefined ? [] : _$data5$_selectedKeys,\n          _$data5$_halfCheckedK = _$data5._halfCheckedKeys,\n          halfCheckedKeys = _$data5$_halfCheckedK === undefined ? [] : _$data5$_halfCheckedK,\n          _$data5$_loadedKeys = _$data5._loadedKeys,\n          loadedKeys = _$data5$_loadedKeys === undefined ? [] : _$data5$_loadedKeys,\n          _$data5$_loadingKeys = _$data5._loadingKeys,\n          loadingKeys = _$data5$_loadingKeys === undefined ? [] : _$data5$_loadingKeys,\n          dragOverNodeKey = _$data5._dragOverNodeKey,\n          dropPosition = _$data5._dropPosition;\n\n      var pos = getPosition(level, index);\n      var key = child.key;\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n      if (!keyEntities.get(key)) {\n        warnOnlyTreeNode();\n        return null;\n      }\n\n      return cloneElement(child, {\n        props: {\n          eventKey: key,\n          expanded: expandedKeys.indexOf(key) !== -1,\n          selected: selectedKeys.indexOf(key) !== -1,\n          loaded: loadedKeys.indexOf(key) !== -1,\n          loading: loadingKeys.indexOf(key) !== -1,\n          checked: this.isKeyChecked(key),\n          halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n          pos: pos,\n\n          // [Legacy] Drag props\n          dragOver: dragOverNodeKey === key && dropPosition === 0,\n          dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n          dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n        },\n        key: key\n      });\n    }\n  },\n\n  render: function render() {\n    var _this4 = this;\n\n    var h = arguments[0];\n    var treeNode = this.$data._treeNode;\n    var _$props = this.$props,\n        prefixCls = _$props.prefixCls,\n        focusable = _$props.focusable,\n        showLine = _$props.showLine,\n        _$props$tabIndex = _$props.tabIndex,\n        tabIndex = _$props$tabIndex === undefined ? 0 : _$props$tabIndex;\n\n\n    return h(\n      'ul',\n      {\n        'class': classNames(prefixCls, _defineProperty({}, prefixCls + '-show-line', showLine)),\n        attrs: { role: 'tree',\n          unselectable: 'on',\n          tabIndex: focusable ? tabIndex : null\n        }\n      },\n      [mapChildren(treeNode, function (node, index) {\n        return _this4.renderTreeNode(node, index);\n      })]\n    );\n  }\n};\n\nexport { Tree };\n\nexport default proxyComponent(Tree);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}