{"ast":null,"code":"import { service } from '@/api/index';\n\n/*\n    快捷开关的请求\n */\nexport const switchApi = (type, flag) => {\n  return service.request({\n    url: '/functional/quickSwitch',\n    method: 'put',\n    data: {\n      data: {\n        type: type,\n        flag: flag\n      }\n    }\n  }).then(res => res);\n};\nexport const switchStatus = () => {\n  return service.request({\n    url: '/functional/switchStatus',\n    method: 'get'\n  }).then(res => res);\n};\nexport const clearR1Cache = () => {\n  return service.request({\n    url: '/functional/clearCache',\n    method: 'post'\n  }).then(res => res);\n};\n\n/*\n    r1概览的请求\n */\n// docker容器硬件信息\nexport const getDockerSystemStatus = () => {\n  return service.request({\n    url: '/functional/getSystemStatus',\n    method: 'get'\n  }).then(res => res);\n};\n// 获取容器top5的进程\nexport const getPs = () => {\n  return service.request({\n    url: '/functional/getPs',\n    method: 'get'\n  }).then(res => res);\n};\n\n// r1所有api信息\nexport const getR1Api = () => {\n  return service.request({\n    url: '/functional/getApiInfo',\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    生成器的一些请求\n */\nexport const generatePostmanTest = param => {\n  return service.request({\n    url: '/functional/generatePostmanTest',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\nexport const generateCode = (entityName, type) => {\n  return service.request({\n    url: '/functional/generateCode?entity_name=' + entityName + \"&type=\" + type,\n    method: 'get'\n  }).then(res => res);\n};\nexport const getSlateDoc = param => {\n  return service.request({\n    url: '/functional/generateSlateDoc' + param,\n    method: 'get'\n  }).then(res => res);\n};\nexport const generateTsInterface = (param, name) => {\n  return service.request({\n    url: '/functional/generateTsInterface?name=' + name,\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\n\n/*\n    获取日志的请求\n */\nexport const getLog = param => {\n  return service.request({\n    url: '/resource/operation_log' + param,\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    获取r1下某个目录下文件列表\n */\nexport const getFileLists = param => {\n  return service.request({\n    url: '/functional/getFileLists' + param,\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    获取r1所在数据库服务器下所有数据库列表\n */\nexport const getDatabaseList = () => {\n  return service.request({\n    url: '/functional/getDatabaseList',\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    DatabaseBackup 的接口\n */\nexport const getDatabaseBackup = params => {\n  return service.request({\n    url: '/resource/databaseBackup' + params,\n    method: 'get'\n  }).then(res => res);\n};\nexport const postDatabaseBackup = param => {\n  return service.request({\n    url: '/resource/databaseBackup',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\nexport const putDatabaseBackup = param => {\n  return service.request({\n    url: '/resource/databaseBackup',\n    method: 'put',\n    data: param\n  }).then(res => res);\n};\nexport const deleteDatabaseBackup = param => {\n  return service.request({\n    url: '/resource/databaseBackup',\n    method: 'delete',\n    data: param\n  }).then(res => res);\n};\nexport const importDatabaseBackup = param => {\n  return service.request({\n    url: '/resource/databaseBackup/import',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\n\n/*\n    NewmanTasks 以及 runNewman的接口\n */\nexport const getNewmanTasks = param => {\n  return service.request({\n    url: '/resource/newman_tasks' + param,\n    method: 'get'\n  }).then(res => res);\n};\nexport const postNewmanTasks = param => {\n  return service.request({\n    url: '/resource/newman_tasks',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\nexport const putNewmanTasks = param => {\n  return service.request({\n    url: '/resource/newman_tasks',\n    method: 'put',\n    data: param\n  }).then(res => res);\n};\nexport const deleteNewmanTasks = param => {\n  return service.request({\n    url: '/resource/newman_tasks',\n    method: 'delete',\n    data: param\n  }).then(res => res);\n};\nexport const runNewman = param => {\n  return service.request({\n    url: '/functional/runNewman',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\n\n/*\n    ScriptData的接口\n */\nexport const getScriptData = param => {\n  return service.request({\n    url: '/resource/scripts' + param,\n    method: 'get'\n  }).then(res => res);\n};\nexport const postScriptData = param => {\n  return service.request({\n    url: '/resource/scripts',\n    data: param,\n    method: 'post'\n  }).then(res => res);\n};\nexport const putScriptData = param => {\n  return service.request({\n    url: '/resource/scripts',\n    data: param,\n    method: 'put'\n  }).then(res => res);\n};\nexport const deleteScriptData = params => {\n  return service.request({\n    url: '/resource/scripts',\n    data: params,\n    method: 'delete'\n  }).then(res => res);\n};\nexport const runScript = params => {\n  return service.request({\n    url: '/functional/runScript',\n    data: params,\n    method: 'post'\n  }).then(res => res);\n};\n\n/*\n    Tags的接口\n */\nexport const getTags = () => {\n  return service.request({\n    url: '/resource/tags',\n    method: 'get'\n  }).then(res => res);\n};\nexport const postTags = params => {\n  return service.request({\n    url: '/resource/tags',\n    data: params,\n    method: 'post'\n  }).then(res => res);\n};\n\n/*\n    文件相关的接口\n */\nexport const downloadFile = path => {\n  return service.request({\n    url: '/functional/downloadFile',\n    data: {\n      data: {\n        path: path\n      }\n    },\n    responseType: 'blob',\n    method: 'post'\n  }).then(res => res);\n};\nexport const uploadFile = (data, type) => {\n  return service.request({\n    url: '/functional/uploadFile?type=' + type,\n    maxBodyLength: Infinity,\n    data: data,\n    method: 'post'\n  }).then(res => res);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}