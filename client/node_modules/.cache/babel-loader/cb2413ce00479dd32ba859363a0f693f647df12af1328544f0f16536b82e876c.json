{"ast":null,"code":"import { ref, onBeforeUnmount, onMounted } from 'vue';\nimport useState from '../../../_util/hooks/useState';\nconst MIN_SWIPE_DISTANCE = 0.1;\nconst STOP_SWIPE_DISTANCE = 0.01;\nconst REFRESH_INTERVAL = 20;\nconst SPEED_OFF_MULTIPLE = Math.pow(0.995, REFRESH_INTERVAL);\n// ================================= Hook =================================\nexport default function useTouchMove(domRef, onOffset) {\n  const [touchPosition, setTouchPosition] = useState();\n  const [lastTimestamp, setLastTimestamp] = useState(0);\n  const [lastTimeDiff, setLastTimeDiff] = useState(0);\n  const [lastOffset, setLastOffset] = useState();\n  const motionInterval = ref();\n  // ========================= Events =========================\n  // >>> Touch events\n  function onTouchStart(e) {\n    const {\n      screenX,\n      screenY\n    } = e.touches[0];\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    clearInterval(motionInterval.value);\n  }\n  function onTouchMove(e) {\n    if (!touchPosition.value) return;\n    e.preventDefault();\n    const {\n      screenX,\n      screenY\n    } = e.touches[0];\n    const offsetX = screenX - touchPosition.value.x;\n    const offsetY = screenY - touchPosition.value.y;\n    onOffset(offsetX, offsetY);\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    const now = Date.now();\n    setLastTimeDiff(now - lastTimestamp.value);\n    setLastTimestamp(now);\n    setLastOffset({\n      x: offsetX,\n      y: offsetY\n    });\n  }\n  function onTouchEnd() {\n    if (!touchPosition.value) return;\n    const lastOffsetValue = lastOffset.value;\n    setTouchPosition(null);\n    setLastOffset(null);\n    // Swipe if needed\n    if (lastOffsetValue) {\n      const distanceX = lastOffsetValue.x / lastTimeDiff.value;\n      const distanceY = lastOffsetValue.y / lastTimeDiff.value;\n      const absX = Math.abs(distanceX);\n      const absY = Math.abs(distanceY);\n      // Skip swipe if low distance\n      if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) return;\n      let currentX = distanceX;\n      let currentY = distanceY;\n      motionInterval.value = setInterval(() => {\n        if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n          clearInterval(motionInterval.value);\n          return;\n        }\n        currentX *= SPEED_OFF_MULTIPLE;\n        currentY *= SPEED_OFF_MULTIPLE;\n        onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL);\n      }, REFRESH_INTERVAL);\n    }\n  }\n  // >>> Wheel event\n  const lastWheelDirectionRef = ref();\n  function onWheel(e) {\n    const {\n      deltaX,\n      deltaY\n    } = e;\n    // Convert both to x & y since wheel only happened on PC\n    let mixed = 0;\n    const absX = Math.abs(deltaX);\n    const absY = Math.abs(deltaY);\n    if (absX === absY) {\n      mixed = lastWheelDirectionRef.value === 'x' ? deltaX : deltaY;\n    } else if (absX > absY) {\n      mixed = deltaX;\n      lastWheelDirectionRef.value = 'x';\n    } else {\n      mixed = deltaY;\n      lastWheelDirectionRef.value = 'y';\n    }\n    if (onOffset(-mixed, -mixed)) {\n      e.preventDefault();\n    }\n  }\n  // ========================= Effect =========================\n  const touchEventsRef = ref({\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onWheel\n  });\n  function onProxyTouchStart(e) {\n    touchEventsRef.value.onTouchStart(e);\n  }\n  function onProxyTouchMove(e) {\n    touchEventsRef.value.onTouchMove(e);\n  }\n  function onProxyTouchEnd(e) {\n    touchEventsRef.value.onTouchEnd(e);\n  }\n  function onProxyWheel(e) {\n    touchEventsRef.value.onWheel(e);\n  }\n  onMounted(() => {\n    var _a, _b;\n    document.addEventListener('touchmove', onProxyTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onProxyTouchEnd, {\n      passive: false\n    });\n    // No need to clean up since element removed\n    (_a = domRef.value) === null || _a === void 0 ? void 0 : _a.addEventListener('touchstart', onProxyTouchStart, {\n      passive: false\n    });\n    (_b = domRef.value) === null || _b === void 0 ? void 0 : _b.addEventListener('wheel', onProxyWheel, {\n      passive: false\n    });\n  });\n  onBeforeUnmount(() => {\n    document.removeEventListener('touchmove', onProxyTouchMove);\n    document.removeEventListener('touchend', onProxyTouchEnd);\n  });\n}","map":{"version":3,"names":["ref","onBeforeUnmount","onMounted","useState","MIN_SWIPE_DISTANCE","STOP_SWIPE_DISTANCE","REFRESH_INTERVAL","SPEED_OFF_MULTIPLE","Math","pow","useTouchMove","domRef","onOffset","touchPosition","setTouchPosition","lastTimestamp","setLastTimestamp","lastTimeDiff","setLastTimeDiff","lastOffset","setLastOffset","motionInterval","onTouchStart","e","screenX","screenY","touches","x","y","clearInterval","value","onTouchMove","preventDefault","offsetX","offsetY","now","Date","onTouchEnd","lastOffsetValue","distanceX","distanceY","absX","abs","absY","max","currentX","currentY","setInterval","lastWheelDirectionRef","onWheel","deltaX","deltaY","mixed","touchEventsRef","onProxyTouchStart","onProxyTouchMove","onProxyTouchEnd","onProxyWheel","_a","_b","document","addEventListener","passive","removeEventListener"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/tabs/src/hooks/useTouchMove.js"],"sourcesContent":["import { ref, onBeforeUnmount, onMounted } from 'vue';\nimport useState from '../../../_util/hooks/useState';\nconst MIN_SWIPE_DISTANCE = 0.1;\nconst STOP_SWIPE_DISTANCE = 0.01;\nconst REFRESH_INTERVAL = 20;\nconst SPEED_OFF_MULTIPLE = Math.pow(0.995, REFRESH_INTERVAL);\n// ================================= Hook =================================\nexport default function useTouchMove(domRef, onOffset) {\n  const [touchPosition, setTouchPosition] = useState();\n  const [lastTimestamp, setLastTimestamp] = useState(0);\n  const [lastTimeDiff, setLastTimeDiff] = useState(0);\n  const [lastOffset, setLastOffset] = useState();\n  const motionInterval = ref();\n  // ========================= Events =========================\n  // >>> Touch events\n  function onTouchStart(e) {\n    const {\n      screenX,\n      screenY\n    } = e.touches[0];\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    clearInterval(motionInterval.value);\n  }\n  function onTouchMove(e) {\n    if (!touchPosition.value) return;\n    e.preventDefault();\n    const {\n      screenX,\n      screenY\n    } = e.touches[0];\n    const offsetX = screenX - touchPosition.value.x;\n    const offsetY = screenY - touchPosition.value.y;\n    onOffset(offsetX, offsetY);\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    const now = Date.now();\n    setLastTimeDiff(now - lastTimestamp.value);\n    setLastTimestamp(now);\n    setLastOffset({\n      x: offsetX,\n      y: offsetY\n    });\n  }\n  function onTouchEnd() {\n    if (!touchPosition.value) return;\n    const lastOffsetValue = lastOffset.value;\n    setTouchPosition(null);\n    setLastOffset(null);\n    // Swipe if needed\n    if (lastOffsetValue) {\n      const distanceX = lastOffsetValue.x / lastTimeDiff.value;\n      const distanceY = lastOffsetValue.y / lastTimeDiff.value;\n      const absX = Math.abs(distanceX);\n      const absY = Math.abs(distanceY);\n      // Skip swipe if low distance\n      if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) return;\n      let currentX = distanceX;\n      let currentY = distanceY;\n      motionInterval.value = setInterval(() => {\n        if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n          clearInterval(motionInterval.value);\n          return;\n        }\n        currentX *= SPEED_OFF_MULTIPLE;\n        currentY *= SPEED_OFF_MULTIPLE;\n        onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL);\n      }, REFRESH_INTERVAL);\n    }\n  }\n  // >>> Wheel event\n  const lastWheelDirectionRef = ref();\n  function onWheel(e) {\n    const {\n      deltaX,\n      deltaY\n    } = e;\n    // Convert both to x & y since wheel only happened on PC\n    let mixed = 0;\n    const absX = Math.abs(deltaX);\n    const absY = Math.abs(deltaY);\n    if (absX === absY) {\n      mixed = lastWheelDirectionRef.value === 'x' ? deltaX : deltaY;\n    } else if (absX > absY) {\n      mixed = deltaX;\n      lastWheelDirectionRef.value = 'x';\n    } else {\n      mixed = deltaY;\n      lastWheelDirectionRef.value = 'y';\n    }\n    if (onOffset(-mixed, -mixed)) {\n      e.preventDefault();\n    }\n  }\n  // ========================= Effect =========================\n  const touchEventsRef = ref({\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onWheel\n  });\n  function onProxyTouchStart(e) {\n    touchEventsRef.value.onTouchStart(e);\n  }\n  function onProxyTouchMove(e) {\n    touchEventsRef.value.onTouchMove(e);\n  }\n  function onProxyTouchEnd(e) {\n    touchEventsRef.value.onTouchEnd(e);\n  }\n  function onProxyWheel(e) {\n    touchEventsRef.value.onWheel(e);\n  }\n  onMounted(() => {\n    var _a, _b;\n    document.addEventListener('touchmove', onProxyTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onProxyTouchEnd, {\n      passive: false\n    });\n    // No need to clean up since element removed\n    (_a = domRef.value) === null || _a === void 0 ? void 0 : _a.addEventListener('touchstart', onProxyTouchStart, {\n      passive: false\n    });\n    (_b = domRef.value) === null || _b === void 0 ? void 0 : _b.addEventListener('wheel', onProxyWheel, {\n      passive: false\n    });\n  });\n  onBeforeUnmount(() => {\n    document.removeEventListener('touchmove', onProxyTouchMove);\n    document.removeEventListener('touchend', onProxyTouchEnd);\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}