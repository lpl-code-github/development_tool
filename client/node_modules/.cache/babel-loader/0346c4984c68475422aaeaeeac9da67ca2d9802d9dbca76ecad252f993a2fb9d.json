{"ast":null,"code":"import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _extends from 'babel-runtime/helpers/extends';\nimport { Item, itemProps } from '../vc-menu';\nimport { getOptionProps, getListeners } from '../_util/props-util';\nimport Tooltip from '../tooltip';\nfunction noop() {}\nexport default {\n  name: 'MenuItem',\n  inheritAttrs: false,\n  props: itemProps,\n  inject: {\n    getInlineCollapsed: {\n      'default': function _default() {\n        return noop;\n      }\n    },\n    layoutSiderContext: {\n      'default': function _default() {\n        return {};\n      }\n    }\n  },\n  isMenuItem: true,\n  methods: {\n    onKeyDown: function onKeyDown(e) {\n      this.$refs.menuItem.onKeyDown(e);\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var props = getOptionProps(this);\n    var level = props.level,\n      title = props.title,\n      rootPrefixCls = props.rootPrefixCls;\n    var getInlineCollapsed = this.getInlineCollapsed,\n      $slots = this.$slots,\n      attrs = this.$attrs;\n    var inlineCollapsed = getInlineCollapsed();\n    var tooltipTitle = title;\n    if (typeof title === 'undefined') {\n      tooltipTitle = level === 1 ? $slots['default'] : '';\n    } else if (title === false) {\n      tooltipTitle = '';\n    }\n    var tooltipProps = {\n      title: tooltipTitle\n    };\n    var siderCollapsed = this.layoutSiderContext.sCollapsed;\n    if (!siderCollapsed && !inlineCollapsed) {\n      tooltipProps.title = null;\n      // Reset `visible` to fix control mode tooltip display not correct\n      // ref: https://github.com/ant-design/ant-design/issues/16742\n      tooltipProps.visible = false;\n    }\n    var itemProps = {\n      props: _extends({}, props, {\n        title: title\n      }),\n      attrs: attrs,\n      on: getListeners(this)\n    };\n    var toolTipProps = {\n      props: _extends({}, tooltipProps, {\n        placement: 'right',\n        overlayClassName: rootPrefixCls + '-inline-collapsed-tooltip'\n      })\n    };\n    return h(Tooltip, toolTipProps, [h(Item, _mergeJSXProps([itemProps, {\n      ref: 'menuItem'\n    }]), [$slots['default']])]);\n  }\n};","map":{"version":3,"names":["_mergeJSXProps","_extends","Item","itemProps","getOptionProps","getListeners","Tooltip","noop","name","inheritAttrs","props","inject","getInlineCollapsed","_default","layoutSiderContext","isMenuItem","methods","onKeyDown","e","$refs","menuItem","render","h","arguments","level","title","rootPrefixCls","$slots","attrs","$attrs","inlineCollapsed","tooltipTitle","tooltipProps","siderCollapsed","sCollapsed","visible","on","toolTipProps","placement","overlayClassName","ref"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/menu/MenuItem.js"],"sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _extends from 'babel-runtime/helpers/extends';\nimport { Item, itemProps } from '../vc-menu';\nimport { getOptionProps, getListeners } from '../_util/props-util';\nimport Tooltip from '../tooltip';\nfunction noop() {}\nexport default {\n  name: 'MenuItem',\n  inheritAttrs: false,\n  props: itemProps,\n  inject: {\n    getInlineCollapsed: { 'default': function _default() {\n        return noop;\n      } },\n    layoutSiderContext: { 'default': function _default() {\n        return {};\n      } }\n  },\n  isMenuItem: true,\n  methods: {\n    onKeyDown: function onKeyDown(e) {\n      this.$refs.menuItem.onKeyDown(e);\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    var props = getOptionProps(this);\n    var level = props.level,\n        title = props.title,\n        rootPrefixCls = props.rootPrefixCls;\n    var getInlineCollapsed = this.getInlineCollapsed,\n        $slots = this.$slots,\n        attrs = this.$attrs;\n\n    var inlineCollapsed = getInlineCollapsed();\n    var tooltipTitle = title;\n    if (typeof title === 'undefined') {\n      tooltipTitle = level === 1 ? $slots['default'] : '';\n    } else if (title === false) {\n      tooltipTitle = '';\n    }\n    var tooltipProps = {\n      title: tooltipTitle\n    };\n    var siderCollapsed = this.layoutSiderContext.sCollapsed;\n    if (!siderCollapsed && !inlineCollapsed) {\n      tooltipProps.title = null;\n      // Reset `visible` to fix control mode tooltip display not correct\n      // ref: https://github.com/ant-design/ant-design/issues/16742\n      tooltipProps.visible = false;\n    }\n\n    var itemProps = {\n      props: _extends({}, props, {\n        title: title\n      }),\n      attrs: attrs,\n      on: getListeners(this)\n    };\n    var toolTipProps = {\n      props: _extends({}, tooltipProps, {\n        placement: 'right',\n        overlayClassName: rootPrefixCls + '-inline-collapsed-tooltip'\n      })\n    };\n    return h(\n      Tooltip,\n      toolTipProps,\n      [h(\n        Item,\n        _mergeJSXProps([itemProps, { ref: 'menuItem' }]),\n        [$slots['default']]\n      )]\n    );\n  }\n};"],"mappings":"AAAA,OAAOA,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,SAASC,IAAI,EAAEC,SAAS,QAAQ,YAAY;AAC5C,SAASC,cAAc,EAAEC,YAAY,QAAQ,qBAAqB;AAClE,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,IAAIA,CAAA,EAAG,CAAC;AACjB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAEP,SAAS;EAChBQ,MAAM,EAAE;IACNC,kBAAkB,EAAE;MAAE,SAAS,EAAE,SAASC,QAAQA,CAAA,EAAG;QACjD,OAAON,IAAI;MACb;IAAE,CAAC;IACLO,kBAAkB,EAAE;MAAE,SAAS,EAAE,SAASD,QAAQA,CAAA,EAAG;QACjD,OAAO,CAAC,CAAC;MACX;IAAE;EACN,CAAC;EACDE,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,SAAS,EAAE,SAASA,SAASA,CAACC,CAAC,EAAE;MAC/B,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACH,SAAS,CAACC,CAAC,CAAC;IAClC;EACF,CAAC;EACDG,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;IACxB,IAAIC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC;IAEpB,IAAIb,KAAK,GAAGN,cAAc,CAAC,IAAI,CAAC;IAChC,IAAIoB,KAAK,GAAGd,KAAK,CAACc,KAAK;MACnBC,KAAK,GAAGf,KAAK,CAACe,KAAK;MACnBC,aAAa,GAAGhB,KAAK,CAACgB,aAAa;IACvC,IAAId,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAC5Ce,MAAM,GAAG,IAAI,CAACA,MAAM;MACpBC,KAAK,GAAG,IAAI,CAACC,MAAM;IAEvB,IAAIC,eAAe,GAAGlB,kBAAkB,CAAC,CAAC;IAC1C,IAAImB,YAAY,GAAGN,KAAK;IACxB,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;MAChCM,YAAY,GAAGP,KAAK,KAAK,CAAC,GAAGG,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE;IACrD,CAAC,MAAM,IAAIF,KAAK,KAAK,KAAK,EAAE;MAC1BM,YAAY,GAAG,EAAE;IACnB;IACA,IAAIC,YAAY,GAAG;MACjBP,KAAK,EAAEM;IACT,CAAC;IACD,IAAIE,cAAc,GAAG,IAAI,CAACnB,kBAAkB,CAACoB,UAAU;IACvD,IAAI,CAACD,cAAc,IAAI,CAACH,eAAe,EAAE;MACvCE,YAAY,CAACP,KAAK,GAAG,IAAI;MACzB;MACA;MACAO,YAAY,CAACG,OAAO,GAAG,KAAK;IAC9B;IAEA,IAAIhC,SAAS,GAAG;MACdO,KAAK,EAAET,QAAQ,CAAC,CAAC,CAAC,EAAES,KAAK,EAAE;QACzBe,KAAK,EAAEA;MACT,CAAC,CAAC;MACFG,KAAK,EAAEA,KAAK;MACZQ,EAAE,EAAE/B,YAAY,CAAC,IAAI;IACvB,CAAC;IACD,IAAIgC,YAAY,GAAG;MACjB3B,KAAK,EAAET,QAAQ,CAAC,CAAC,CAAC,EAAE+B,YAAY,EAAE;QAChCM,SAAS,EAAE,OAAO;QAClBC,gBAAgB,EAAEb,aAAa,GAAG;MACpC,CAAC;IACH,CAAC;IACD,OAAOJ,CAAC,CACNhB,OAAO,EACP+B,YAAY,EACZ,CAACf,CAAC,CACApB,IAAI,EACJF,cAAc,CAAC,CAACG,SAAS,EAAE;MAAEqC,GAAG,EAAE;IAAW,CAAC,CAAC,CAAC,EAChD,CAACb,MAAM,CAAC,SAAS,CAAC,CACpB,CAAC,CACH,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}