{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport Cell from '../Cell';\nimport { useInjectSummary } from '../context/SummaryContext';\nimport { useInjectTable } from '../context/TableContext';\nimport { getCellFixedInfo } from '../utils/fixUtil';\nexport default defineComponent({\n  name: 'ATableSummaryCell',\n  props: ['index', 'colSpan', 'rowSpan', 'align'],\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const tableContext = useInjectTable();\n    const summaryContext = useInjectSummary();\n    return () => {\n      const {\n        index,\n        colSpan = 1,\n        rowSpan,\n        align\n      } = props;\n      const {\n        prefixCls,\n        direction\n      } = tableContext;\n      const {\n        scrollColumnIndex,\n        stickyOffsets,\n        flattenColumns\n      } = summaryContext;\n      const lastIndex = index + colSpan - 1;\n      const mergedColSpan = lastIndex + 1 === scrollColumnIndex ? colSpan + 1 : colSpan;\n      const fixedInfo = getCellFixedInfo(index, index + mergedColSpan - 1, flattenColumns, stickyOffsets, direction);\n      return _createVNode(Cell, _objectSpread({\n        \"class\": attrs.class,\n        \"index\": index,\n        \"component\": \"td\",\n        \"prefixCls\": prefixCls,\n        \"record\": null,\n        \"dataIndex\": null,\n        \"align\": align,\n        \"colSpan\": mergedColSpan,\n        \"rowSpan\": rowSpan,\n        \"customRender\": () => {\n          var _a;\n          return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);\n        }\n      }, fixedInfo), null);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","defineComponent","Cell","useInjectSummary","useInjectTable","getCellFixedInfo","name","props","setup","_ref","attrs","slots","tableContext","summaryContext","index","colSpan","rowSpan","align","prefixCls","direction","scrollColumnIndex","stickyOffsets","flattenColumns","lastIndex","mergedColSpan","fixedInfo","class","customRender","_a","default","call"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-table/Footer/Cell.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport Cell from '../Cell';\nimport { useInjectSummary } from '../context/SummaryContext';\nimport { useInjectTable } from '../context/TableContext';\nimport { getCellFixedInfo } from '../utils/fixUtil';\nexport default defineComponent({\n  name: 'ATableSummaryCell',\n  props: ['index', 'colSpan', 'rowSpan', 'align'],\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const tableContext = useInjectTable();\n    const summaryContext = useInjectSummary();\n    return () => {\n      const {\n        index,\n        colSpan = 1,\n        rowSpan,\n        align\n      } = props;\n      const {\n        prefixCls,\n        direction\n      } = tableContext;\n      const {\n        scrollColumnIndex,\n        stickyOffsets,\n        flattenColumns\n      } = summaryContext;\n      const lastIndex = index + colSpan - 1;\n      const mergedColSpan = lastIndex + 1 === scrollColumnIndex ? colSpan + 1 : colSpan;\n      const fixedInfo = getCellFixedInfo(index, index + mergedColSpan - 1, flattenColumns, stickyOffsets, direction);\n      return _createVNode(Cell, _objectSpread({\n        \"class\": attrs.class,\n        \"index\": index,\n        \"component\": \"td\",\n        \"prefixCls\": prefixCls,\n        \"record\": null,\n        \"dataIndex\": null,\n        \"align\": align,\n        \"colSpan\": mergedColSpan,\n        \"rowSpan\": rowSpan,\n        \"customRender\": () => {\n          var _a;\n          return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);\n        }\n      }, fixedInfo), null);\n    };\n  }\n});"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,SAASC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,SAASC,eAAe,QAAQ,KAAK;AACrC,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,eAAeJ,eAAe,CAAC;EAC7BK,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC;EAC/CC,KAAKA,CAACD,KAAK,EAAEE,IAAI,EAAE;IACjB,IAAI;MACFC,KAAK;MACLC;IACF,CAAC,GAAGF,IAAI;IACR,MAAMG,YAAY,GAAGR,cAAc,CAAC,CAAC;IACrC,MAAMS,cAAc,GAAGV,gBAAgB,CAAC,CAAC;IACzC,OAAO,MAAM;MACX,MAAM;QACJW,KAAK;QACLC,OAAO,GAAG,CAAC;QACXC,OAAO;QACPC;MACF,CAAC,GAAGV,KAAK;MACT,MAAM;QACJW,SAAS;QACTC;MACF,CAAC,GAAGP,YAAY;MAChB,MAAM;QACJQ,iBAAiB;QACjBC,aAAa;QACbC;MACF,CAAC,GAAGT,cAAc;MAClB,MAAMU,SAAS,GAAGT,KAAK,GAAGC,OAAO,GAAG,CAAC;MACrC,MAAMS,aAAa,GAAGD,SAAS,GAAG,CAAC,KAAKH,iBAAiB,GAAGL,OAAO,GAAG,CAAC,GAAGA,OAAO;MACjF,MAAMU,SAAS,GAAGpB,gBAAgB,CAACS,KAAK,EAAEA,KAAK,GAAGU,aAAa,GAAG,CAAC,EAAEF,cAAc,EAAED,aAAa,EAAEF,SAAS,CAAC;MAC9G,OAAOnB,YAAY,CAACE,IAAI,EAAEJ,aAAa,CAAC;QACtC,OAAO,EAAEY,KAAK,CAACgB,KAAK;QACpB,OAAO,EAAEZ,KAAK;QACd,WAAW,EAAE,IAAI;QACjB,WAAW,EAAEI,SAAS;QACtB,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE,IAAI;QACjB,OAAO,EAAED,KAAK;QACd,SAAS,EAAEO,aAAa;QACxB,SAAS,EAAER,OAAO;QAClB,cAAc,EAAEW,CAAA,KAAM;UACpB,IAAIC,EAAE;UACN,OAAO,CAACA,EAAE,GAAGjB,KAAK,CAACkB,OAAO,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,IAAI,CAACnB,KAAK,CAAC;QACjF;MACF,CAAC,EAAEc,SAAS,CAAC,EAAE,IAAI,CAAC;IACtB,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}