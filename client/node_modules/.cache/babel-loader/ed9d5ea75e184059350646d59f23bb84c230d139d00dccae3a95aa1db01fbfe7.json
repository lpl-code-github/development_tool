{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport { getPropsSlot } from '../_util/props-util';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport { vNodeType } from '../_util/type';\nexport const cardMetaProps = () => ({\n  prefixCls: String,\n  title: vNodeType(),\n  description: vNodeType(),\n  avatar: vNodeType()\n});\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ACardMeta',\n  props: cardMetaProps(),\n  slots: Object,\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      prefixCls\n    } = useConfigInject('card', props);\n    return () => {\n      const classString = {\n        [`${prefixCls.value}-meta`]: true\n      };\n      const avatar = getPropsSlot(slots, props, 'avatar');\n      const title = getPropsSlot(slots, props, 'title');\n      const description = getPropsSlot(slots, props, 'description');\n      const avatarDom = avatar ? _createVNode(\"div\", {\n        \"class\": `${prefixCls.value}-meta-avatar`\n      }, [avatar]) : null;\n      const titleDom = title ? _createVNode(\"div\", {\n        \"class\": `${prefixCls.value}-meta-title`\n      }, [title]) : null;\n      const descriptionDom = description ? _createVNode(\"div\", {\n        \"class\": `${prefixCls.value}-meta-description`\n      }, [description]) : null;\n      const MetaDetail = titleDom || descriptionDom ? _createVNode(\"div\", {\n        \"class\": `${prefixCls.value}-meta-detail`\n      }, [titleDom, descriptionDom]) : null;\n      return _createVNode(\"div\", {\n        \"class\": classString\n      }, [avatarDom, MetaDetail]);\n    };\n  }\n});","map":{"version":3,"names":["createVNode","_createVNode","defineComponent","getPropsSlot","useConfigInject","vNodeType","cardMetaProps","prefixCls","String","title","description","avatar","compatConfig","MODE","name","props","slots","Object","setup","_ref","classString","value","avatarDom","titleDom","descriptionDom","MetaDetail"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/card/Meta.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport { getPropsSlot } from '../_util/props-util';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport { vNodeType } from '../_util/type';\nexport const cardMetaProps = () => ({\n  prefixCls: String,\n  title: vNodeType(),\n  description: vNodeType(),\n  avatar: vNodeType()\n});\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ACardMeta',\n  props: cardMetaProps(),\n  slots: Object,\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      prefixCls\n    } = useConfigInject('card', props);\n    return () => {\n      const classString = {\n        [`${prefixCls.value}-meta`]: true\n      };\n      const avatar = getPropsSlot(slots, props, 'avatar');\n      const title = getPropsSlot(slots, props, 'title');\n      const description = getPropsSlot(slots, props, 'description');\n      const avatarDom = avatar ? _createVNode(\"div\", {\n        \"class\": `${prefixCls.value}-meta-avatar`\n      }, [avatar]) : null;\n      const titleDom = title ? _createVNode(\"div\", {\n        \"class\": `${prefixCls.value}-meta-title`\n      }, [title]) : null;\n      const descriptionDom = description ? _createVNode(\"div\", {\n        \"class\": `${prefixCls.value}-meta-description`\n      }, [description]) : null;\n      const MetaDetail = titleDom || descriptionDom ? _createVNode(\"div\", {\n        \"class\": `${prefixCls.value}-meta-detail`\n      }, [titleDom, descriptionDom]) : null;\n      return _createVNode(\"div\", {\n        \"class\": classString\n      }, [avatarDom, MetaDetail]);\n    };\n  }\n});"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,SAASC,eAAe,QAAQ,KAAK;AACrC,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAOC,eAAe,MAAM,0CAA0C;AACtE,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAO,MAAMC,aAAa,GAAGA,CAAA,MAAO;EAClCC,SAAS,EAAEC,MAAM;EACjBC,KAAK,EAAEJ,SAAS,CAAC,CAAC;EAClBK,WAAW,EAAEL,SAAS,CAAC,CAAC;EACxBM,MAAM,EAAEN,SAAS,CAAC;AACpB,CAAC,CAAC;AACF,eAAeH,eAAe,CAAC;EAC7BU,YAAY,EAAE;IACZC,IAAI,EAAE;EACR,CAAC;EACDC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAET,aAAa,CAAC,CAAC;EACtBU,KAAK,EAAEC,MAAM;EACbC,KAAKA,CAACH,KAAK,EAAEI,IAAI,EAAE;IACjB,IAAI;MACFH;IACF,CAAC,GAAGG,IAAI;IACR,MAAM;MACJZ;IACF,CAAC,GAAGH,eAAe,CAAC,MAAM,EAAEW,KAAK,CAAC;IAClC,OAAO,MAAM;MACX,MAAMK,WAAW,GAAG;QAClB,CAAE,GAAEb,SAAS,CAACc,KAAM,OAAM,GAAG;MAC/B,CAAC;MACD,MAAMV,MAAM,GAAGR,YAAY,CAACa,KAAK,EAAED,KAAK,EAAE,QAAQ,CAAC;MACnD,MAAMN,KAAK,GAAGN,YAAY,CAACa,KAAK,EAAED,KAAK,EAAE,OAAO,CAAC;MACjD,MAAML,WAAW,GAAGP,YAAY,CAACa,KAAK,EAAED,KAAK,EAAE,aAAa,CAAC;MAC7D,MAAMO,SAAS,GAAGX,MAAM,GAAGV,YAAY,CAAC,KAAK,EAAE;QAC7C,OAAO,EAAG,GAAEM,SAAS,CAACc,KAAM;MAC9B,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC,GAAG,IAAI;MACnB,MAAMY,QAAQ,GAAGd,KAAK,GAAGR,YAAY,CAAC,KAAK,EAAE;QAC3C,OAAO,EAAG,GAAEM,SAAS,CAACc,KAAM;MAC9B,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC,GAAG,IAAI;MAClB,MAAMe,cAAc,GAAGd,WAAW,GAAGT,YAAY,CAAC,KAAK,EAAE;QACvD,OAAO,EAAG,GAAEM,SAAS,CAACc,KAAM;MAC9B,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC,GAAG,IAAI;MACxB,MAAMe,UAAU,GAAGF,QAAQ,IAAIC,cAAc,GAAGvB,YAAY,CAAC,KAAK,EAAE;QAClE,OAAO,EAAG,GAAEM,SAAS,CAACc,KAAM;MAC9B,CAAC,EAAE,CAACE,QAAQ,EAAEC,cAAc,CAAC,CAAC,GAAG,IAAI;MACrC,OAAOvB,YAAY,CAAC,KAAK,EAAE;QACzB,OAAO,EAAEmB;MACX,CAAC,EAAE,CAACE,SAAS,EAAEG,UAAU,CAAC,CAAC;IAC7B,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}