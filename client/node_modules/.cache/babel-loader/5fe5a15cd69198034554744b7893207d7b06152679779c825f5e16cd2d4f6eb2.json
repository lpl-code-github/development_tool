{"ast":null,"code":"import ErrorMessageSwitch from \"@/components/switch/ErrorMessageSwitch\";\nimport EvnSwitch from \"@/components/switch/EvnSwitch\";\nimport TestControllerSwitch from \"@/components/switch/TestControllerSwitch\";\nimport SwitchComponent from \"@/components/switch/SwitchComponent\";\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'MyHeader',\n  components: {\n    SwitchComponent,\n    TestControllerSwitch,\n    EvnSwitch,\n    ErrorMessageSwitch\n  },\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      buttonSize: \"small\",\n      loadingUpdateSystem: true,\n      switchComponentData: [{\n        tooltipText: \"此开关打开，后端API将返回Symfony的报错信息，否则返回json的报错信息\",\n        switchText: \"后台报错信息\",\n        type: \"error_message\",\n        checked: false\n      }, {\n        tooltipText: \"此开关打开，后端代码的.env文件中将修改环境遍历APP_ENV=test，否则为dev\",\n        switchText: \"切换测试模式\",\n        type: \"evn\",\n        checked: false\n      }, {\n        tooltipText: \"此开关打开，后端将增加供postman使用的/backup和/reduction端点\",\n        switchText: \"导入备份端点\",\n        type: \"back_api\",\n        checked: false\n      }]\n    };\n  },\n  methods: {\n    handleQuickSwitch() {\n      this.$request.switchStatus().then(res => {\n        if (res.status !== 200) {}\n      });\n    }\n  }\n};","map":{"version":3,"names":["ErrorMessageSwitch","EvnSwitch","TestControllerSwitch","SwitchComponent","name","components","props","msg","String","data","buttonSize","loadingUpdateSystem","switchComponentData","tooltipText","switchText","type","checked","methods","handleQuickSwitch","$request","switchStatus","then","res","status"],"sources":["src/components/common/MyHeader.vue"],"sourcesContent":["<template>\n  <div class=\"header\">\n    <a-layout-header style=\"background: #fff; padding: 0;display: flex;justify-content: flex-end;align-items: center;\">\n      <a-button icon=\"setting\" :size=\"buttonSize\" style=\"margin-right: 20px\" :loading=\"loadingUpdateSystem\">\n        更新本系统\n      </a-button>\n\n      <!--快捷开关-->\n      <a-popover title=\"开关\" placement=\"topLeft\" trigger=\"click\" @click=\"handleQuickSwitch\">\n        <template slot=\"content\">\n          <SwitchComponent\n              v-for=\"(item,index) in switchComponentData\"\n              :key=\"index\"\n              :type=\"item.type\"\n              :switch-text=\"item.switchText\"\n              :tooltip-text=\"item.tooltipText\"\n          />\n        </template>\n        <a-button icon=\"setting\" :size=\"buttonSize\" style=\"margin-right: 20px\">\n          快捷开关\n        </a-button>\n      </a-popover>\n    </a-layout-header>\n\n\n  </div>\n</template>\n\n<script>\nimport ErrorMessageSwitch from \"@/components/switch/ErrorMessageSwitch\";\nimport EvnSwitch from \"@/components/switch/EvnSwitch\";\nimport TestControllerSwitch from \"@/components/switch/TestControllerSwitch\";\nimport SwitchComponent from \"@/components/switch/SwitchComponent\";\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'MyHeader',\n  components: {SwitchComponent, TestControllerSwitch, EvnSwitch, ErrorMessageSwitch},\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      buttonSize: \"small\",\n      loadingUpdateSystem: true,\n      switchComponentData: [\n        {\n          tooltipText: \"此开关打开，后端API将返回Symfony的报错信息，否则返回json的报错信息\",\n          switchText: \"后台报错信息\",\n          type: \"error_message\",\n          checked: false\n        },\n        {\n          tooltipText: \"此开关打开，后端代码的.env文件中将修改环境遍历APP_ENV=test，否则为dev\",\n          switchText: \"切换测试模式\",\n          type: \"evn\",\n          checked: false\n        },\n        {\n          tooltipText: \"此开关打开，后端将增加供postman使用的/backup和/reduction端点\",\n          switchText: \"导入备份端点\",\n          type: \"back_api\",\n          checked: false\n        }\n      ]\n    }\n  },\n  methods: {\n    handleQuickSwitch() {\n      this.$request.switchStatus().then(res=>{\n        if (res.status !== 200){\n\n        }\n      })\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AA6BA,OAAAA,kBAAA;AACA,OAAAC,SAAA;AACA,OAAAC,oBAAA;AACA,OAAAC,eAAA;AAEA;EACA;EACAC,IAAA;EACAC,UAAA;IAAAF,eAAA;IAAAD,oBAAA;IAAAD,SAAA;IAAAD;EAAA;EACAM,KAAA;IACAC,GAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,mBAAA;MACAC,mBAAA,GACA;QACAC,WAAA;QACAC,UAAA;QACAC,IAAA;QACAC,OAAA;MACA,GACA;QACAH,WAAA;QACAC,UAAA;QACAC,IAAA;QACAC,OAAA;MACA,GACA;QACAH,WAAA;QACAC,UAAA;QACAC,IAAA;QACAC,OAAA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,kBAAA;MACA,KAAAC,QAAA,CAAAC,YAAA,GAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA,WAEA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}