{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport VcUpload from '../vc-upload';\nimport UploadList from './UploadList';\nimport { uploadProps } from './interface';\nimport { file2Obj, getFileItem, removeFileItem, updateFileList } from './utils';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport { computed, defineComponent, onMounted, ref, toRef } from 'vue';\nimport { flattenChildren, initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport devWarning from '../vc-util/devWarning';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport classNames from '../_util/classNames';\nimport { useInjectFormItemContext } from '../form';\n// CSSINJS\nimport useStyle from './style';\nimport { useInjectDisabled } from '../config-provider/DisabledContext';\nexport const LIST_IGNORE = `__LIST_IGNORE_${Date.now()}__`;\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'AUpload',\n  inheritAttrs: false,\n  props: initDefaultProps(uploadProps(), {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    showUploadList: true,\n    listType: 'text',\n    disabled: false,\n    supportServerRender: true\n  }),\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs,\n      expose\n    } = _ref;\n    const formItemContext = useInjectFormItemContext();\n    const {\n      prefixCls,\n      direction,\n      disabled\n    } = useConfigInject('upload', props);\n    // style\n    const [wrapSSR, hashId] = useStyle(prefixCls);\n    const disabledContext = useInjectDisabled();\n    const mergedDisabled = computed(() => {\n      var _a;\n      return (_a = disabledContext.value) !== null && _a !== void 0 ? _a : disabled.value;\n    });\n    const [mergedFileList, setMergedFileList] = useMergedState(props.defaultFileList || [], {\n      value: toRef(props, 'fileList'),\n      postState: list => {\n        const timestamp = Date.now();\n        return (list !== null && list !== void 0 ? list : []).map((file, index) => {\n          if (!file.uid && !Object.isFrozen(file)) {\n            file.uid = `__AUTO__${timestamp}_${index}__`;\n          }\n          return file;\n        });\n      }\n    });\n    const dragState = ref('drop');\n    const upload = ref(null);\n    onMounted(() => {\n      devWarning(props.fileList !== undefined || attrs.value === undefined, 'Upload', '`value` is not a valid prop, do you mean `fileList`?');\n      devWarning(props.transformFile === undefined, 'Upload', '`transformFile` is deprecated. Please use `beforeUpload` directly.');\n      devWarning(props.remove === undefined, 'Upload', '`remove` props is deprecated. Please use `remove` event.');\n    });\n    const onInternalChange = (file, changedFileList, event) => {\n      var _a, _b;\n      let cloneList = [...changedFileList];\n      // Cut to match count\n      if (props.maxCount === 1) {\n        cloneList = cloneList.slice(-1);\n      } else if (props.maxCount) {\n        cloneList = cloneList.slice(0, props.maxCount);\n      }\n      setMergedFileList(cloneList);\n      const changeInfo = {\n        file: file,\n        fileList: cloneList\n      };\n      if (event) {\n        changeInfo.event = event;\n      }\n      (_a = props['onUpdate:fileList']) === null || _a === void 0 ? void 0 : _a.call(props, changeInfo.fileList);\n      (_b = props.onChange) === null || _b === void 0 ? void 0 : _b.call(props, changeInfo);\n      formItemContext.onFieldChange();\n    };\n    const mergedBeforeUpload = (file, fileListArgs) => __awaiter(this, void 0, void 0, function* () {\n      const {\n        beforeUpload,\n        transformFile\n      } = props;\n      let parsedFile = file;\n      if (beforeUpload) {\n        const result = yield beforeUpload(file, fileListArgs);\n        if (result === false) {\n          return false;\n        }\n        // Hack for LIST_IGNORE, we add additional info to remove from the list\n        delete file[LIST_IGNORE];\n        if (result === LIST_IGNORE) {\n          Object.defineProperty(file, LIST_IGNORE, {\n            value: true,\n            configurable: true\n          });\n          return false;\n        }\n        if (typeof result === 'object' && result) {\n          parsedFile = result;\n        }\n      }\n      if (transformFile) {\n        parsedFile = yield transformFile(parsedFile);\n      }\n      return parsedFile;\n    });\n    const onBatchStart = batchFileInfoList => {\n      // Skip file which marked as `LIST_IGNORE`, these file will not add to file list\n      const filteredFileInfoList = batchFileInfoList.filter(info => !info.file[LIST_IGNORE]);\n      // Nothing to do since no file need upload\n      if (!filteredFileInfoList.length) {\n        return;\n      }\n      const objectFileList = filteredFileInfoList.map(info => file2Obj(info.file));\n      // Concat new files with prev files\n      let newFileList = [...mergedFileList.value];\n      objectFileList.forEach(fileObj => {\n        // Replace file if exist\n        newFileList = updateFileList(fileObj, newFileList);\n      });\n      objectFileList.forEach((fileObj, index) => {\n        // Repeat trigger `onChange` event for compatible\n        let triggerFileObj = fileObj;\n        if (!filteredFileInfoList[index].parsedFile) {\n          // `beforeUpload` return false\n          const {\n            originFileObj\n          } = fileObj;\n          let clone;\n          try {\n            clone = new File([originFileObj], originFileObj.name, {\n              type: originFileObj.type\n            });\n          } catch (e) {\n            clone = new Blob([originFileObj], {\n              type: originFileObj.type\n            });\n            clone.name = originFileObj.name;\n            clone.lastModifiedDate = new Date();\n            clone.lastModified = new Date().getTime();\n          }\n          clone.uid = fileObj.uid;\n          triggerFileObj = clone;\n        } else {\n          // Inject `uploading` status\n          fileObj.status = 'uploading';\n        }\n        onInternalChange(triggerFileObj, newFileList);\n      });\n    };\n    const onSuccess = (response, file, xhr) => {\n      try {\n        if (typeof response === 'string') {\n          response = JSON.parse(response);\n        }\n      } catch (e) {\n        /* do nothing */\n      }\n      // removed\n      if (!getFileItem(file, mergedFileList.value)) {\n        return;\n      }\n      const targetItem = file2Obj(file);\n      targetItem.status = 'done';\n      targetItem.percent = 100;\n      targetItem.response = response;\n      targetItem.xhr = xhr;\n      const nextFileList = updateFileList(targetItem, mergedFileList.value);\n      onInternalChange(targetItem, nextFileList);\n    };\n    const onProgress = (e, file) => {\n      // removed\n      if (!getFileItem(file, mergedFileList.value)) {\n        return;\n      }\n      const targetItem = file2Obj(file);\n      targetItem.status = 'uploading';\n      targetItem.percent = e.percent;\n      const nextFileList = updateFileList(targetItem, mergedFileList.value);\n      onInternalChange(targetItem, nextFileList, e);\n    };\n    const onError = (error, response, file) => {\n      // removed\n      if (!getFileItem(file, mergedFileList.value)) {\n        return;\n      }\n      const targetItem = file2Obj(file);\n      targetItem.error = error;\n      targetItem.response = response;\n      targetItem.status = 'error';\n      const nextFileList = updateFileList(targetItem, mergedFileList.value);\n      onInternalChange(targetItem, nextFileList);\n    };\n    const handleRemove = file => {\n      let currentFile;\n      const mergedRemove = props.onRemove || props.remove;\n      Promise.resolve(typeof mergedRemove === 'function' ? mergedRemove(file) : mergedRemove).then(ret => {\n        var _a, _b;\n        // Prevent removing file\n        if (ret === false) {\n          return;\n        }\n        const removedFileList = removeFileItem(file, mergedFileList.value);\n        if (removedFileList) {\n          currentFile = _extends(_extends({}, file), {\n            status: 'removed'\n          });\n          (_a = mergedFileList.value) === null || _a === void 0 ? void 0 : _a.forEach(item => {\n            const matchKey = currentFile.uid !== undefined ? 'uid' : 'name';\n            if (item[matchKey] === currentFile[matchKey] && !Object.isFrozen(item)) {\n              item.status = 'removed';\n            }\n          });\n          (_b = upload.value) === null || _b === void 0 ? void 0 : _b.abort(currentFile);\n          onInternalChange(currentFile, removedFileList);\n        }\n      });\n    };\n    const onFileDrop = e => {\n      var _a;\n      dragState.value = e.type;\n      if (e.type === 'drop') {\n        (_a = props.onDrop) === null || _a === void 0 ? void 0 : _a.call(props, e);\n      }\n    };\n    expose({\n      onBatchStart,\n      onSuccess,\n      onProgress,\n      onError,\n      fileList: mergedFileList,\n      upload\n    });\n    const [locale] = useLocaleReceiver('Upload', defaultLocale.Upload, computed(() => props.locale));\n    const renderUploadList = (button, buttonVisible) => {\n      const {\n        removeIcon,\n        previewIcon,\n        downloadIcon,\n        previewFile,\n        onPreview,\n        onDownload,\n        isImageUrl,\n        progress,\n        itemRender,\n        iconRender,\n        showUploadList\n      } = props;\n      const {\n        showDownloadIcon,\n        showPreviewIcon,\n        showRemoveIcon\n      } = typeof showUploadList === 'boolean' ? {} : showUploadList;\n      return showUploadList ? _createVNode(UploadList, {\n        \"prefixCls\": prefixCls.value,\n        \"listType\": props.listType,\n        \"items\": mergedFileList.value,\n        \"previewFile\": previewFile,\n        \"onPreview\": onPreview,\n        \"onDownload\": onDownload,\n        \"onRemove\": handleRemove,\n        \"showRemoveIcon\": !mergedDisabled.value && showRemoveIcon,\n        \"showPreviewIcon\": showPreviewIcon,\n        \"showDownloadIcon\": showDownloadIcon,\n        \"removeIcon\": removeIcon,\n        \"previewIcon\": previewIcon,\n        \"downloadIcon\": downloadIcon,\n        \"iconRender\": iconRender,\n        \"locale\": locale.value,\n        \"isImageUrl\": isImageUrl,\n        \"progress\": progress,\n        \"itemRender\": itemRender,\n        \"appendActionVisible\": buttonVisible,\n        \"appendAction\": button\n      }, _extends({}, slots)) : button === null || button === void 0 ? void 0 : button();\n    };\n    return () => {\n      var _a, _b, _c;\n      const {\n        listType,\n        type\n      } = props;\n      const {\n          class: className,\n          style: styleName\n        } = attrs,\n        transAttrs = __rest(attrs, [\"class\", \"style\"]);\n      const rcUploadProps = _extends(_extends(_extends({\n        onBatchStart,\n        onError,\n        onProgress,\n        onSuccess\n      }, transAttrs), props), {\n        id: (_a = props.id) !== null && _a !== void 0 ? _a : formItemContext.id.value,\n        prefixCls: prefixCls.value,\n        beforeUpload: mergedBeforeUpload,\n        onChange: undefined,\n        disabled: mergedDisabled.value\n      });\n      delete rcUploadProps.remove;\n      // Remove id to avoid open by label when trigger is hidden\n      // !children: https://github.com/ant-design/ant-design/issues/14298\n      // disabled: https://github.com/ant-design/ant-design/issues/16478\n      //           https://github.com/ant-design/ant-design/issues/24197\n      if (!slots.default || mergedDisabled.value) {\n        delete rcUploadProps.id;\n      }\n      const rtlCls = {\n        [`${prefixCls.value}-rtl`]: direction.value === 'rtl'\n      };\n      if (type === 'drag') {\n        const dragCls = classNames(prefixCls.value, {\n          [`${prefixCls.value}-drag`]: true,\n          [`${prefixCls.value}-drag-uploading`]: mergedFileList.value.some(file => file.status === 'uploading'),\n          [`${prefixCls.value}-drag-hover`]: dragState.value === 'dragover',\n          [`${prefixCls.value}-disabled`]: mergedDisabled.value,\n          [`${prefixCls.value}-rtl`]: direction.value === 'rtl'\n        }, attrs.class, hashId.value);\n        return wrapSSR(_createVNode(\"span\", _objectSpread(_objectSpread({}, attrs), {}, {\n          \"class\": classNames(`${prefixCls.value}-wrapper`, rtlCls, className, hashId.value)\n        }), [_createVNode(\"div\", {\n          \"class\": dragCls,\n          \"onDrop\": onFileDrop,\n          \"onDragover\": onFileDrop,\n          \"onDragleave\": onFileDrop,\n          \"style\": attrs.style\n        }, [_createVNode(VcUpload, _objectSpread(_objectSpread({}, rcUploadProps), {}, {\n          \"ref\": upload,\n          \"class\": `${prefixCls.value}-btn`\n        }), _objectSpread({\n          default: () => [_createVNode(\"div\", {\n            \"class\": `${prefixCls.value}-drag-container`\n          }, [(_b = slots.default) === null || _b === void 0 ? void 0 : _b.call(slots)])]\n        }, slots))]), renderUploadList()]));\n      }\n      const uploadButtonCls = classNames(prefixCls.value, {\n        [`${prefixCls.value}-select`]: true,\n        [`${prefixCls.value}-select-${listType}`]: true,\n        [`${prefixCls.value}-disabled`]: mergedDisabled.value,\n        [`${prefixCls.value}-rtl`]: direction.value === 'rtl'\n      });\n      const children = flattenChildren((_c = slots.default) === null || _c === void 0 ? void 0 : _c.call(slots));\n      const renderUploadButton = uploadButtonStyle => _createVNode(\"div\", {\n        \"class\": uploadButtonCls,\n        \"style\": uploadButtonStyle\n      }, [_createVNode(VcUpload, _objectSpread(_objectSpread({}, rcUploadProps), {}, {\n        \"ref\": upload\n      }), slots)]);\n      if (listType === 'picture-card') {\n        return wrapSSR(_createVNode(\"span\", _objectSpread(_objectSpread({}, attrs), {}, {\n          \"class\": classNames(`${prefixCls.value}-wrapper`, `${prefixCls.value}-picture-card-wrapper`, rtlCls, attrs.class, hashId.value)\n        }), [renderUploadList(renderUploadButton, !!(children && children.length))]));\n      }\n      return wrapSSR(_createVNode(\"span\", _objectSpread(_objectSpread({}, attrs), {}, {\n        \"class\": classNames(`${prefixCls.value}-wrapper`, rtlCls, attrs.class, hashId.value)\n      }), [renderUploadButton(children && children.length ? undefined : {\n        display: 'none'\n      }), renderUploadList()]));\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_extends","createVNode","_createVNode","resolveDirective","_resolveDirective","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","VcUpload","UploadList","uploadProps","file2Obj","getFileItem","removeFileItem","updateFileList","useLocaleReceiver","defaultLocale","computed","defineComponent","onMounted","ref","toRef","flattenChildren","initDefaultProps","useMergedState","devWarning","useConfigInject","classNames","useInjectFormItemContext","useStyle","useInjectDisabled","LIST_IGNORE","Date","now","compatConfig","MODE","name","inheritAttrs","props","type","multiple","action","data","accept","showUploadList","listType","disabled","supportServerRender","setup","_ref","slots","attrs","expose","formItemContext","prefixCls","direction","wrapSSR","hashId","disabledContext","mergedDisabled","_a","mergedFileList","setMergedFileList","defaultFileList","postState","list","timestamp","map","file","index","uid","isFrozen","dragState","upload","fileList","undefined","transformFile","remove","onInternalChange","changedFileList","event","_b","cloneList","maxCount","slice","changeInfo","onChange","onFieldChange","mergedBeforeUpload","fileListArgs","beforeUpload","parsedFile","defineProperty","configurable","onBatchStart","batchFileInfoList","filteredFileInfoList","filter","info","objectFileList","newFileList","forEach","fileObj","triggerFileObj","originFileObj","clone","File","Blob","lastModifiedDate","lastModified","getTime","status","onSuccess","response","xhr","JSON","parse","targetItem","percent","nextFileList","onProgress","onError","error","handleRemove","currentFile","mergedRemove","onRemove","ret","removedFileList","item","matchKey","abort","onFileDrop","onDrop","locale","Upload","renderUploadList","button","buttonVisible","removeIcon","previewIcon","downloadIcon","previewFile","onPreview","onDownload","isImageUrl","progress","itemRender","iconRender","showDownloadIcon","showPreviewIcon","showRemoveIcon","_c","class","className","style","styleName","transAttrs","rcUploadProps","id","default","rtlCls","dragCls","some","uploadButtonCls","children","renderUploadButton","uploadButtonStyle","display"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/upload/Upload.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport VcUpload from '../vc-upload';\nimport UploadList from './UploadList';\nimport { uploadProps } from './interface';\nimport { file2Obj, getFileItem, removeFileItem, updateFileList } from './utils';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport { computed, defineComponent, onMounted, ref, toRef } from 'vue';\nimport { flattenChildren, initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport devWarning from '../vc-util/devWarning';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport classNames from '../_util/classNames';\nimport { useInjectFormItemContext } from '../form';\n// CSSINJS\nimport useStyle from './style';\nimport { useInjectDisabled } from '../config-provider/DisabledContext';\nexport const LIST_IGNORE = `__LIST_IGNORE_${Date.now()}__`;\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'AUpload',\n  inheritAttrs: false,\n  props: initDefaultProps(uploadProps(), {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    showUploadList: true,\n    listType: 'text',\n    disabled: false,\n    supportServerRender: true\n  }),\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs,\n      expose\n    } = _ref;\n    const formItemContext = useInjectFormItemContext();\n    const {\n      prefixCls,\n      direction,\n      disabled\n    } = useConfigInject('upload', props);\n    // style\n    const [wrapSSR, hashId] = useStyle(prefixCls);\n    const disabledContext = useInjectDisabled();\n    const mergedDisabled = computed(() => {\n      var _a;\n      return (_a = disabledContext.value) !== null && _a !== void 0 ? _a : disabled.value;\n    });\n    const [mergedFileList, setMergedFileList] = useMergedState(props.defaultFileList || [], {\n      value: toRef(props, 'fileList'),\n      postState: list => {\n        const timestamp = Date.now();\n        return (list !== null && list !== void 0 ? list : []).map((file, index) => {\n          if (!file.uid && !Object.isFrozen(file)) {\n            file.uid = `__AUTO__${timestamp}_${index}__`;\n          }\n          return file;\n        });\n      }\n    });\n    const dragState = ref('drop');\n    const upload = ref(null);\n    onMounted(() => {\n      devWarning(props.fileList !== undefined || attrs.value === undefined, 'Upload', '`value` is not a valid prop, do you mean `fileList`?');\n      devWarning(props.transformFile === undefined, 'Upload', '`transformFile` is deprecated. Please use `beforeUpload` directly.');\n      devWarning(props.remove === undefined, 'Upload', '`remove` props is deprecated. Please use `remove` event.');\n    });\n    const onInternalChange = (file, changedFileList, event) => {\n      var _a, _b;\n      let cloneList = [...changedFileList];\n      // Cut to match count\n      if (props.maxCount === 1) {\n        cloneList = cloneList.slice(-1);\n      } else if (props.maxCount) {\n        cloneList = cloneList.slice(0, props.maxCount);\n      }\n      setMergedFileList(cloneList);\n      const changeInfo = {\n        file: file,\n        fileList: cloneList\n      };\n      if (event) {\n        changeInfo.event = event;\n      }\n      (_a = props['onUpdate:fileList']) === null || _a === void 0 ? void 0 : _a.call(props, changeInfo.fileList);\n      (_b = props.onChange) === null || _b === void 0 ? void 0 : _b.call(props, changeInfo);\n      formItemContext.onFieldChange();\n    };\n    const mergedBeforeUpload = (file, fileListArgs) => __awaiter(this, void 0, void 0, function* () {\n      const {\n        beforeUpload,\n        transformFile\n      } = props;\n      let parsedFile = file;\n      if (beforeUpload) {\n        const result = yield beforeUpload(file, fileListArgs);\n        if (result === false) {\n          return false;\n        }\n        // Hack for LIST_IGNORE, we add additional info to remove from the list\n        delete file[LIST_IGNORE];\n        if (result === LIST_IGNORE) {\n          Object.defineProperty(file, LIST_IGNORE, {\n            value: true,\n            configurable: true\n          });\n          return false;\n        }\n        if (typeof result === 'object' && result) {\n          parsedFile = result;\n        }\n      }\n      if (transformFile) {\n        parsedFile = yield transformFile(parsedFile);\n      }\n      return parsedFile;\n    });\n    const onBatchStart = batchFileInfoList => {\n      // Skip file which marked as `LIST_IGNORE`, these file will not add to file list\n      const filteredFileInfoList = batchFileInfoList.filter(info => !info.file[LIST_IGNORE]);\n      // Nothing to do since no file need upload\n      if (!filteredFileInfoList.length) {\n        return;\n      }\n      const objectFileList = filteredFileInfoList.map(info => file2Obj(info.file));\n      // Concat new files with prev files\n      let newFileList = [...mergedFileList.value];\n      objectFileList.forEach(fileObj => {\n        // Replace file if exist\n        newFileList = updateFileList(fileObj, newFileList);\n      });\n      objectFileList.forEach((fileObj, index) => {\n        // Repeat trigger `onChange` event for compatible\n        let triggerFileObj = fileObj;\n        if (!filteredFileInfoList[index].parsedFile) {\n          // `beforeUpload` return false\n          const {\n            originFileObj\n          } = fileObj;\n          let clone;\n          try {\n            clone = new File([originFileObj], originFileObj.name, {\n              type: originFileObj.type\n            });\n          } catch (e) {\n            clone = new Blob([originFileObj], {\n              type: originFileObj.type\n            });\n            clone.name = originFileObj.name;\n            clone.lastModifiedDate = new Date();\n            clone.lastModified = new Date().getTime();\n          }\n          clone.uid = fileObj.uid;\n          triggerFileObj = clone;\n        } else {\n          // Inject `uploading` status\n          fileObj.status = 'uploading';\n        }\n        onInternalChange(triggerFileObj, newFileList);\n      });\n    };\n    const onSuccess = (response, file, xhr) => {\n      try {\n        if (typeof response === 'string') {\n          response = JSON.parse(response);\n        }\n      } catch (e) {\n        /* do nothing */\n      }\n      // removed\n      if (!getFileItem(file, mergedFileList.value)) {\n        return;\n      }\n      const targetItem = file2Obj(file);\n      targetItem.status = 'done';\n      targetItem.percent = 100;\n      targetItem.response = response;\n      targetItem.xhr = xhr;\n      const nextFileList = updateFileList(targetItem, mergedFileList.value);\n      onInternalChange(targetItem, nextFileList);\n    };\n    const onProgress = (e, file) => {\n      // removed\n      if (!getFileItem(file, mergedFileList.value)) {\n        return;\n      }\n      const targetItem = file2Obj(file);\n      targetItem.status = 'uploading';\n      targetItem.percent = e.percent;\n      const nextFileList = updateFileList(targetItem, mergedFileList.value);\n      onInternalChange(targetItem, nextFileList, e);\n    };\n    const onError = (error, response, file) => {\n      // removed\n      if (!getFileItem(file, mergedFileList.value)) {\n        return;\n      }\n      const targetItem = file2Obj(file);\n      targetItem.error = error;\n      targetItem.response = response;\n      targetItem.status = 'error';\n      const nextFileList = updateFileList(targetItem, mergedFileList.value);\n      onInternalChange(targetItem, nextFileList);\n    };\n    const handleRemove = file => {\n      let currentFile;\n      const mergedRemove = props.onRemove || props.remove;\n      Promise.resolve(typeof mergedRemove === 'function' ? mergedRemove(file) : mergedRemove).then(ret => {\n        var _a, _b;\n        // Prevent removing file\n        if (ret === false) {\n          return;\n        }\n        const removedFileList = removeFileItem(file, mergedFileList.value);\n        if (removedFileList) {\n          currentFile = _extends(_extends({}, file), {\n            status: 'removed'\n          });\n          (_a = mergedFileList.value) === null || _a === void 0 ? void 0 : _a.forEach(item => {\n            const matchKey = currentFile.uid !== undefined ? 'uid' : 'name';\n            if (item[matchKey] === currentFile[matchKey] && !Object.isFrozen(item)) {\n              item.status = 'removed';\n            }\n          });\n          (_b = upload.value) === null || _b === void 0 ? void 0 : _b.abort(currentFile);\n          onInternalChange(currentFile, removedFileList);\n        }\n      });\n    };\n    const onFileDrop = e => {\n      var _a;\n      dragState.value = e.type;\n      if (e.type === 'drop') {\n        (_a = props.onDrop) === null || _a === void 0 ? void 0 : _a.call(props, e);\n      }\n    };\n    expose({\n      onBatchStart,\n      onSuccess,\n      onProgress,\n      onError,\n      fileList: mergedFileList,\n      upload\n    });\n    const [locale] = useLocaleReceiver('Upload', defaultLocale.Upload, computed(() => props.locale));\n    const renderUploadList = (button, buttonVisible) => {\n      const {\n        removeIcon,\n        previewIcon,\n        downloadIcon,\n        previewFile,\n        onPreview,\n        onDownload,\n        isImageUrl,\n        progress,\n        itemRender,\n        iconRender,\n        showUploadList\n      } = props;\n      const {\n        showDownloadIcon,\n        showPreviewIcon,\n        showRemoveIcon\n      } = typeof showUploadList === 'boolean' ? {} : showUploadList;\n      return showUploadList ? _createVNode(UploadList, {\n        \"prefixCls\": prefixCls.value,\n        \"listType\": props.listType,\n        \"items\": mergedFileList.value,\n        \"previewFile\": previewFile,\n        \"onPreview\": onPreview,\n        \"onDownload\": onDownload,\n        \"onRemove\": handleRemove,\n        \"showRemoveIcon\": !mergedDisabled.value && showRemoveIcon,\n        \"showPreviewIcon\": showPreviewIcon,\n        \"showDownloadIcon\": showDownloadIcon,\n        \"removeIcon\": removeIcon,\n        \"previewIcon\": previewIcon,\n        \"downloadIcon\": downloadIcon,\n        \"iconRender\": iconRender,\n        \"locale\": locale.value,\n        \"isImageUrl\": isImageUrl,\n        \"progress\": progress,\n        \"itemRender\": itemRender,\n        \"appendActionVisible\": buttonVisible,\n        \"appendAction\": button\n      }, _extends({}, slots)) : button === null || button === void 0 ? void 0 : button();\n    };\n    return () => {\n      var _a, _b, _c;\n      const {\n        listType,\n        type\n      } = props;\n      const {\n          class: className,\n          style: styleName\n        } = attrs,\n        transAttrs = __rest(attrs, [\"class\", \"style\"]);\n      const rcUploadProps = _extends(_extends(_extends({\n        onBatchStart,\n        onError,\n        onProgress,\n        onSuccess\n      }, transAttrs), props), {\n        id: (_a = props.id) !== null && _a !== void 0 ? _a : formItemContext.id.value,\n        prefixCls: prefixCls.value,\n        beforeUpload: mergedBeforeUpload,\n        onChange: undefined,\n        disabled: mergedDisabled.value\n      });\n      delete rcUploadProps.remove;\n      // Remove id to avoid open by label when trigger is hidden\n      // !children: https://github.com/ant-design/ant-design/issues/14298\n      // disabled: https://github.com/ant-design/ant-design/issues/16478\n      //           https://github.com/ant-design/ant-design/issues/24197\n      if (!slots.default || mergedDisabled.value) {\n        delete rcUploadProps.id;\n      }\n      const rtlCls = {\n        [`${prefixCls.value}-rtl`]: direction.value === 'rtl'\n      };\n      if (type === 'drag') {\n        const dragCls = classNames(prefixCls.value, {\n          [`${prefixCls.value}-drag`]: true,\n          [`${prefixCls.value}-drag-uploading`]: mergedFileList.value.some(file => file.status === 'uploading'),\n          [`${prefixCls.value}-drag-hover`]: dragState.value === 'dragover',\n          [`${prefixCls.value}-disabled`]: mergedDisabled.value,\n          [`${prefixCls.value}-rtl`]: direction.value === 'rtl'\n        }, attrs.class, hashId.value);\n        return wrapSSR(_createVNode(\"span\", _objectSpread(_objectSpread({}, attrs), {}, {\n          \"class\": classNames(`${prefixCls.value}-wrapper`, rtlCls, className, hashId.value)\n        }), [_createVNode(\"div\", {\n          \"class\": dragCls,\n          \"onDrop\": onFileDrop,\n          \"onDragover\": onFileDrop,\n          \"onDragleave\": onFileDrop,\n          \"style\": attrs.style\n        }, [_createVNode(VcUpload, _objectSpread(_objectSpread({}, rcUploadProps), {}, {\n          \"ref\": upload,\n          \"class\": `${prefixCls.value}-btn`\n        }), _objectSpread({\n          default: () => [_createVNode(\"div\", {\n            \"class\": `${prefixCls.value}-drag-container`\n          }, [(_b = slots.default) === null || _b === void 0 ? void 0 : _b.call(slots)])]\n        }, slots))]), renderUploadList()]));\n      }\n      const uploadButtonCls = classNames(prefixCls.value, {\n        [`${prefixCls.value}-select`]: true,\n        [`${prefixCls.value}-select-${listType}`]: true,\n        [`${prefixCls.value}-disabled`]: mergedDisabled.value,\n        [`${prefixCls.value}-rtl`]: direction.value === 'rtl'\n      });\n      const children = flattenChildren((_c = slots.default) === null || _c === void 0 ? void 0 : _c.call(slots));\n      const renderUploadButton = uploadButtonStyle => _createVNode(\"div\", {\n        \"class\": uploadButtonCls,\n        \"style\": uploadButtonStyle\n      }, [_createVNode(VcUpload, _objectSpread(_objectSpread({}, rcUploadProps), {}, {\n        \"ref\": upload\n      }), slots)]);\n      if (listType === 'picture-card') {\n        return wrapSSR(_createVNode(\"span\", _objectSpread(_objectSpread({}, attrs), {}, {\n          \"class\": classNames(`${prefixCls.value}-wrapper`, `${prefixCls.value}-picture-card-wrapper`, rtlCls, attrs.class, hashId.value)\n        }), [renderUploadList(renderUploadButton, !!(children && children.length))]));\n      }\n      return wrapSSR(_createVNode(\"span\", _objectSpread(_objectSpread({}, attrs), {}, {\n        \"class\": classNames(`${prefixCls.value}-wrapper`, rtlCls, attrs.class, hashId.value)\n      }), [renderUploadButton(children && children.length ? undefined : {\n        display: 'none'\n      }), renderUploadList()]));\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}