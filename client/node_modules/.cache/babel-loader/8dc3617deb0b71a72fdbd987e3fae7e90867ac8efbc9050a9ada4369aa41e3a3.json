{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AddBackUp from \"@/components/backup/AddBackUp\";\nimport { getDatabaseList } from \"@/api/request\";\nexport default {\n  name: \"Backup\",\n  components: {\n    AddBackUp\n  },\n  data() {\n    return {\n      openAddScriptModel: false,\n      dbList: [],\n      getDatabaseListFlag: false,\n      columns: [{\n        title: '名称',\n        width: 200,\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '路径',\n        width: 350,\n        dataIndex: 'path',\n        key: 'path'\n      }, {\n        title: '数据库',\n        width: 200,\n        dataIndex: 'db_name',\n        key: 'db_name',\n        filters: []\n      }, {\n        title: '创建时间',\n        width: 150,\n        dataIndex: 'created_at',\n        key: 'created_at',\n        sorter: (a, b) => new Date(a.created_at) - new Date(b.created_at)\n      }, {\n        title: 'Action',\n        dataIndex: '',\n        key: 'x',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      backupList: [],\n      paginationConfig: {\n        defaultCurrent: 1,\n        defaultPageSize: 5\n      }\n    };\n  },\n  created() {\n    this.getBackupList();\n  },\n  methods: {\n    async backUp() {\n      await this.getDatabaseList();\n      if (this.getDatabaseListFlag) {\n        this.openAddScriptModel = true;\n      } else {\n        this.$message.error(\"获取数据库列表失败\");\n      }\n    },\n    onSearch() {},\n    getBackupList() {\n      this.$request.getDatabaseBackup().then(res => {\n        if (res.status === 200) {\n          this.backupList = res.data.data;\n          const dbFilters = [];\n          this.backupList.forEach(item => {\n            const existingTag = dbFilters.find(filter => filter.text === item.db_name);\n            if (!existingTag) {\n              dbFilters.push({\n                text: item.db_name,\n                value: item.db_name\n              });\n            }\n          });\n          this.columns.forEach(item => {\n            if (item.key === 'db_name') {\n              item.filters = dbFilters;\n            }\n          });\n        }\n      });\n    },\n    getModelStatus(status) {\n      this.openAddScriptModel = status;\n    },\n    async getDatabaseList() {\n      await this.$request.getDatabaseList().then(res => {\n        if (res.status === 200) {\n          this.dbList = res.data.data;\n          this.getDatabaseListFlag = true;\n        } else {\n          this.getDatabaseListFlag = false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["AddBackUp","getDatabaseList","name","components","data","openAddScriptModel","dbList","getDatabaseListFlag","columns","title","width","dataIndex","key","filters","sorter","a","b","Date","created_at","scopedSlots","customRender","backupList","paginationConfig","defaultCurrent","defaultPageSize","created","getBackupList","methods","backUp","$message","error","onSearch","$request","getDatabaseBackup","then","res","status","dbFilters","forEach","item","existingTag","find","filter","text","db_name","push","value","getModelStatus"],"sources":["src/views/Backup.vue"],"sourcesContent":["<template>\n  <div>\n    <AddBackUp\n        @updateModelStatus=\"getModelStatus\"\n        :open-flag=\"openAddScriptModel\"\n        :db-list=\"dbList\"\n    >\n    </AddBackUp>\n    <div class=\"my-b-button\">\n      <a-input-search placeholder=\"输入备份文件或描述搜索\" style=\"width: 200px\" @search=\"onSearch\"/>\n      <a-button type=\"primary\" @click=\"backUp\">\n        一键备份\n      </a-button>\n    </div>\n\n    <div class=\"my-s-table\">\n      <a-table\n          :columns=\"columns\"\n          :data-source=\"backupList\"\n          style=\"height: 40vh\"\n          :pagination=\"paginationConfig\"\n          :scrollToFirstRowOnChange=\"true\"\n      >\n\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <a style=\"color: #2c982c\">导入</a>\n          <a-divider type=\"vertical\" style=\"background-color: #a8a7a7!important;\"/>\n          <a style=\"color: #f17878\">删除</a>\n        </span>\n        <p slot=\"expandedRowRender\" slot-scope=\"record\" style=\"margin: 0\">\n          {{ record.description ? record.description : \"无描述\" }}\n        </p>\n      </a-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AddBackUp from \"@/components/backup/AddBackUp\";\nimport {getDatabaseList} from \"@/api/request\";\n\nexport default {\n  name: \"Backup\",\n  components: {AddBackUp},\n  data() {\n    return {\n      openAddScriptModel: false,\n      dbList: [],\n      getDatabaseListFlag : false,\n      columns: [\n        {title: '名称',width: 200, dataIndex: 'name', key: 'name'},\n        {title: '路径', width: 350,dataIndex: 'path', key: 'path'},\n        {title: '数据库',width: 200, dataIndex: 'db_name',\n          key: 'db_name',\n          filters: [],\n        },\n        {title: '创建时间',width: 150, dataIndex: 'created_at',\n          key: 'created_at',\n          sorter: (a, b) => new Date(a.created_at) - new Date(b.created_at),\n        },\n        {title: 'Action', dataIndex: '', key: 'x', scopedSlots: {customRender: 'action'}},\n      ],\n      backupList:[],\n      paginationConfig:{\n        defaultCurrent:1,\n        defaultPageSize:5,\n      }\n    }\n  },\n  created() {\n    this.getBackupList()\n  },\n  methods: {\n     async backUp() {\n       await this.getDatabaseList();\n\n       if (this.getDatabaseListFlag) {\n         this.openAddScriptModel = true\n       } else {\n         this.$message.error(\"获取数据库列表失败\")\n       }\n     },\n    onSearch() {\n\n    },\n    getBackupList(){\n      this.$request.getDatabaseBackup().then(res=>{\n        if (res.status === 200){\n          this.backupList = res.data.data\n\n          const dbFilters = [];\n\n          this.backupList.forEach(item => {\n\n              const existingTag = dbFilters.find(filter => filter.text === item.db_name);\n              if (!existingTag) {\n                dbFilters.push({text: item.db_name, value: item.db_name});\n              }\n          })\n\n          this.columns.forEach(item => {\n            if (item.key === 'db_name') {\n              item.filters = dbFilters\n            }\n          })\n        }\n      })\n    },\n    getModelStatus(status) {\n      this.openAddScriptModel = status\n    },\n\n    async getDatabaseList() {\n      await this.$request.getDatabaseList().then(res => {\n        if (res.status === 200) {\n          this.dbList = res.data.data\n          this.getDatabaseListFlag = true\n        } else {\n          this.getDatabaseListFlag = false\n        }\n      })\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n.my-b-button {\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n}\n.my-s-table {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AAsCA,OAAAA,SAAA;AACA,SAAAC,eAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAH;EAAA;EACAI,KAAA;IACA;MACAC,kBAAA;MACAC,MAAA;MACAC,mBAAA;MACAC,OAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QAAAH,KAAA;QAAAC,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QAAAH,KAAA;QAAAC,KAAA;QAAAC,SAAA;QACAC,GAAA;QACAC,OAAA;MACA,GACA;QAAAJ,KAAA;QAAAC,KAAA;QAAAC,SAAA;QACAC,GAAA;QACAE,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,SAAAC,IAAA,CAAAF,CAAA,CAAAG,UAAA,QAAAD,IAAA,CAAAD,CAAA,CAAAE,UAAA;MACA,GACA;QAAAT,KAAA;QAAAE,SAAA;QAAAC,GAAA;QAAAO,WAAA;UAAAC,YAAA;QAAA;MAAA,EACA;MACAC,UAAA;MACAC,gBAAA;QACAC,cAAA;QACAC,eAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA,MAAAC,OAAA;MACA,WAAA3B,eAAA;MAEA,SAAAM,mBAAA;QACA,KAAAF,kBAAA;MACA;QACA,KAAAwB,QAAA,CAAAC,KAAA;MACA;IACA;IACAC,SAAA,GAEA;IACAL,cAAA;MACA,KAAAM,QAAA,CAAAC,iBAAA,GAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,KAAAf,UAAA,GAAAc,GAAA,CAAA/B,IAAA,CAAAA,IAAA;UAEA,MAAAiC,SAAA;UAEA,KAAAhB,UAAA,CAAAiB,OAAA,CAAAC,IAAA;YAEA,MAAAC,WAAA,GAAAH,SAAA,CAAAI,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,KAAAJ,IAAA,CAAAK,OAAA;YACA,KAAAJ,WAAA;cACAH,SAAA,CAAAQ,IAAA;gBAAAF,IAAA,EAAAJ,IAAA,CAAAK,OAAA;gBAAAE,KAAA,EAAAP,IAAA,CAAAK;cAAA;YACA;UACA;UAEA,KAAApC,OAAA,CAAA8B,OAAA,CAAAC,IAAA;YACA,IAAAA,IAAA,CAAA3B,GAAA;cACA2B,IAAA,CAAA1B,OAAA,GAAAwB,SAAA;YACA;UACA;QACA;MACA;IACA;IACAU,eAAAX,MAAA;MACA,KAAA/B,kBAAA,GAAA+B,MAAA;IACA;IAEA,MAAAnC,gBAAA;MACA,WAAA+B,QAAA,CAAA/B,eAAA,GAAAiC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,KAAA9B,MAAA,GAAA6B,GAAA,CAAA/B,IAAA,CAAAA,IAAA;UACA,KAAAG,mBAAA;QACA;UACA,KAAAA,mBAAA;QACA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}