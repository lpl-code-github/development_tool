{"ast":null,"code":"import warning from '../_util/warning';\n\n// These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': 'true',\n  focusable: 'false'\n};\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n  var result = null;\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n  return result;\n}\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\nexport function withThemeSuffix(type, theme) {\n  var result = type;\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    warning(false, 'Icon', 'This icon \\'' + type + '\\' has unknown theme \\'' + theme + '\\'');\n  }\n  return result;\n}\n\n// For alias or compatibility\nexport function alias(type) {\n  var newType = type;\n  switch (type) {\n    case 'cross':\n      newType = 'close';\n      break;\n    // https://github.com/ant-design/ant-design/issues/13007\n    case 'interation':\n      newType = 'interaction';\n      break;\n    // https://github.com/ant-design/ant-design/issues/16810\n    case 'canlendar':\n      newType = 'calendar';\n      break;\n    // https://github.com/ant-design/ant-design/issues/17448\n    case 'colum-height':\n      newType = 'column-height';\n      break;\n    default:\n  }\n  warning(newType === type, 'Icon', 'Icon \\'' + type + '\\' was a typo and is now deprecated, please use \\'' + newType + '\\' instead.');\n  return newType;\n}","map":{"version":3,"names":["warning","svgBaseProps","width","height","fill","focusable","fillTester","outlineTester","twoToneTester","getThemeFromTypeName","type","result","test","removeTypeTheme","replace","withThemeSuffix","theme","alias","newType"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/icon/utils.js"],"sourcesContent":["import warning from '../_util/warning';\n\n// These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': 'true',\n  focusable: 'false'\n};\n\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\n\nexport function getThemeFromTypeName(type) {\n  var result = null;\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n  return result;\n}\n\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\n\nexport function withThemeSuffix(type, theme) {\n  var result = type;\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    warning(false, 'Icon', 'This icon \\'' + type + '\\' has unknown theme \\'' + theme + '\\'');\n  }\n  return result;\n}\n\n// For alias or compatibility\nexport function alias(type) {\n  var newType = type;\n  switch (type) {\n    case 'cross':\n      newType = 'close';\n      break;\n    // https://github.com/ant-design/ant-design/issues/13007\n    case 'interation':\n      newType = 'interaction';\n      break;\n    // https://github.com/ant-design/ant-design/issues/16810\n    case 'canlendar':\n      newType = 'calendar';\n      break;\n    // https://github.com/ant-design/ant-design/issues/17448\n    case 'colum-height':\n      newType = 'column-height';\n      break;\n    default:\n  }\n  warning(newType === type, 'Icon', 'Icon \\'' + type + '\\' was a typo and is now deprecated, please use \\'' + newType + '\\' instead.');\n  return newType;\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,kBAAkB;;AAEtC;AACA;AACA,OAAO,IAAIC,YAAY,GAAG;EACxBC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,cAAc;EACpB,aAAa,EAAE,MAAM;EACrBC,SAAS,EAAE;AACb,CAAC;AAED,IAAIC,UAAU,GAAG,QAAQ;AACzB,IAAIC,aAAa,GAAG,KAAK;AACzB,IAAIC,aAAa,GAAG,WAAW;AAE/B,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EACzC,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAIL,UAAU,CAACM,IAAI,CAACF,IAAI,CAAC,EAAE;IACzBC,MAAM,GAAG,QAAQ;EACnB,CAAC,MAAM,IAAIJ,aAAa,CAACK,IAAI,CAACF,IAAI,CAAC,EAAE;IACnCC,MAAM,GAAG,UAAU;EACrB,CAAC,MAAM,IAAIH,aAAa,CAACI,IAAI,CAACF,IAAI,CAAC,EAAE;IACnCC,MAAM,GAAG,SAAS;EACpB;EACA,OAAOA,MAAM;AACf;AAEA,OAAO,SAASE,eAAeA,CAACH,IAAI,EAAE;EACpC,OAAOA,IAAI,CAACI,OAAO,CAACR,UAAU,EAAE,EAAE,CAAC,CAACQ,OAAO,CAACP,aAAa,EAAE,EAAE,CAAC,CAACO,OAAO,CAACN,aAAa,EAAE,EAAE,CAAC;AAC3F;AAEA,OAAO,SAASO,eAAeA,CAACL,IAAI,EAAEM,KAAK,EAAE;EAC3C,IAAIL,MAAM,GAAGD,IAAI;EACjB,IAAIM,KAAK,KAAK,QAAQ,EAAE;IACtBL,MAAM,IAAI,OAAO;EACnB,CAAC,MAAM,IAAIK,KAAK,KAAK,UAAU,EAAE;IAC/BL,MAAM,IAAI,IAAI;EAChB,CAAC,MAAM,IAAIK,KAAK,KAAK,SAAS,EAAE;IAC9BL,MAAM,IAAI,UAAU;EACtB,CAAC,MAAM;IACLX,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,cAAc,GAAGU,IAAI,GAAG,yBAAyB,GAAGM,KAAK,GAAG,IAAI,CAAC;EAC1F;EACA,OAAOL,MAAM;AACf;;AAEA;AACA,OAAO,SAASM,KAAKA,CAACP,IAAI,EAAE;EAC1B,IAAIQ,OAAO,GAAGR,IAAI;EAClB,QAAQA,IAAI;IACV,KAAK,OAAO;MACVQ,OAAO,GAAG,OAAO;MACjB;IACF;IACA,KAAK,YAAY;MACfA,OAAO,GAAG,aAAa;MACvB;IACF;IACA,KAAK,WAAW;MACdA,OAAO,GAAG,UAAU;MACpB;IACF;IACA,KAAK,cAAc;MACjBA,OAAO,GAAG,eAAe;MACzB;IACF;EACF;EACAlB,OAAO,CAACkB,OAAO,KAAKR,IAAI,EAAE,MAAM,EAAE,SAAS,GAAGA,IAAI,GAAG,oDAAoD,GAAGQ,OAAO,GAAG,aAAa,CAAC;EACpI,OAAOA,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}