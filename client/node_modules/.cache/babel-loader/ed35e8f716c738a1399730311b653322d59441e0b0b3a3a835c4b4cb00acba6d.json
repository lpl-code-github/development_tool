{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { computed } from 'vue';\nexport const SEARCH_MARK = '__rc_cascader_search_mark__';\nconst defaultFilter = (search, options, _ref) => {\n  let {\n    label\n  } = _ref;\n  return options.some(opt => String(opt[label]).toLowerCase().includes(search.toLowerCase()));\n};\nconst defaultRender = _ref2 => {\n  let {\n    path,\n    fieldNames\n  } = _ref2;\n  return path.map(opt => opt[fieldNames.label]).join(' / ');\n};\nexport default ((search, options, fieldNames, prefixCls, config, changeOnSelect) => {\n  return computed(() => {\n    const {\n      filter = defaultFilter,\n      render = defaultRender,\n      limit = 50,\n      sort\n    } = config.value;\n    const filteredOptions = [];\n    if (!search.value) {\n      return [];\n    }\n    function dig(list, pathOptions) {\n      list.forEach(option => {\n        // Perf saving when `sort` is disabled and `limit` is provided\n        if (!sort && limit > 0 && filteredOptions.length >= limit) {\n          return;\n        }\n        const connectedPathOptions = [...pathOptions, option];\n        const children = option[fieldNames.value.children];\n        // If current option is filterable\n        if (\n        // If is leaf option\n        !children || children.length === 0 ||\n        // If is changeOnSelect\n        changeOnSelect.value) {\n          if (filter(search.value, connectedPathOptions, {\n            label: fieldNames.value.label\n          })) {\n            filteredOptions.push(_extends(_extends({}, option), {\n              [fieldNames.value.label]: render({\n                inputValue: search.value,\n                path: connectedPathOptions,\n                prefixCls: prefixCls.value,\n                fieldNames: fieldNames.value\n              }),\n              [SEARCH_MARK]: connectedPathOptions\n            }));\n          }\n        }\n        if (children) {\n          dig(option[fieldNames.value.children], connectedPathOptions);\n        }\n      });\n    }\n    dig(options.value, []);\n    // Do sort\n    if (sort) {\n      filteredOptions.sort((a, b) => {\n        return sort(a[SEARCH_MARK], b[SEARCH_MARK], search.value, fieldNames.value);\n      });\n    }\n    return limit > 0 ? filteredOptions.slice(0, limit) : filteredOptions;\n  });\n});","map":{"version":3,"names":["_extends","computed","SEARCH_MARK","defaultFilter","search","options","_ref","label","some","opt","String","toLowerCase","includes","defaultRender","_ref2","path","fieldNames","map","join","prefixCls","config","changeOnSelect","filter","render","limit","sort","value","filteredOptions","dig","list","pathOptions","forEach","option","length","connectedPathOptions","children","push","inputValue","a","b","slice"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-cascader/hooks/useSearchOptions.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { computed } from 'vue';\nexport const SEARCH_MARK = '__rc_cascader_search_mark__';\nconst defaultFilter = (search, options, _ref) => {\n  let {\n    label\n  } = _ref;\n  return options.some(opt => String(opt[label]).toLowerCase().includes(search.toLowerCase()));\n};\nconst defaultRender = _ref2 => {\n  let {\n    path,\n    fieldNames\n  } = _ref2;\n  return path.map(opt => opt[fieldNames.label]).join(' / ');\n};\nexport default ((search, options, fieldNames, prefixCls, config, changeOnSelect) => {\n  return computed(() => {\n    const {\n      filter = defaultFilter,\n      render = defaultRender,\n      limit = 50,\n      sort\n    } = config.value;\n    const filteredOptions = [];\n    if (!search.value) {\n      return [];\n    }\n    function dig(list, pathOptions) {\n      list.forEach(option => {\n        // Perf saving when `sort` is disabled and `limit` is provided\n        if (!sort && limit > 0 && filteredOptions.length >= limit) {\n          return;\n        }\n        const connectedPathOptions = [...pathOptions, option];\n        const children = option[fieldNames.value.children];\n        // If current option is filterable\n        if (\n        // If is leaf option\n        !children || children.length === 0 ||\n        // If is changeOnSelect\n        changeOnSelect.value) {\n          if (filter(search.value, connectedPathOptions, {\n            label: fieldNames.value.label\n          })) {\n            filteredOptions.push(_extends(_extends({}, option), {\n              [fieldNames.value.label]: render({\n                inputValue: search.value,\n                path: connectedPathOptions,\n                prefixCls: prefixCls.value,\n                fieldNames: fieldNames.value\n              }),\n              [SEARCH_MARK]: connectedPathOptions\n            }));\n          }\n        }\n        if (children) {\n          dig(option[fieldNames.value.children], connectedPathOptions);\n        }\n      });\n    }\n    dig(options.value, []);\n    // Do sort\n    if (sort) {\n      filteredOptions.sort((a, b) => {\n        return sort(a[SEARCH_MARK], b[SEARCH_MARK], search.value, fieldNames.value);\n      });\n    }\n    return limit > 0 ? filteredOptions.slice(0, limit) : filteredOptions;\n  });\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}