{"ast":null,"code":"import zhCN from 'ant-design-vue/es/locale/zh_CN'; //引入antd中文包\nimport moment from 'moment';\n//引入moment\nmoment.locale('zh-cn'); //配置moment中文环境\nexport default {\n  name: \"Index\",\n  data() {\n    return {\n      locale: zhCN //传值给a-config-provider组件\n    };\n  },\n\n  created() {\n    this.getLogs(new moment());\n  },\n  methods: {\n    getListData(logData) {\n      logData.forEach();\n      console.log(value.format('YYYY-MM-DD'));\n      let listData;\n      switch (value.date()) {\n        case 15:\n          listData = [{\n            type: 'warning',\n            content: 'This is warning event.'\n          }, {\n            type: 'success',\n            content: 'This is usual event.'\n          }];\n          break;\n        case 16:\n          listData = [{\n            type: 'warning',\n            content: 'This is warning event'\n          }, {\n            type: 'success',\n            content: 'This is very long usual event。。....'\n          }, {\n            type: 'error',\n            content: 'This is error event 1.'\n          }, {\n            type: 'error',\n            content: 'This is error event 2.'\n          }, {\n            type: 'error',\n            content: 'This is error event 3.'\n          }, {\n            type: 'error',\n            content: 'This is error event 4.'\n          }];\n          break;\n        default:\n      }\n      return listData || [];\n    },\n    getPanelChange(moment) {\n      this.getLogs(moment);\n    },\n    getStartDate(moment) {\n      return moment.startOf('month').subtract(1, 'month').format('YYYY-MM-DD');\n    },\n    getEndDate(moment) {\n      return moment.endOf('month').add(2, 'month').format('YYYY-MM-DD');\n    },\n    getLogs(moment) {\n      var startDate = this.getStartDate(moment);\n      var endDate = this.getEndDate(moment);\n      var param = \"?start=\" + startDate + \"&target=\" + endDate;\n      this.$request.getLog(param).then(res => {\n        console.log(res);\n      });\n    },\n    onSelect(value) {\n      const date = moment(value);\n      const formattedDate = date.format('YYYY-MM-DD');\n      var param = \"?created_at=\" + formattedDate;\n      this.$request.getLog(param).then(res => {\n        console.log(res);\n      });\n    }\n  }\n};","map":{"version":3,"names":["zhCN","moment","locale","name","data","created","getLogs","methods","getListData","logData","forEach","console","log","value","format","listData","date","type","content","getPanelChange","getStartDate","startOf","subtract","getEndDate","endOf","add","startDate","endDate","param","$request","getLog","then","res","onSelect","formattedDate"],"sources":["src/Index.vue"],"sourcesContent":["<template>\n  <div class=\"index\">\n    <a-calendar :locale=\"locale\" @select=\"onSelect\" @panelChange=\"getPanelChange\">\n      <ul slot=\"dateCellRender\" slot-scope=\"value\" class=\"events\" >\n        <li v-for=\"item in getListData(value)\" :key=\"item.content\">\n          <a-badge :status=\"item.type\" :text=\"item.content\" />\n        </li>\n      </ul>\n    </a-calendar>\n  </div>\n</template>\n\n<script>\nimport zhCN from 'ant-design-vue/es/locale/zh_CN';//引入antd中文包\nimport moment from 'moment';\n//引入moment\nmoment.locale('zh-cn');//配置moment中文环境\nexport default {\n  name: \"Index\",\n  data(){\n    return{\n      locale:zhCN,//传值给a-config-provider组件\n    }\n  },\n  created() {\n    this.getLogs(new moment())\n  },\n  methods: {\n    getListData(logData) {\n      logData.forEach()\n      console.log(value.format('YYYY-MM-DD'))\n      let listData;\n      switch (value.date()) {\n        case 15:\n          listData = [\n            { type: 'warning', content: 'This is warning event.' },\n            { type: 'success', content: 'This is usual event.' },\n          ];\n          break;\n        case 16:\n          listData = [\n            { type: 'warning', content: 'This is warning event' },\n            { type: 'success', content: 'This is very long usual event。。....' },\n            { type: 'error', content: 'This is error event 1.' },\n            { type: 'error', content: 'This is error event 2.' },\n            { type: 'error', content: 'This is error event 3.' },\n            { type: 'error', content: 'This is error event 4.' },\n          ];\n          break;\n        default:\n      }\n      return listData || [];\n    },\n\n    getPanelChange(moment){\n      this.getLogs(moment)\n    },\n    getStartDate(moment){\n      return moment.startOf('month').subtract(1, 'month').format('YYYY-MM-DD');\n    },\n    getEndDate(moment){\n      return moment.endOf('month').add(2, 'month').format('YYYY-MM-DD');\n    },\n    getLogs(moment){\n      var startDate = this.getStartDate(moment);\n      var endDate = this.getEndDate(moment);\n      var param = \"?start=\"+startDate+\"&target=\"+endDate\n      this.$request.getLog(param).then(res=>{\n        console.log(res)\n      })\n    },\n    onSelect(value) {\n      const date = moment(value);\n      const formattedDate = date.format('YYYY-MM-DD');\n      var param = \"?created_at=\"+formattedDate\n      this.$request.getLog(param).then(res=>{\n        console.log(res);\n      })\n\n    },\n\n  },\n}\n</script>\n\n<style scoped>\n.events {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.events .ant-badge-status {\n  overflow: hidden;\n  white-space: nowrap;\n  width: 100%;\n  text-overflow: ellipsis;\n  font-size: 12px;\n}\n.notes-month {\n  text-align: center;\n  font-size: 28px;\n}\n.notes-month section {\n  font-size: 28px;\n}\n/deep/ .ant-radio-group {\n  display: none!important;\n}\n\n</style>\n"],"mappings":"AAaA,OAAAA,IAAA;AACA,OAAAC,MAAA;AACA;AACAA,MAAA,CAAAC,MAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAF,MAAA,EAAAF,IAAA;IACA;EACA;;EACAK,QAAA;IACA,KAAAC,OAAA,KAAAL,MAAA;EACA;EACAM,OAAA;IACAC,YAAAC,OAAA;MACAA,OAAA,CAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAC,MAAA;MACA,IAAAC,QAAA;MACA,QAAAF,KAAA,CAAAG,IAAA;QACA;UACAD,QAAA,IACA;YAAAE,IAAA;YAAAC,OAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,OAAA;UAAA,EACA;UACA;QACA;UACAH,QAAA,IACA;YAAAE,IAAA;YAAAC,OAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,OAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,OAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,OAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,OAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,OAAA;UAAA,EACA;UACA;QACA;MACA;MACA,OAAAH,QAAA;IACA;IAEAI,eAAAlB,MAAA;MACA,KAAAK,OAAA,CAAAL,MAAA;IACA;IACAmB,aAAAnB,MAAA;MACA,OAAAA,MAAA,CAAAoB,OAAA,UAAAC,QAAA,aAAAR,MAAA;IACA;IACAS,WAAAtB,MAAA;MACA,OAAAA,MAAA,CAAAuB,KAAA,UAAAC,GAAA,aAAAX,MAAA;IACA;IACAR,QAAAL,MAAA;MACA,IAAAyB,SAAA,QAAAN,YAAA,CAAAnB,MAAA;MACA,IAAA0B,OAAA,QAAAJ,UAAA,CAAAtB,MAAA;MACA,IAAA2B,KAAA,eAAAF,SAAA,gBAAAC,OAAA;MACA,KAAAE,QAAA,CAAAC,MAAA,CAAAF,KAAA,EAAAG,IAAA,CAAAC,GAAA;QACArB,OAAA,CAAAC,GAAA,CAAAoB,GAAA;MACA;IACA;IACAC,SAAApB,KAAA;MACA,MAAAG,IAAA,GAAAf,MAAA,CAAAY,KAAA;MACA,MAAAqB,aAAA,GAAAlB,IAAA,CAAAF,MAAA;MACA,IAAAc,KAAA,oBAAAM,aAAA;MACA,KAAAL,QAAA,CAAAC,MAAA,CAAAF,KAAA,EAAAG,IAAA,CAAAC,GAAA;QACArB,OAAA,CAAAC,GAAA,CAAAoB,GAAA;MACA;IAEA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}