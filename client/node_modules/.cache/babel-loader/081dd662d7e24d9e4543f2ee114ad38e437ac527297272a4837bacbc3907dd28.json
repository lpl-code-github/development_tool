{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { postTags } from \"@/api/request\";\nexport default {\n  name: \"AddScript\",\n  components: {\n    VNodes: {\n      functional: true,\n      render: (h, ctx) => ctx.props.vnodes\n    }\n  },\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    filterOption: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      childrenModelVisible: false,\n      // 子modal的可见\n      childrenModelRules: {\n        name: [{\n          required: true,\n          message: '请输入标签内容',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '长度必须在 1 ～ 50',\n          trigger: 'blur'\n        }]\n      },\n      // 子modal的校验规则\n      formLayout: 'horizontal',\n      form: this.$form.createForm(this, {\n        name: 'coordinated'\n      }),\n      tags: [],\n      selectedItems: [],\n      // 被选中的\n      newTag: {\n        name: \"\",\n        color: '#61afd1'\n      },\n      fileList: []\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        this.visible = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    },\n    filterOption: {\n      handler: function (newVal, oldVal) {\n        this.tags = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  computed: {\n    filteredSelectedOptions() {\n      return this.tags.filter(o => !this.selectedItems.includes(o.id));\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n    this.tags = this.filterOption;\n  },\n  methods: {\n    /*\n      选择器\n     */\n    handleSelect(selectedItems) {\n      this.selectedItems = selectedItems;\n    },\n    addItemClick() {\n      this.childrenModelVisible = true;\n    },\n    addTag() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          var data = {\n            data: this.newTag\n          };\n          this.$request.postTags(data).then(res => {\n            if (res.status === 200) {\n              this.$message.success(\"添加标签成功\");\n              // 请求成功后 将新的数据添加到tags\n              this.tags.push(res.data.data[0]);\n            } else {\n              this.$message.error(\"添加标签失败\");\n            }\n          });\n          this.initTagFormData();\n          this.childrenModelVisible = false;\n        } else {\n          return false;\n        }\n      });\n    },\n    initTagFormData() {\n      this.form.resetFields();\n      this.fileList = [];\n    },\n    handleOk(e) {\n      this.loading = true;\n      e.preventDefault();\n      this.form.validateFields(async (err, values) => {\n        if (!err) {\n          if (this.fileList.length === 0) {\n            this.$message.error(\"还没有上传脚本文件\");\n            this.loading = false;\n            return;\n          }\n          this.uploadScriptFileAndPostScriptData(values);\n        } else {\n          this.loading = false;\n        }\n      });\n    },\n    handleCancel(e) {\n      this.initTagFormData();\n      this.$emit('updateModelStatus', false);\n    },\n    afterClose(e) {\n      this.initTagFormData();\n      this.$emit('updateModelStatus', false);\n    },\n    // handleChange(info) {\n    //   const status = info.file.status;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     this.$message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     this.$message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n    uploadScriptFileAndPostScriptData(formData) {\n      if (this.fileList.length === 0) {\n        this.$message.warn('请上传文件');\n      } else {\n        const file = this.fileList[0];\n        let type = file.name.toLowerCase().substr(file.name.lastIndexOf('.'));\n        if (type !== '.sh') {\n          this.$message.warning('请上传sh文件');\n          return false;\n        }\n        this.fileList = [file];\n        const fd = new FormData();\n        this.fileList.forEach(file => {\n          fd.append('file', file);\n        });\n        this.$request.uploadFile(fd, 'script').then(res => {\n          if (res.status === 200) {\n            var path = res.data.data.path;\n            const tags = this.selectedItems.map(el => ({\n              id: el\n            }));\n            var param = {\n              data: {\n                name: formData.name,\n                description: formData.description,\n                tags: tags,\n                path: path\n              }\n            };\n            this.$request.postScriptData(param).then(res => {\n              if (res.status === 200) {\n                this.$message.success(\"添加脚本成功\");\n                this.fileList = [];\n                // 请求成功后 将新增的值传给父组件\n                this.$emit('submit', res.data.data);\n                setTimeout(() => {\n                  this.initTagFormData();\n                  this.$emit('updateModelStatus', false);\n                  this.loading = false;\n                }, 100);\n              } else {\n                this.loading = false;\n                this.$message.error(\"添加脚本失败\");\n              }\n            });\n          } else {\n            this.loading = false;\n            this.$message.error(\"上传脚本失败\");\n          }\n          this.fileList = [];\n        });\n      }\n    },\n    beforeUpload(file) {\n      return new Promise((resolve, reject) => {\n        let type = file.name.toLowerCase().substr(file.name.lastIndexOf('.'));\n        if (type !== '.sh') {\n          this.$message.warning('请上传sh文件');\n          return reject(false);\n        }\n        this.fileList = [file];\n        return false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["postTags","name","components","VNodes","functional","render","h","ctx","props","vnodes","openFlag","type","Boolean","required","filterOption","Array","data","loading","visible","childrenModelVisible","childrenModelRules","message","trigger","min","max","formLayout","form","$form","createForm","tags","selectedItems","newTag","color","fileList","watch","handler","newVal","oldVal","deep","computed","filteredSelectedOptions","filter","o","includes","id","mounted","methods","handleSelect","addItemClick","addTag","$refs","ruleForm","validate","valid","$request","then","res","status","$message","success","push","error","initTagFormData","resetFields","handleOk","e","preventDefault","validateFields","err","values","length","uploadScriptFileAndPostScriptData","handleCancel","$emit","afterClose","formData","warn","file","toLowerCase","substr","lastIndexOf","warning","fd","FormData","forEach","append","uploadFile","path","map","el","param","description","postScriptData","setTimeout","beforeUpload","Promise","resolve","reject"],"sources":["src/components/Script/AddScript.vue"],"sourcesContent":["<template>\n  <div>\n    <a-modal v-model=\"visible\" title=\"Title\" on-ok=\"handleOk\" :afterClose=\"afterClose\" :maskClosable=\"false\">\n      <template slot=\"footer\">\n        <a-button key=\"back\" @click=\"handleCancel\">\n          取消\n        </a-button>\n        <a-button key=\"submit\" type=\"primary\" :loading=\"loading\" @click=\"handleOk\">\n          添加\n        </a-button>\n      </template>\n      <a-form :form=\"form\" :label-col=\"{ span: 3 }\" :wrapper-col=\"{ span: 20}\" style=\"width: 100%\">\n        <a-form-item label=\"名称\" prop=\"name\">\n          <a-input\n              v-decorator=\"['name', { rules: [{ required: true, message: 'Please input your name!' }] }]\"\n          />\n        </a-form-item>\n        <a-form-model-item label=\"描述\" prop=\"description\">\n          <a-input v-decorator=\"['description']\" type=\"textarea\"/>\n        </a-form-model-item>\n        <a-form-model-item label=\"标签\" prop=\"tags\">\n          <a-select\n              show-search\n              placeholder=\"请选择标签\"\n              mode=\"multiple\"\n              @change=\"handleSelect\"\n          >\n            <div slot=\"dropdownRender\" slot-scope=\"menu\">\n              <v-nodes :vnodes=\"menu\"/>\n              <a-divider style=\"margin: 4px 0;\"/>\n              <div\n                  style=\"padding: 4px 8px; cursor: pointer;\"\n                  @mousedown=\"e => e.preventDefault()\"\n                  @click=\"addItemClick\"\n              >\n                <a-icon type=\"plus\"/>\n                添加新的标签\n              </div>\n            </div>\n\n            <a-select-option v-for=\"(item,index) in filteredSelectedOptions\" :key=\"index\" :value=\"item.id\">\n              <div class=\"color-box\" :style=\"{ 'background-color': item.color}\"></div>\n              <span>{{ item.name }}</span>\n            </a-select-option>\n          </a-select>\n        </a-form-model-item>\n\n      </a-form>\n      <div style=\"margin: auto;width: 93%\">\n        <a-upload-dragger\n            :directory=\"false\"\n            name=\"file\"\n            :multiple=\"false\"\n            accept=\".sh\"\n            :before-upload=\"beforeUpload\"\n\n            :file-list=\"fileList\"\n        >\n          <p class=\"ant-upload-drag-icon\">\n            <a-icon type=\"inbox\"/>\n          </p>\n          <p class=\"ant-upload-text\">\n            单击或拖动文件到此区域进行上传\n          </p>\n          <p class=\"ant-upload-hint\">\n            只接受一个脚本文件\n          </p>\n        </a-upload-dragger>\n      </div>\n    </a-modal>\n\n    <a-modal v-model=\"childrenModelVisible\"\n             ref=\"tagForm\"\n             title=\"添加一个新的标签\"\n             ok-text=\"确认\"\n             cancel-text=\"取消\"\n             action=\"\"\n             :maskClosable=\"false\"\n             :afterClose=\"initTagFormData\"\n             @ok=\"addTag\"\n    >\n      <a-form-model\n          ref=\"ruleForm\"\n          :model=\"newTag\"\n          :rules=\"childrenModelRules\"\n          :label-col=\"{ span: 3 }\"\n          :wrapper-col=\"{ span: 20 }\"\n      >\n        <a-form-model-item ref=\"name\" label=\"内容\" prop=\"name\">\n          <a-input v-model=\"newTag.name\"/>\n        </a-form-model-item>\n        <a-form-model-item label=\"颜色\" prop=\"color\">\n          <a-input type=\"color\" v-model=\"newTag.color\"/>\n        </a-form-model-item>\n      </a-form-model>\n    </a-modal>\n  </div>\n</template>\n<script>\nimport {postTags} from \"@/api/request\";\n\nexport default {\n  name: \"AddScript\",\n  components: {\n    VNodes: {\n      functional: true,\n      render: (h, ctx) => ctx.props.vnodes,\n    },\n  },\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    filterOption: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      childrenModelVisible: false,// 子modal的可见\n      childrenModelRules: {\n        name: [\n          {required: true, message: '请输入标签内容', trigger: 'blur'},\n          {min: 1, max: 20, message: '长度必须在 1 ～ 50', trigger: 'blur'},\n        ],\n      },// 子modal的校验规则\n      formLayout: 'horizontal',\n      form: this.$form.createForm(this, {name: 'coordinated'}),\n      tags: [],\n      selectedItems: [], // 被选中的\n      newTag: {\n        name: \"\",\n        color: '#61afd1'\n      },\n      fileList: [],\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        this.visible = newVal\n      },\n      // 深度观察监听\n      deep: true\n    },\n    filterOption: {\n      handler: function (newVal, oldVal) {\n        this.tags = newVal\n      },\n      // 深度观察监听\n      deep: true\n    },\n  },\n  computed: {\n    filteredSelectedOptions() {\n      return this.tags.filter(o => !this.selectedItems.includes(o.id));\n    },\n  },\n  mounted() {\n    this.visible = this.openFlag\n    this.tags = this.filterOption\n  },\n\n  methods: {\n    /*\n      选择器\n     */\n    handleSelect(selectedItems) {\n      this.selectedItems = selectedItems;\n    },\n    addItemClick() {\n      this.childrenModelVisible = true\n    },\n    addTag() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          var data = {\n            data: this.newTag\n          }\n          this.$request.postTags(data).then(res => {\n            if (res.status === 200) {\n              this.$message.success(\"添加标签成功\")\n              // 请求成功后 将新的数据添加到tags\n              this.tags.push(res.data.data[0])\n            } else {\n              this.$message.error(\"添加标签失败\")\n            }\n          })\n          this.initTagFormData()\n          this.childrenModelVisible = false;\n        } else {\n          return false\n        }\n      });\n    },\n    initTagFormData() {\n      this.form.resetFields();\n      this.fileList = []\n    },\n\n\n    handleOk(e) {\n      this.loading = true;\n      e.preventDefault();\n      this.form.validateFields(async (err, values) => {\n        if (!err) {\n          if (this.fileList.length === 0) {\n            this.$message.error(\"还没有上传脚本文件\")\n            this.loading = false;\n            return\n          }\n          this.uploadScriptFileAndPostScriptData(values)\n\n        } else {\n          this.loading = false;\n        }\n      });\n\n\n    },\n    handleCancel(e) {\n      this.initTagFormData()\n      this.$emit('updateModelStatus', false)\n    },\n    afterClose(e) {\n      this.initTagFormData()\n      this.$emit('updateModelStatus', false)\n    },\n    // handleChange(info) {\n    //   const status = info.file.status;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     this.$message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     this.$message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n    uploadScriptFileAndPostScriptData(formData) {\n      if (this.fileList.length === 0) {\n        this.$message.warn('请上传文件')\n      } else {\n        const file = this.fileList[0];\n        let type = file.name.toLowerCase().substr(file.name.lastIndexOf('.'))\n        if (type !== '.sh') {\n          this.$message.warning('请上传sh文件')\n          return false\n        }\n        this.fileList = [file]\n        const fd = new FormData()\n        this.fileList.forEach(file => {\n          fd.append('file', file)\n        })\n\n        this.$request.uploadFile(fd, 'script').then(res => {\n          if (res.status === 200) {\n            var path = res.data.data.path\n\n            const tags = this.selectedItems.map(el => ({id: el}));\n            var param = {\n              data: {\n                name: formData.name,\n                description: formData.description,\n                tags: tags,\n                path: path\n              }\n            }\n            this.$request.postScriptData(param).then(res => {\n              if (res.status === 200) {\n                this.$message.success(\"添加脚本成功\")\n                this.fileList = []\n                // 请求成功后 将新增的值传给父组件\n                this.$emit('submit', res.data.data)\n                setTimeout(() => {\n                  this.initTagFormData()\n                  this.$emit('updateModelStatus', false)\n                  this.loading = false;\n                }, 100);\n              } else {\n                this.loading = false;\n                this.$message.error(\"添加脚本失败\")\n              }\n            })\n          } else {\n            this.loading = false;\n            this.$message.error(\"上传脚本失败\")\n          }\n          this.fileList = []\n        })\n      }\n    },\n    beforeUpload(file) {\n      return new Promise((resolve, reject) => {\n        let type = file.name.toLowerCase().substr(file.name.lastIndexOf('.'))\n        if (type !== '.sh') {\n          this.$message.warning('请上传sh文件')\n          return reject(false)\n        }\n        this.fileList = [file]\n        return false\n      })\n    },\n  },\n};\n</script>\n<style scoped>\n.color-box {\n  width: 12px;\n  height: 12px;\n  align-items: center;\n  margin: 0 5px 0 0;\n  display: inline-block;\n}\n\n/deep/ .anticon .anticon-exclamation-circle {\n  display: none !important;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}