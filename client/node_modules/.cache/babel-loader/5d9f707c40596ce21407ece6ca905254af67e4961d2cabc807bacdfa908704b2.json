{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createVNode as _createVNode } from \"vue\";\nimport classNames from '../../_util/classNames';\nimport { computed, defineComponent } from 'vue';\nimport { useInjectTable } from '../context/TableContext';\nimport HeaderRow from './HeaderRow';\nfunction parseHeaderRows(rootColumns) {\n  const rows = [];\n  function fillRowCells(columns, colIndex) {\n    let rowIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    // Init rows\n    rows[rowIndex] = rows[rowIndex] || [];\n    let currentColIndex = colIndex;\n    const colSpans = columns.filter(Boolean).map(column => {\n      const cell = {\n        key: column.key,\n        class: classNames(column.className, column.class),\n        // children: column.title,\n        column,\n        colStart: currentColIndex\n      };\n      let colSpan = 1;\n      const subColumns = column.children;\n      if (subColumns && subColumns.length > 0) {\n        colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n        cell.hasSubColumns = true;\n      }\n      if ('colSpan' in column) {\n        ({\n          colSpan\n        } = column);\n      }\n      if ('rowSpan' in column) {\n        cell.rowSpan = column.rowSpan;\n      }\n      cell.colSpan = colSpan;\n      cell.colEnd = cell.colStart + colSpan - 1;\n      rows[rowIndex].push(cell);\n      currentColIndex += colSpan;\n      return colSpan;\n    });\n    return colSpans;\n  }\n  // Generate `rows` cell data\n  fillRowCells(rootColumns, 0);\n  // Handle `rowSpan`\n  const rowCount = rows.length;\n  for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n    rows[rowIndex].forEach(cell => {\n      if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n        // eslint-disable-next-line no-param-reassign\n        cell.rowSpan = rowCount - rowIndex;\n      }\n    });\n  }\n  return rows;\n}\nexport default defineComponent({\n  name: 'Header',\n  inheritAttrs: false,\n  props: ['columns', 'flattenColumns', 'stickyOffsets', 'customHeaderRow'],\n  setup(props) {\n    const tableContext = useInjectTable();\n    const rows = computed(() => parseHeaderRows(props.columns));\n    return () => {\n      const {\n        prefixCls,\n        getComponent\n      } = tableContext;\n      const {\n        stickyOffsets,\n        flattenColumns,\n        customHeaderRow\n      } = props;\n      const WrapperComponent = getComponent(['header', 'wrapper'], 'thead');\n      const trComponent = getComponent(['header', 'row'], 'tr');\n      const thComponent = getComponent(['header', 'cell'], 'th');\n      return _createVNode(WrapperComponent, {\n        \"class\": `${prefixCls}-thead`\n      }, {\n        default: () => [rows.value.map((row, rowIndex) => {\n          const rowNode = _createVNode(HeaderRow, {\n            \"key\": rowIndex,\n            \"flattenColumns\": flattenColumns,\n            \"cells\": row,\n            \"stickyOffsets\": stickyOffsets,\n            \"rowComponent\": trComponent,\n            \"cellComponent\": thComponent,\n            \"customHeaderRow\": customHeaderRow,\n            \"index\": rowIndex\n          }, null);\n          return rowNode;\n        })]\n      });\n    };\n  }\n});","map":{"version":3,"names":["createVNode","_createVNode","classNames","computed","defineComponent","useInjectTable","HeaderRow","parseHeaderRows","rootColumns","rows","fillRowCells","columns","colIndex","rowIndex","arguments","length","undefined","currentColIndex","colSpans","filter","Boolean","map","column","cell","key","class","className","colStart","colSpan","subColumns","children","reduce","total","count","hasSubColumns","rowSpan","colEnd","push","rowCount","forEach","name","inheritAttrs","props","setup","tableContext","prefixCls","getComponent","stickyOffsets","flattenColumns","customHeaderRow","WrapperComponent","trComponent","thComponent","default","value","row","rowNode"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-table/Header/Header.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport classNames from '../../_util/classNames';\nimport { computed, defineComponent } from 'vue';\nimport { useInjectTable } from '../context/TableContext';\nimport HeaderRow from './HeaderRow';\nfunction parseHeaderRows(rootColumns) {\n  const rows = [];\n  function fillRowCells(columns, colIndex) {\n    let rowIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    // Init rows\n    rows[rowIndex] = rows[rowIndex] || [];\n    let currentColIndex = colIndex;\n    const colSpans = columns.filter(Boolean).map(column => {\n      const cell = {\n        key: column.key,\n        class: classNames(column.className, column.class),\n        // children: column.title,\n        column,\n        colStart: currentColIndex\n      };\n      let colSpan = 1;\n      const subColumns = column.children;\n      if (subColumns && subColumns.length > 0) {\n        colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n        cell.hasSubColumns = true;\n      }\n      if ('colSpan' in column) {\n        ({\n          colSpan\n        } = column);\n      }\n      if ('rowSpan' in column) {\n        cell.rowSpan = column.rowSpan;\n      }\n      cell.colSpan = colSpan;\n      cell.colEnd = cell.colStart + colSpan - 1;\n      rows[rowIndex].push(cell);\n      currentColIndex += colSpan;\n      return colSpan;\n    });\n    return colSpans;\n  }\n  // Generate `rows` cell data\n  fillRowCells(rootColumns, 0);\n  // Handle `rowSpan`\n  const rowCount = rows.length;\n  for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n    rows[rowIndex].forEach(cell => {\n      if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n        // eslint-disable-next-line no-param-reassign\n        cell.rowSpan = rowCount - rowIndex;\n      }\n    });\n  }\n  return rows;\n}\nexport default defineComponent({\n  name: 'Header',\n  inheritAttrs: false,\n  props: ['columns', 'flattenColumns', 'stickyOffsets', 'customHeaderRow'],\n  setup(props) {\n    const tableContext = useInjectTable();\n    const rows = computed(() => parseHeaderRows(props.columns));\n    return () => {\n      const {\n        prefixCls,\n        getComponent\n      } = tableContext;\n      const {\n        stickyOffsets,\n        flattenColumns,\n        customHeaderRow\n      } = props;\n      const WrapperComponent = getComponent(['header', 'wrapper'], 'thead');\n      const trComponent = getComponent(['header', 'row'], 'tr');\n      const thComponent = getComponent(['header', 'cell'], 'th');\n      return _createVNode(WrapperComponent, {\n        \"class\": `${prefixCls}-thead`\n      }, {\n        default: () => [rows.value.map((row, rowIndex) => {\n          const rowNode = _createVNode(HeaderRow, {\n            \"key\": rowIndex,\n            \"flattenColumns\": flattenColumns,\n            \"cells\": row,\n            \"stickyOffsets\": stickyOffsets,\n            \"rowComponent\": trComponent,\n            \"cellComponent\": thComponent,\n            \"customHeaderRow\": customHeaderRow,\n            \"index\": rowIndex\n          }, null);\n          return rowNode;\n        })]\n      });\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}