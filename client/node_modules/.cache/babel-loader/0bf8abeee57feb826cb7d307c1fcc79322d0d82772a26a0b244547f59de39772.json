{"ast":null,"code":"import Code from \"@/components/code/Code\";\nimport Json from \"@/components/code/Json\";\nimport { generatePostmanTest } from \"@/api/request\";\nexport default {\n  name: \"PostmanTestGenerator\",\n  components: {\n    Json,\n    Code\n  },\n  data() {\n    return {\n      jsonData: {\n        hasJsonFlag: false\n      },\n      codeText: \"\",\n      loading: false\n    };\n  },\n  methods: {\n    getJsonData(jsonData) {\n      this.jsonData = jsonData;\n    },\n    generatePostmanTest() {\n      if (!this.jsonData.hasJsonFlag) {\n        this.$message.error(\"Json格式错误，请检查\");\n        return;\n      }\n      this.loading = true;\n      var jsonReq = this.jsonData.value;\n      this.$request.generatePostmanTest(jsonReq).then(res => {\n        if (res.status === 200) {\n          this.codeText = res.data;\n          this.loading = false;\n        } else {\n          this.loading = false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Code","Json","generatePostmanTest","name","components","data","jsonData","hasJsonFlag","codeText","loading","methods","getJsonData","$message","error","jsonReq","value","$request","then","res","status"],"sources":["src/views/PostmanTestGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"postman-test-gen\">\n    <div style=\"width: 48%;\">\n      <div class=\"text-button\">\n        <p class=\"my-title\" style=\"margin-bottom: 10px!important;\">Json:</p>\n        <a-button  @click=\"generatePostmanTest\" style=\"margin-top: 10px\">\n          生成测试\n        </a-button>\n      </div>\n      <Json @updateJsonData=\"getJsonData\"></Json>\n    </div>\n    <div style=\"width: 48%\">\n      <p class=\"my-title\">Postman Test:</p>\n      <a-spin size=\"large\" :spinning=\"loading\">\n         <Code :code-text=\"codeText\"><a-spin /></Code>\n      </a-spin>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Code from \"@/components/code/Code\";\nimport Json from \"@/components/code/Json\";\nimport {generatePostmanTest} from \"@/api/request\";\nexport default {\n  name: \"PostmanTestGenerator\",\n  components: {Json, Code},\n  data(){\n    return{\n      jsonData:{\n        hasJsonFlag: false\n      },\n      codeText:\"\",\n      loading: false\n    }\n  },\n  methods:{\n    getJsonData(jsonData){\n      this.jsonData = jsonData\n    },\n    generatePostmanTest(){\n      if (!this.jsonData.hasJsonFlag){\n        this.$message.error(\"Json格式错误，请检查\")\n        return\n      }\n      this.loading = true\n      var jsonReq = this.jsonData.value\n      this.$request.generatePostmanTest(jsonReq).then(res=>{\n        if (res.status === 200){\n          this.codeText = res.data\n          this.loading = false\n        }else {\n          this.loading = false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.postman-test-gen{\n  display: flex;\n  justify-content: space-around;\n  overflow-y: hidden;\n}\n.text-button{\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.my-title{\n  margin-bottom: -12px;\n  margin-top: 20px;\n  font-size: 17px\n}\n.example-test {\n  text-align: center;\n}\n</style>\n"],"mappings":"AAqBA,OAAAA,IAAA;AACA,OAAAC,IAAA;AACA,SAAAC,mBAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAH,IAAA;IAAAD;EAAA;EACAK,KAAA;IACA;MACAC,QAAA;QACAC,WAAA;MACA;MACAC,QAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAAL,QAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;IACA;IACAJ,oBAAA;MACA,UAAAI,QAAA,CAAAC,WAAA;QACA,KAAAK,QAAA,CAAAC,KAAA;QACA;MACA;MACA,KAAAJ,OAAA;MACA,IAAAK,OAAA,QAAAR,QAAA,CAAAS,KAAA;MACA,KAAAC,QAAA,CAAAd,mBAAA,CAAAY,OAAA,EAAAG,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,KAAAX,QAAA,GAAAU,GAAA,CAAAb,IAAA;UACA,KAAAI,OAAA;QACA;UACA,KAAAA,OAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}