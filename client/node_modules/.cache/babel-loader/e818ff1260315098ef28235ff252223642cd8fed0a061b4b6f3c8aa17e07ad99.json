{"ast":null,"code":"import { service } from '@/api/index';\n\n/*\n    快捷开关的请求\n */\nexport const switchApi = (type, flag) => {\n  return service.request({\n    url: '/functional/quickSwitch',\n    method: 'put',\n    data: {\n      data: {\n        type: type,\n        flag: flag\n      }\n    }\n  }).then(res => res);\n};\nexport const switchStatus = () => {\n  return service.request({\n    url: '/functional/switchStatus',\n    method: 'get'\n  }).then(res => res);\n};\nexport const clearR1Cache = () => {\n  return service.request({\n    url: '/functional/clearCache',\n    method: 'post'\n  }).then(res => res);\n};\n\n/*\n    r1概览的请求\n */\nexport const getDockerSystemStatus = () => {\n  return service.request({\n    url: '/functional/getSystemStatus',\n    method: 'get'\n  }).then(res => res);\n};\n/*\n    docker容器硬件信息\n */\nexport const getR1Api = () => {\n  return service.request({\n    url: '/functional/getApiInfo',\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    生成器的一些请求\n */\nexport const generatePostmanTest = param => {\n  return service.request({\n    url: '/functional/generatePostmanTest',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\nexport const generateCode = (entityName, type) => {\n  return service.request({\n    url: '/functional/generateCode?entity_name=' + entityName + \"&type=\" + type,\n    method: 'get'\n  }).then(res => res);\n};\nexport const getSlateDoc = param => {\n  return service.request({\n    url: '/functional/generateSlateDoc' + param,\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    获取日志的请求\n */\nexport const getLog = param => {\n  return service.request({\n    url: '/resource/operation_log' + param,\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    获取r1下某个目录下文件列表\n */\nexport const getFileLists = param => {\n  return service.request({\n    url: '/functional/getFileLists' + param,\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    获取r1所在数据库服务器下所有数据库列表\n */\nexport const getDatabaseList = () => {\n  return service.request({\n    url: '/functional/getDatabaseList',\n    method: 'get'\n  }).then(res => res);\n};\n\n/*\n    DatabaseBackup 的接口\n */\nexport const getDatabaseBackup = params => {\n  return service.request({\n    url: '/resource/databaseBackup' + params,\n    method: 'get'\n  }).then(res => res);\n};\nexport const postDatabaseBackup = param => {\n  return service.request({\n    url: '/resource/databaseBackup',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\nexport const putDatabaseBackup = param => {\n  return service.request({\n    url: '/resource/databaseBackup',\n    method: 'put',\n    data: param\n  }).then(res => res);\n};\nexport const deleteDatabaseBackup = param => {\n  return service.request({\n    url: '/resource/databaseBackup',\n    method: 'delete',\n    data: param\n  }).then(res => res);\n};\nexport const importDatabaseBackup = param => {\n  return service.request({\n    url: '/resource/databaseBackup/import',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\n\n/*\n    NewmanTasks 以及 runNewman的接口\n */\nexport const getNewmanTasks = param => {\n  return service.request({\n    url: '/resource/newman_tasks' + param,\n    method: 'get'\n  }).then(res => res);\n};\nexport const postNewmanTasks = param => {\n  return service.request({\n    url: '/resource/newman_tasks',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\nexport const putNewmanTasks = param => {\n  return service.request({\n    url: '/resource/newman_tasks',\n    method: 'put',\n    data: param\n  }).then(res => res);\n};\nexport const deleteNewmanTasks = param => {\n  return service.request({\n    url: '/resource/newman_tasks',\n    method: 'delete',\n    data: param\n  }).then(res => res);\n};\nexport const runNewman = param => {\n  return service.request({\n    url: '/functional/runNewman',\n    method: 'post',\n    data: param\n  }).then(res => res);\n};\n\n/*\n    文件相关的接口\n */\nexport const downloadFile = path => {\n  return service.request({\n    url: '/functional/downloadFile',\n    data: {\n      data: {\n        path: path\n      }\n    },\n    responseType: 'blob',\n    method: 'post'\n  }).then(res => res);\n};","map":{"version":3,"names":["service","switchApi","type","flag","request","url","method","data","then","res","switchStatus","clearR1Cache","getDockerSystemStatus","getR1Api","generatePostmanTest","param","generateCode","entityName","getSlateDoc","getLog","getFileLists","getDatabaseList","getDatabaseBackup","params","postDatabaseBackup","putDatabaseBackup","deleteDatabaseBackup","importDatabaseBackup","getNewmanTasks","postNewmanTasks","putNewmanTasks","deleteNewmanTasks","runNewman","downloadFile","path","responseType"],"sources":["/Users/lpl/Teamsupport/development_tool/client/src/api/request.js"],"sourcesContent":["import {service} from '@/api/index'\n\n/*\n    快捷开关的请求\n */\nexport const switchApi = (type, flag) => {\n    return service\n        .request({\n            url: '/functional/quickSwitch',\n            method: 'put',\n            data: {\n                data:{\n                    type: type,\n                    flag: flag,\n                }\n            }\n        })\n        .then(res=> res)\n}\nexport const switchStatus = () => {\n    return service\n        .request({\n            url: '/functional/switchStatus',\n            method: 'get',\n        })\n        .then(res=> res)\n}\nexport const clearR1Cache = () => {\n    return service\n        .request({\n            url: '/functional/clearCache',\n            method: 'post',\n        })\n        .then(res=> res)\n}\n\n/*\n    r1概览的请求\n */\nexport const getDockerSystemStatus = () => {\n    return service\n        .request({\n            url: '/functional/getSystemStatus',\n            method: 'get',\n        })\n        .then(res=> res)\n}\n/*\n    docker容器硬件信息\n */\nexport const getR1Api = () => {\n    return service\n        .request({\n            url: '/functional/getApiInfo',\n            method: 'get',\n        })\n        .then(res=> res)\n}\n\n/*\n    生成器的一些请求\n */\nexport const generatePostmanTest = (param) => {\n    return service\n        .request({\n            url: '/functional/generatePostmanTest',\n            method: 'post',\n            data: param\n        })\n        .then(res=> res)\n}\nexport const generateCode = (entityName,type) => {\n    return service\n        .request({\n            url: '/functional/generateCode?entity_name='+entityName+\"&type=\"+type,\n            method: 'get',\n        })\n        .then(res=> res)\n}\nexport const getSlateDoc = (param) => {\n    return service\n        .request({\n            url: '/functional/generateSlateDoc'+param,\n            method: 'get',\n        })\n        .then(res=> res)\n}\n\n/*\n    获取日志的请求\n */\nexport const getLog = (param) => {\n    return service\n        .request({\n            url: '/resource/operation_log'+param,\n            method: 'get',\n        })\n        .then(res=> res)\n}\n\n/*\n    获取r1下某个目录下文件列表\n */\nexport const getFileLists = (param) => {\n    return service\n        .request({\n            url: '/functional/getFileLists' + param,\n            method: 'get',\n        })\n        .then(res=> res)\n}\n\n/*\n    获取r1所在数据库服务器下所有数据库列表\n */\nexport const getDatabaseList = () => {\n    return service\n        .request({\n            url: '/functional/getDatabaseList',\n            method: 'get',\n        })\n        .then(res=> res)\n}\n\n/*\n    DatabaseBackup 的接口\n */\nexport const getDatabaseBackup = (params) => {\n    return service\n        .request({\n            url: '/resource/databaseBackup'+params,\n            method: 'get',\n        })\n        .then(res=> res)\n}\nexport const postDatabaseBackup = (param) => {\n    return service\n        .request({\n            url: '/resource/databaseBackup',\n            method: 'post',\n            data:param\n        })\n        .then(res=> res)\n}\nexport const putDatabaseBackup = (param) => {\n    return service\n        .request({\n            url: '/resource/databaseBackup',\n            method: 'put',\n            data:param\n        })\n        .then(res=> res)\n}\nexport const deleteDatabaseBackup = (param) => {\n    return service\n        .request({\n            url: '/resource/databaseBackup',\n            method: 'delete',\n            data:param\n        })\n        .then(res=> res)\n}\nexport const importDatabaseBackup = (param) => {\n    return service\n        .request({\n            url: '/resource/databaseBackup/import',\n            method: 'post',\n            data:param\n        })\n        .then(res=> res)\n}\n\n/*\n    NewmanTasks 以及 runNewman的接口\n */\nexport const getNewmanTasks = (param) => {\n    return service\n        .request({\n            url: '/resource/newman_tasks'+param,\n            method: 'get'\n        })\n        .then(res=> res)\n}\nexport const postNewmanTasks = (param) => {\n    return service\n        .request({\n            url: '/resource/newman_tasks',\n            method: 'post',\n            data:param\n        })\n        .then(res=> res)\n}\nexport const putNewmanTasks = (param) => {\n    return service\n        .request({\n            url: '/resource/newman_tasks',\n            method: 'put',\n            data:param\n        })\n        .then(res=> res)\n}\nexport const deleteNewmanTasks = (param) => {\n    return service\n        .request({\n            url: '/resource/newman_tasks',\n            method: 'delete',\n            data:param\n        })\n        .then(res=> res)\n}\nexport const runNewman = (param) => {\n    return service\n        .request({\n            url: '/functional/runNewman',\n            method: 'post',\n            data: param\n        })\n        .then(res=> res)\n}\n\n/*\n    文件相关的接口\n */\nexport const downloadFile = (path) => {\n    return service\n        .request({\n            url: '/functional/downloadFile',\n            data:{\n                data:{\n                    path:path\n                }\n            },\n            responseType: 'blob',\n            method: 'post'\n        })\n        .then(res=> res)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}