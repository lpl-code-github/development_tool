{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport ColGroup from '../ColGroup';\nimport { computed, defineComponent, nextTick, onBeforeUnmount, onMounted, ref, toRef, watchEffect } from 'vue';\nimport { useInjectTable } from '../context/TableContext';\nimport classNames from '../../_util/classNames';\nimport addEventListenerWrap from '../../vc-util/Dom/addEventListener';\nfunction useColumnWidth(colWidthsRef, columCountRef) {\n  return computed(() => {\n    const cloneColumns = [];\n    const colWidths = colWidthsRef.value;\n    const columCount = columCountRef.value;\n    for (let i = 0; i < columCount; i += 1) {\n      const val = colWidths[i];\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n    return cloneColumns;\n  });\n}\nexport default defineComponent({\n  name: 'FixedHolder',\n  inheritAttrs: false,\n  props: ['columns', 'flattenColumns', 'stickyOffsets', 'customHeaderRow', 'noData', 'maxContentScroll', 'colWidths', 'columCount', 'direction', 'fixHeader', 'stickyTopOffset', 'stickyBottomOffset', 'stickyClassName'],\n  emits: ['scroll'],\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      emit\n    } = _ref;\n    const tableContext = useInjectTable();\n    const combinationScrollBarSize = computed(() => tableContext.isSticky && !props.fixHeader ? 0 : tableContext.scrollbarSize);\n    const scrollRef = ref();\n    const onWheel = e => {\n      const {\n        currentTarget,\n        deltaX\n      } = e;\n      if (deltaX) {\n        emit('scroll', {\n          currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    };\n    const wheelEvent = ref();\n    onMounted(() => {\n      nextTick(() => {\n        wheelEvent.value = addEventListenerWrap(scrollRef.value, 'wheel', onWheel);\n      });\n    });\n    onBeforeUnmount(() => {\n      var _a;\n      (_a = wheelEvent.value) === null || _a === void 0 ? void 0 : _a.remove();\n    });\n    // Check if all flattenColumns has width\n    const allFlattenColumnsWithWidth = computed(() => props.flattenColumns.every(column => column.width && column.width !== 0 && column.width !== '0px'));\n    const columnsWithScrollbar = ref([]);\n    const flattenColumnsWithScrollbar = ref([]);\n    watchEffect(() => {\n      // Add scrollbar column\n      const lastColumn = props.flattenColumns[props.flattenColumns.length - 1];\n      const ScrollBarColumn = {\n        fixed: lastColumn ? lastColumn.fixed : null,\n        scrollbar: true,\n        customHeaderCell: () => ({\n          class: `${tableContext.prefixCls}-cell-scrollbar`\n        })\n      };\n      columnsWithScrollbar.value = combinationScrollBarSize.value ? [...props.columns, ScrollBarColumn] : props.columns;\n      flattenColumnsWithScrollbar.value = combinationScrollBarSize.value ? [...props.flattenColumns, ScrollBarColumn] : props.flattenColumns;\n    });\n    // Calculate the sticky offsets\n    const headerStickyOffsets = computed(() => {\n      const {\n        stickyOffsets,\n        direction\n      } = props;\n      const {\n        right,\n        left\n      } = stickyOffsets;\n      return _extends(_extends({}, stickyOffsets), {\n        left: direction === 'rtl' ? [...left.map(width => width + combinationScrollBarSize.value), 0] : left,\n        right: direction === 'rtl' ? right : [...right.map(width => width + combinationScrollBarSize.value), 0],\n        isSticky: tableContext.isSticky\n      });\n    });\n    const mergedColumnWidth = useColumnWidth(toRef(props, 'colWidths'), toRef(props, 'columCount'));\n    return () => {\n      var _a;\n      const {\n        noData,\n        columCount,\n        stickyTopOffset,\n        stickyBottomOffset,\n        stickyClassName,\n        maxContentScroll\n      } = props;\n      const {\n        isSticky\n      } = tableContext;\n      return _createVNode(\"div\", {\n        \"style\": _extends({\n          overflow: 'hidden'\n        }, isSticky ? {\n          top: `${stickyTopOffset}px`,\n          bottom: `${stickyBottomOffset}px`\n        } : {}),\n        \"ref\": scrollRef,\n        \"class\": classNames(attrs.class, {\n          [stickyClassName]: !!stickyClassName\n        })\n      }, [_createVNode(\"table\", {\n        \"style\": {\n          tableLayout: 'fixed',\n          visibility: noData || mergedColumnWidth.value ? null : 'hidden'\n        }\n      }, [(!noData || !maxContentScroll || allFlattenColumnsWithWidth.value) && _createVNode(ColGroup, {\n        \"colWidths\": mergedColumnWidth.value ? [...mergedColumnWidth.value, combinationScrollBarSize.value] : [],\n        \"columCount\": columCount + 1,\n        \"columns\": flattenColumnsWithScrollbar.value\n      }, null), (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, _extends(_extends({}, props), {\n        stickyOffsets: headerStickyOffsets.value,\n        columns: columnsWithScrollbar.value,\n        flattenColumns: flattenColumnsWithScrollbar.value\n      }))])]);\n    };\n  }\n});","map":{"version":3,"names":["_extends","createVNode","_createVNode","ColGroup","computed","defineComponent","nextTick","onBeforeUnmount","onMounted","ref","toRef","watchEffect","useInjectTable","classNames","addEventListenerWrap","useColumnWidth","colWidthsRef","columCountRef","cloneColumns","colWidths","value","columCount","i","val","undefined","name","inheritAttrs","props","emits","setup","_ref","attrs","slots","emit","tableContext","combinationScrollBarSize","isSticky","fixHeader","scrollbarSize","scrollRef","onWheel","e","currentTarget","deltaX","scrollLeft","preventDefault","wheelEvent","_a","remove","allFlattenColumnsWithWidth","flattenColumns","every","column","width","columnsWithScrollbar","flattenColumnsWithScrollbar","lastColumn","length","ScrollBarColumn","fixed","scrollbar","customHeaderCell","class","prefixCls","columns","headerStickyOffsets","stickyOffsets","direction","right","left","map","mergedColumnWidth","noData","stickyTopOffset","stickyBottomOffset","stickyClassName","maxContentScroll","overflow","top","bottom","tableLayout","visibility","default","call"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-table/FixedHolder/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport ColGroup from '../ColGroup';\nimport { computed, defineComponent, nextTick, onBeforeUnmount, onMounted, ref, toRef, watchEffect } from 'vue';\nimport { useInjectTable } from '../context/TableContext';\nimport classNames from '../../_util/classNames';\nimport addEventListenerWrap from '../../vc-util/Dom/addEventListener';\nfunction useColumnWidth(colWidthsRef, columCountRef) {\n  return computed(() => {\n    const cloneColumns = [];\n    const colWidths = colWidthsRef.value;\n    const columCount = columCountRef.value;\n    for (let i = 0; i < columCount; i += 1) {\n      const val = colWidths[i];\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n    return cloneColumns;\n  });\n}\nexport default defineComponent({\n  name: 'FixedHolder',\n  inheritAttrs: false,\n  props: ['columns', 'flattenColumns', 'stickyOffsets', 'customHeaderRow', 'noData', 'maxContentScroll', 'colWidths', 'columCount', 'direction', 'fixHeader', 'stickyTopOffset', 'stickyBottomOffset', 'stickyClassName'],\n  emits: ['scroll'],\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      emit\n    } = _ref;\n    const tableContext = useInjectTable();\n    const combinationScrollBarSize = computed(() => tableContext.isSticky && !props.fixHeader ? 0 : tableContext.scrollbarSize);\n    const scrollRef = ref();\n    const onWheel = e => {\n      const {\n        currentTarget,\n        deltaX\n      } = e;\n      if (deltaX) {\n        emit('scroll', {\n          currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    };\n    const wheelEvent = ref();\n    onMounted(() => {\n      nextTick(() => {\n        wheelEvent.value = addEventListenerWrap(scrollRef.value, 'wheel', onWheel);\n      });\n    });\n    onBeforeUnmount(() => {\n      var _a;\n      (_a = wheelEvent.value) === null || _a === void 0 ? void 0 : _a.remove();\n    });\n    // Check if all flattenColumns has width\n    const allFlattenColumnsWithWidth = computed(() => props.flattenColumns.every(column => column.width && column.width !== 0 && column.width !== '0px'));\n    const columnsWithScrollbar = ref([]);\n    const flattenColumnsWithScrollbar = ref([]);\n    watchEffect(() => {\n      // Add scrollbar column\n      const lastColumn = props.flattenColumns[props.flattenColumns.length - 1];\n      const ScrollBarColumn = {\n        fixed: lastColumn ? lastColumn.fixed : null,\n        scrollbar: true,\n        customHeaderCell: () => ({\n          class: `${tableContext.prefixCls}-cell-scrollbar`\n        })\n      };\n      columnsWithScrollbar.value = combinationScrollBarSize.value ? [...props.columns, ScrollBarColumn] : props.columns;\n      flattenColumnsWithScrollbar.value = combinationScrollBarSize.value ? [...props.flattenColumns, ScrollBarColumn] : props.flattenColumns;\n    });\n    // Calculate the sticky offsets\n    const headerStickyOffsets = computed(() => {\n      const {\n        stickyOffsets,\n        direction\n      } = props;\n      const {\n        right,\n        left\n      } = stickyOffsets;\n      return _extends(_extends({}, stickyOffsets), {\n        left: direction === 'rtl' ? [...left.map(width => width + combinationScrollBarSize.value), 0] : left,\n        right: direction === 'rtl' ? right : [...right.map(width => width + combinationScrollBarSize.value), 0],\n        isSticky: tableContext.isSticky\n      });\n    });\n    const mergedColumnWidth = useColumnWidth(toRef(props, 'colWidths'), toRef(props, 'columCount'));\n    return () => {\n      var _a;\n      const {\n        noData,\n        columCount,\n        stickyTopOffset,\n        stickyBottomOffset,\n        stickyClassName,\n        maxContentScroll\n      } = props;\n      const {\n        isSticky\n      } = tableContext;\n      return _createVNode(\"div\", {\n        \"style\": _extends({\n          overflow: 'hidden'\n        }, isSticky ? {\n          top: `${stickyTopOffset}px`,\n          bottom: `${stickyBottomOffset}px`\n        } : {}),\n        \"ref\": scrollRef,\n        \"class\": classNames(attrs.class, {\n          [stickyClassName]: !!stickyClassName\n        })\n      }, [_createVNode(\"table\", {\n        \"style\": {\n          tableLayout: 'fixed',\n          visibility: noData || mergedColumnWidth.value ? null : 'hidden'\n        }\n      }, [(!noData || !maxContentScroll || allFlattenColumnsWithWidth.value) && _createVNode(ColGroup, {\n        \"colWidths\": mergedColumnWidth.value ? [...mergedColumnWidth.value, combinationScrollBarSize.value] : [],\n        \"columCount\": columCount + 1,\n        \"columns\": flattenColumnsWithScrollbar.value\n      }, null), (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, _extends(_extends({}, props), {\n        stickyOffsets: headerStickyOffsets.value,\n        columns: columnsWithScrollbar.value,\n        flattenColumns: flattenColumnsWithScrollbar.value\n      }))])]);\n    };\n  }\n});"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,QAAQ,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,SAAS,EAAEC,GAAG,EAAEC,KAAK,EAAEC,WAAW,QAAQ,KAAK;AAC9G,SAASC,cAAc,QAAQ,yBAAyB;AACxD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,oBAAoB,MAAM,oCAAoC;AACrE,SAASC,cAAcA,CAACC,YAAY,EAAEC,aAAa,EAAE;EACnD,OAAOb,QAAQ,CAAC,MAAM;IACpB,MAAMc,YAAY,GAAG,EAAE;IACvB,MAAMC,SAAS,GAAGH,YAAY,CAACI,KAAK;IACpC,MAAMC,UAAU,GAAGJ,aAAa,CAACG,KAAK;IACtC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,EAAEC,CAAC,IAAI,CAAC,EAAE;MACtC,MAAMC,GAAG,GAAGJ,SAAS,CAACG,CAAC,CAAC;MACxB,IAAIC,GAAG,KAAKC,SAAS,EAAE;QACrBN,YAAY,CAACI,CAAC,CAAC,GAAGC,GAAG;MACvB,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF;IACA,OAAOL,YAAY;EACrB,CAAC,CAAC;AACJ;AACA,eAAeb,eAAe,CAAC;EAC7BoB,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE,CAAC,SAAS,EAAE,gBAAgB,EAAE,eAAe,EAAE,iBAAiB,EAAE,QAAQ,EAAE,kBAAkB,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,iBAAiB,CAAC;EACvNC,KAAK,EAAE,CAAC,QAAQ,CAAC;EACjBC,KAAKA,CAACF,KAAK,EAAEG,IAAI,EAAE;IACjB,IAAI;MACFC,KAAK;MACLC,KAAK;MACLC;IACF,CAAC,GAAGH,IAAI;IACR,MAAMI,YAAY,GAAGtB,cAAc,CAAC,CAAC;IACrC,MAAMuB,wBAAwB,GAAG/B,QAAQ,CAAC,MAAM8B,YAAY,CAACE,QAAQ,IAAI,CAACT,KAAK,CAACU,SAAS,GAAG,CAAC,GAAGH,YAAY,CAACI,aAAa,CAAC;IAC3H,MAAMC,SAAS,GAAG9B,GAAG,CAAC,CAAC;IACvB,MAAM+B,OAAO,GAAGC,CAAC,IAAI;MACnB,MAAM;QACJC,aAAa;QACbC;MACF,CAAC,GAAGF,CAAC;MACL,IAAIE,MAAM,EAAE;QACVV,IAAI,CAAC,QAAQ,EAAE;UACbS,aAAa;UACbE,UAAU,EAAEF,aAAa,CAACE,UAAU,GAAGD;QACzC,CAAC,CAAC;QACFF,CAAC,CAACI,cAAc,CAAC,CAAC;MACpB;IACF,CAAC;IACD,MAAMC,UAAU,GAAGrC,GAAG,CAAC,CAAC;IACxBD,SAAS,CAAC,MAAM;MACdF,QAAQ,CAAC,MAAM;QACbwC,UAAU,CAAC1B,KAAK,GAAGN,oBAAoB,CAACyB,SAAS,CAACnB,KAAK,EAAE,OAAO,EAAEoB,OAAO,CAAC;MAC5E,CAAC,CAAC;IACJ,CAAC,CAAC;IACFjC,eAAe,CAAC,MAAM;MACpB,IAAIwC,EAAE;MACN,CAACA,EAAE,GAAGD,UAAU,CAAC1B,KAAK,MAAM,IAAI,IAAI2B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,MAAM,CAAC,CAAC;IAC1E,CAAC,CAAC;IACF;IACA,MAAMC,0BAA0B,GAAG7C,QAAQ,CAAC,MAAMuB,KAAK,CAACuB,cAAc,CAACC,KAAK,CAACC,MAAM,IAAIA,MAAM,CAACC,KAAK,IAAID,MAAM,CAACC,KAAK,KAAK,CAAC,IAAID,MAAM,CAACC,KAAK,KAAK,KAAK,CAAC,CAAC;IACrJ,MAAMC,oBAAoB,GAAG7C,GAAG,CAAC,EAAE,CAAC;IACpC,MAAM8C,2BAA2B,GAAG9C,GAAG,CAAC,EAAE,CAAC;IAC3CE,WAAW,CAAC,MAAM;MAChB;MACA,MAAM6C,UAAU,GAAG7B,KAAK,CAACuB,cAAc,CAACvB,KAAK,CAACuB,cAAc,CAACO,MAAM,GAAG,CAAC,CAAC;MACxE,MAAMC,eAAe,GAAG;QACtBC,KAAK,EAAEH,UAAU,GAAGA,UAAU,CAACG,KAAK,GAAG,IAAI;QAC3CC,SAAS,EAAE,IAAI;QACfC,gBAAgB,EAAEA,CAAA,MAAO;UACvBC,KAAK,EAAG,GAAE5B,YAAY,CAAC6B,SAAU;QACnC,CAAC;MACH,CAAC;MACDT,oBAAoB,CAAClC,KAAK,GAAGe,wBAAwB,CAACf,KAAK,GAAG,CAAC,GAAGO,KAAK,CAACqC,OAAO,EAAEN,eAAe,CAAC,GAAG/B,KAAK,CAACqC,OAAO;MACjHT,2BAA2B,CAACnC,KAAK,GAAGe,wBAAwB,CAACf,KAAK,GAAG,CAAC,GAAGO,KAAK,CAACuB,cAAc,EAAEQ,eAAe,CAAC,GAAG/B,KAAK,CAACuB,cAAc;IACxI,CAAC,CAAC;IACF;IACA,MAAMe,mBAAmB,GAAG7D,QAAQ,CAAC,MAAM;MACzC,MAAM;QACJ8D,aAAa;QACbC;MACF,CAAC,GAAGxC,KAAK;MACT,MAAM;QACJyC,KAAK;QACLC;MACF,CAAC,GAAGH,aAAa;MACjB,OAAOlE,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEkE,aAAa,CAAC,EAAE;QAC3CG,IAAI,EAAEF,SAAS,KAAK,KAAK,GAAG,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACjB,KAAK,IAAIA,KAAK,GAAGlB,wBAAwB,CAACf,KAAK,CAAC,EAAE,CAAC,CAAC,GAAGiD,IAAI;QACpGD,KAAK,EAAED,SAAS,KAAK,KAAK,GAAGC,KAAK,GAAG,CAAC,GAAGA,KAAK,CAACE,GAAG,CAACjB,KAAK,IAAIA,KAAK,GAAGlB,wBAAwB,CAACf,KAAK,CAAC,EAAE,CAAC,CAAC;QACvGgB,QAAQ,EAAEF,YAAY,CAACE;MACzB,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,MAAMmC,iBAAiB,GAAGxD,cAAc,CAACL,KAAK,CAACiB,KAAK,EAAE,WAAW,CAAC,EAAEjB,KAAK,CAACiB,KAAK,EAAE,YAAY,CAAC,CAAC;IAC/F,OAAO,MAAM;MACX,IAAIoB,EAAE;MACN,MAAM;QACJyB,MAAM;QACNnD,UAAU;QACVoD,eAAe;QACfC,kBAAkB;QAClBC,eAAe;QACfC;MACF,CAAC,GAAGjD,KAAK;MACT,MAAM;QACJS;MACF,CAAC,GAAGF,YAAY;MAChB,OAAOhC,YAAY,CAAC,KAAK,EAAE;QACzB,OAAO,EAAEF,QAAQ,CAAC;UAChB6E,QAAQ,EAAE;QACZ,CAAC,EAAEzC,QAAQ,GAAG;UACZ0C,GAAG,EAAG,GAAEL,eAAgB,IAAG;UAC3BM,MAAM,EAAG,GAAEL,kBAAmB;QAChC,CAAC,GAAG,CAAC,CAAC,CAAC;QACP,KAAK,EAAEnC,SAAS;QAChB,OAAO,EAAE1B,UAAU,CAACkB,KAAK,CAAC+B,KAAK,EAAE;UAC/B,CAACa,eAAe,GAAG,CAAC,CAACA;QACvB,CAAC;MACH,CAAC,EAAE,CAACzE,YAAY,CAAC,OAAO,EAAE;QACxB,OAAO,EAAE;UACP8E,WAAW,EAAE,OAAO;UACpBC,UAAU,EAAET,MAAM,IAAID,iBAAiB,CAACnD,KAAK,GAAG,IAAI,GAAG;QACzD;MACF,CAAC,EAAE,CAAC,CAAC,CAACoD,MAAM,IAAI,CAACI,gBAAgB,IAAI3B,0BAA0B,CAAC7B,KAAK,KAAKlB,YAAY,CAACC,QAAQ,EAAE;QAC/F,WAAW,EAAEoE,iBAAiB,CAACnD,KAAK,GAAG,CAAC,GAAGmD,iBAAiB,CAACnD,KAAK,EAAEe,wBAAwB,CAACf,KAAK,CAAC,GAAG,EAAE;QACxG,YAAY,EAAEC,UAAU,GAAG,CAAC;QAC5B,SAAS,EAAEkC,2BAA2B,CAACnC;MACzC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC2B,EAAE,GAAGf,KAAK,CAACkD,OAAO,MAAM,IAAI,IAAInC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACoC,IAAI,CAACnD,KAAK,EAAEhC,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2B,KAAK,CAAC,EAAE;QAC/GuC,aAAa,EAAED,mBAAmB,CAAC7C,KAAK;QACxC4C,OAAO,EAAEV,oBAAoB,CAAClC,KAAK;QACnC8B,cAAc,EAAEK,2BAA2B,CAACnC;MAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}