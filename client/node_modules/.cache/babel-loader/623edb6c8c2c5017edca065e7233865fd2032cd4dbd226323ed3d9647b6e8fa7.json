{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { useInjectCascader } from '../context';\nexport default function Checkbox(_ref) {\n  let {\n    prefixCls,\n    checked,\n    halfChecked,\n    disabled,\n    onClick\n  } = _ref;\n  const {\n    customSlots,\n    checkable\n  } = useInjectCascader();\n  const mergedCheckable = checkable.value !== false ? customSlots.value.checkable : checkable.value;\n  const customCheckbox = typeof mergedCheckable === 'function' ? mergedCheckable() : typeof mergedCheckable === 'boolean' ? null : mergedCheckable;\n  return _createVNode(\"span\", {\n    \"class\": {\n      [prefixCls]: true,\n      [`${prefixCls}-checked`]: checked,\n      [`${prefixCls}-indeterminate`]: !checked && halfChecked,\n      [`${prefixCls}-disabled`]: disabled\n    },\n    \"onClick\": onClick\n  }, [customCheckbox]);\n}\nCheckbox.props = ['prefixCls', 'checked', 'halfChecked', 'disabled', 'onClick'];\nCheckbox.displayName = 'Checkbox';\nCheckbox.inheritAttrs = false;","map":{"version":3,"names":["createVNode","_createVNode","useInjectCascader","Checkbox","_ref","prefixCls","checked","halfChecked","disabled","onClick","customSlots","checkable","mergedCheckable","value","customCheckbox","props","displayName","inheritAttrs"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-cascader/OptionList/Checkbox.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { useInjectCascader } from '../context';\nexport default function Checkbox(_ref) {\n  let {\n    prefixCls,\n    checked,\n    halfChecked,\n    disabled,\n    onClick\n  } = _ref;\n  const {\n    customSlots,\n    checkable\n  } = useInjectCascader();\n  const mergedCheckable = checkable.value !== false ? customSlots.value.checkable : checkable.value;\n  const customCheckbox = typeof mergedCheckable === 'function' ? mergedCheckable() : typeof mergedCheckable === 'boolean' ? null : mergedCheckable;\n  return _createVNode(\"span\", {\n    \"class\": {\n      [prefixCls]: true,\n      [`${prefixCls}-checked`]: checked,\n      [`${prefixCls}-indeterminate`]: !checked && halfChecked,\n      [`${prefixCls}-disabled`]: disabled\n    },\n    \"onClick\": onClick\n  }, [customCheckbox]);\n}\nCheckbox.props = ['prefixCls', 'checked', 'halfChecked', 'disabled', 'onClick'];\nCheckbox.displayName = 'Checkbox';\nCheckbox.inheritAttrs = false;"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,eAAe,SAASC,QAAQA,CAACC,IAAI,EAAE;EACrC,IAAI;IACFC,SAAS;IACTC,OAAO;IACPC,WAAW;IACXC,QAAQ;IACRC;EACF,CAAC,GAAGL,IAAI;EACR,MAAM;IACJM,WAAW;IACXC;EACF,CAAC,GAAGT,iBAAiB,CAAC,CAAC;EACvB,MAAMU,eAAe,GAAGD,SAAS,CAACE,KAAK,KAAK,KAAK,GAAGH,WAAW,CAACG,KAAK,CAACF,SAAS,GAAGA,SAAS,CAACE,KAAK;EACjG,MAAMC,cAAc,GAAG,OAAOF,eAAe,KAAK,UAAU,GAAGA,eAAe,CAAC,CAAC,GAAG,OAAOA,eAAe,KAAK,SAAS,GAAG,IAAI,GAAGA,eAAe;EAChJ,OAAOX,YAAY,CAAC,MAAM,EAAE;IAC1B,OAAO,EAAE;MACP,CAACI,SAAS,GAAG,IAAI;MACjB,CAAE,GAAEA,SAAU,UAAS,GAAGC,OAAO;MACjC,CAAE,GAAED,SAAU,gBAAe,GAAG,CAACC,OAAO,IAAIC,WAAW;MACvD,CAAE,GAAEF,SAAU,WAAU,GAAGG;IAC7B,CAAC;IACD,SAAS,EAAEC;EACb,CAAC,EAAE,CAACK,cAAc,CAAC,CAAC;AACtB;AACAX,QAAQ,CAACY,KAAK,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,UAAU,EAAE,SAAS,CAAC;AAC/EZ,QAAQ,CAACa,WAAW,GAAG,UAAU;AACjCb,QAAQ,CAACc,YAAY,GAAG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}