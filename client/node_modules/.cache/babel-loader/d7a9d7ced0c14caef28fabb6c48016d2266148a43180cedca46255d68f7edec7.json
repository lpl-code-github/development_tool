{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { toArray } from '../utils/commonUtil';\nimport { injectPropsWithOption } from '../utils/valueUtil';\nimport { computed } from 'vue';\nfunction includes(test, search) {\n  return toArray(test).join('').toUpperCase().includes(search);\n}\nexport default ((options, fieldNames, searchValue, filterOption, optionFilterProp) => computed(() => {\n  const searchValueVal = searchValue.value;\n  const optionFilterPropValue = optionFilterProp === null || optionFilterProp === void 0 ? void 0 : optionFilterProp.value;\n  const filterOptionValue = filterOption === null || filterOption === void 0 ? void 0 : filterOption.value;\n  if (!searchValueVal || filterOptionValue === false) {\n    return options.value;\n  }\n  const {\n    options: fieldOptions,\n    label: fieldLabel,\n    value: fieldValue\n  } = fieldNames.value;\n  const filteredOptions = [];\n  const customizeFilter = typeof filterOptionValue === 'function';\n  const upperSearch = searchValueVal.toUpperCase();\n  const filterFunc = customizeFilter ? filterOptionValue : (_, option) => {\n    // Use provided `optionFilterProp`\n    if (optionFilterPropValue) {\n      return includes(option[optionFilterPropValue], upperSearch);\n    }\n    // Auto select `label` or `value` by option type\n    if (option[fieldOptions]) {\n      // hack `fieldLabel` since `OptionGroup` children is not `label`\n      return includes(option[fieldLabel !== 'children' ? fieldLabel : 'label'], upperSearch);\n    }\n    return includes(option[fieldValue], upperSearch);\n  };\n  const wrapOption = customizeFilter ? opt => injectPropsWithOption(opt) : opt => opt;\n  options.value.forEach(item => {\n    // Group should check child options\n    if (item[fieldOptions]) {\n      // Check group first\n      const matchGroup = filterFunc(searchValueVal, wrapOption(item));\n      if (matchGroup) {\n        filteredOptions.push(item);\n      } else {\n        // Check option\n        const subOptions = item[fieldOptions].filter(subItem => filterFunc(searchValueVal, wrapOption(subItem)));\n        if (subOptions.length) {\n          filteredOptions.push(_extends(_extends({}, item), {\n            [fieldOptions]: subOptions\n          }));\n        }\n      }\n      return;\n    }\n    if (filterFunc(searchValueVal, wrapOption(item))) {\n      filteredOptions.push(item);\n    }\n  });\n  return filteredOptions;\n}));","map":{"version":3,"names":["_extends","toArray","injectPropsWithOption","computed","includes","test","search","join","toUpperCase","options","fieldNames","searchValue","filterOption","optionFilterProp","searchValueVal","value","optionFilterPropValue","filterOptionValue","fieldOptions","label","fieldLabel","fieldValue","filteredOptions","customizeFilter","upperSearch","filterFunc","_","option","wrapOption","opt","forEach","item","matchGroup","push","subOptions","filter","subItem","length"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-select/hooks/useFilterOptions.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { toArray } from '../utils/commonUtil';\nimport { injectPropsWithOption } from '../utils/valueUtil';\nimport { computed } from 'vue';\nfunction includes(test, search) {\n  return toArray(test).join('').toUpperCase().includes(search);\n}\nexport default ((options, fieldNames, searchValue, filterOption, optionFilterProp) => computed(() => {\n  const searchValueVal = searchValue.value;\n  const optionFilterPropValue = optionFilterProp === null || optionFilterProp === void 0 ? void 0 : optionFilterProp.value;\n  const filterOptionValue = filterOption === null || filterOption === void 0 ? void 0 : filterOption.value;\n  if (!searchValueVal || filterOptionValue === false) {\n    return options.value;\n  }\n  const {\n    options: fieldOptions,\n    label: fieldLabel,\n    value: fieldValue\n  } = fieldNames.value;\n  const filteredOptions = [];\n  const customizeFilter = typeof filterOptionValue === 'function';\n  const upperSearch = searchValueVal.toUpperCase();\n  const filterFunc = customizeFilter ? filterOptionValue : (_, option) => {\n    // Use provided `optionFilterProp`\n    if (optionFilterPropValue) {\n      return includes(option[optionFilterPropValue], upperSearch);\n    }\n    // Auto select `label` or `value` by option type\n    if (option[fieldOptions]) {\n      // hack `fieldLabel` since `OptionGroup` children is not `label`\n      return includes(option[fieldLabel !== 'children' ? fieldLabel : 'label'], upperSearch);\n    }\n    return includes(option[fieldValue], upperSearch);\n  };\n  const wrapOption = customizeFilter ? opt => injectPropsWithOption(opt) : opt => opt;\n  options.value.forEach(item => {\n    // Group should check child options\n    if (item[fieldOptions]) {\n      // Check group first\n      const matchGroup = filterFunc(searchValueVal, wrapOption(item));\n      if (matchGroup) {\n        filteredOptions.push(item);\n      } else {\n        // Check option\n        const subOptions = item[fieldOptions].filter(subItem => filterFunc(searchValueVal, wrapOption(subItem)));\n        if (subOptions.length) {\n          filteredOptions.push(_extends(_extends({}, item), {\n            [fieldOptions]: subOptions\n          }));\n        }\n      }\n      return;\n    }\n    if (filterFunc(searchValueVal, wrapOption(item))) {\n      filteredOptions.push(item);\n    }\n  });\n  return filteredOptions;\n}));"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}