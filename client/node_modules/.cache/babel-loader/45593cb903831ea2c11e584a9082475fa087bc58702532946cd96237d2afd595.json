{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { shallowRef, watch, computed } from 'vue';\nimport HookNotification, { getUuid } from './HookNotification';\nconst defaultGetContainer = () => document.body;\nlet uniqueKey = 0;\nfunction mergeConfig() {\n  const clone = {};\n  for (var _len = arguments.length, objList = new Array(_len), _key = 0; _key < _len; _key++) {\n    objList[_key] = arguments[_key];\n  }\n  objList.forEach(obj => {\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        const val = obj[key];\n        if (val !== undefined) {\n          clone[key] = val;\n        }\n      });\n    }\n  });\n  return clone;\n}\nexport default function useNotification() {\n  let rootConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n      getContainer = defaultGetContainer,\n      motion,\n      prefixCls,\n      maxCount,\n      getClassName,\n      getStyles,\n      onAllRemoved\n    } = rootConfig,\n    shareConfig = __rest(rootConfig, [\"getContainer\", \"motion\", \"prefixCls\", \"maxCount\", \"getClassName\", \"getStyles\", \"onAllRemoved\"]);\n  const notices = shallowRef([]);\n  const notificationsRef = shallowRef();\n  const add = (originNotice, holderCallback) => {\n    const key = originNotice.key || getUuid();\n    const notice = _extends(_extends({}, originNotice), {\n      key\n    });\n    const noticeIndex = notices.value.map(v => v.notice.key).indexOf(key);\n    const updatedNotices = notices.value.concat();\n    if (noticeIndex !== -1) {\n      updatedNotices.splice(noticeIndex, 1, {\n        notice,\n        holderCallback\n      });\n    } else {\n      if (maxCount && notices.value.length >= maxCount) {\n        notice.key = updatedNotices[0].notice.key;\n        notice.updateMark = getUuid();\n        notice.userPassKey = key;\n        updatedNotices.shift();\n      }\n      updatedNotices.push({\n        notice,\n        holderCallback\n      });\n    }\n    notices.value = updatedNotices;\n  };\n  const removeNotice = removeKey => {\n    notices.value = notices.value.filter(_ref => {\n      let {\n        notice: {\n          key,\n          userPassKey\n        }\n      } = _ref;\n      const mergedKey = userPassKey || key;\n      return mergedKey !== removeKey;\n    });\n  };\n  const destroy = () => {\n    notices.value = [];\n  };\n  const contextHolder = computed(() => _createVNode(HookNotification, {\n    \"ref\": notificationsRef,\n    \"prefixCls\": prefixCls,\n    \"maxCount\": maxCount,\n    \"notices\": notices.value,\n    \"remove\": removeNotice,\n    \"getClassName\": getClassName,\n    \"getStyles\": getStyles,\n    \"animation\": motion,\n    \"hashId\": rootConfig.hashId,\n    \"onAllRemoved\": onAllRemoved,\n    \"getContainer\": getContainer\n  }, null));\n  const taskQueue = shallowRef([]);\n  // ========================= Refs =========================\n  const api = {\n    open: config => {\n      const mergedConfig = mergeConfig(shareConfig, config);\n      //@ts-ignore\n      if (mergedConfig.key === null || mergedConfig.key === undefined) {\n        //@ts-ignore\n        mergedConfig.key = `vc-notification-${uniqueKey}`;\n        uniqueKey += 1;\n      }\n      taskQueue.value = [...taskQueue.value, {\n        type: 'open',\n        config: mergedConfig\n      }];\n    },\n    close: key => {\n      taskQueue.value = [...taskQueue.value, {\n        type: 'close',\n        key\n      }];\n    },\n    destroy: () => {\n      taskQueue.value = [...taskQueue.value, {\n        type: 'destroy'\n      }];\n    }\n  };\n  // ======================== Effect ========================\n  watch(taskQueue, () => {\n    // Flush task when node ready\n    if (taskQueue.value.length) {\n      taskQueue.value.forEach(task => {\n        switch (task.type) {\n          case 'open':\n            // @ts-ignore\n            add(task.config);\n            break;\n          case 'close':\n            removeNotice(task.key);\n            break;\n          case 'destroy':\n            destroy();\n            break;\n        }\n      });\n      taskQueue.value = [];\n    }\n  });\n  // ======================== Return ========================\n  return [api, () => contextHolder.value];\n}","map":{"version":3,"names":["_extends","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","shallowRef","watch","computed","HookNotification","getUuid","defaultGetContainer","document","body","uniqueKey","mergeConfig","clone","_len","arguments","objList","Array","_key","forEach","obj","keys","key","val","undefined","useNotification","rootConfig","getContainer","motion","prefixCls","maxCount","getClassName","getStyles","onAllRemoved","shareConfig","notices","notificationsRef","add","originNotice","holderCallback","notice","noticeIndex","value","map","v","updatedNotices","concat","splice","updateMark","userPassKey","shift","push","removeNotice","removeKey","filter","_ref","mergedKey","destroy","contextHolder","hashId","taskQueue","api","open","config","mergedConfig","type","close","task"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-notification/useNotification.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { shallowRef, watch, computed } from 'vue';\nimport HookNotification, { getUuid } from './HookNotification';\nconst defaultGetContainer = () => document.body;\nlet uniqueKey = 0;\nfunction mergeConfig() {\n  const clone = {};\n  for (var _len = arguments.length, objList = new Array(_len), _key = 0; _key < _len; _key++) {\n    objList[_key] = arguments[_key];\n  }\n  objList.forEach(obj => {\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        const val = obj[key];\n        if (val !== undefined) {\n          clone[key] = val;\n        }\n      });\n    }\n  });\n  return clone;\n}\nexport default function useNotification() {\n  let rootConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n      getContainer = defaultGetContainer,\n      motion,\n      prefixCls,\n      maxCount,\n      getClassName,\n      getStyles,\n      onAllRemoved\n    } = rootConfig,\n    shareConfig = __rest(rootConfig, [\"getContainer\", \"motion\", \"prefixCls\", \"maxCount\", \"getClassName\", \"getStyles\", \"onAllRemoved\"]);\n  const notices = shallowRef([]);\n  const notificationsRef = shallowRef();\n  const add = (originNotice, holderCallback) => {\n    const key = originNotice.key || getUuid();\n    const notice = _extends(_extends({}, originNotice), {\n      key\n    });\n    const noticeIndex = notices.value.map(v => v.notice.key).indexOf(key);\n    const updatedNotices = notices.value.concat();\n    if (noticeIndex !== -1) {\n      updatedNotices.splice(noticeIndex, 1, {\n        notice,\n        holderCallback\n      });\n    } else {\n      if (maxCount && notices.value.length >= maxCount) {\n        notice.key = updatedNotices[0].notice.key;\n        notice.updateMark = getUuid();\n        notice.userPassKey = key;\n        updatedNotices.shift();\n      }\n      updatedNotices.push({\n        notice,\n        holderCallback\n      });\n    }\n    notices.value = updatedNotices;\n  };\n  const removeNotice = removeKey => {\n    notices.value = notices.value.filter(_ref => {\n      let {\n        notice: {\n          key,\n          userPassKey\n        }\n      } = _ref;\n      const mergedKey = userPassKey || key;\n      return mergedKey !== removeKey;\n    });\n  };\n  const destroy = () => {\n    notices.value = [];\n  };\n  const contextHolder = computed(() => _createVNode(HookNotification, {\n    \"ref\": notificationsRef,\n    \"prefixCls\": prefixCls,\n    \"maxCount\": maxCount,\n    \"notices\": notices.value,\n    \"remove\": removeNotice,\n    \"getClassName\": getClassName,\n    \"getStyles\": getStyles,\n    \"animation\": motion,\n    \"hashId\": rootConfig.hashId,\n    \"onAllRemoved\": onAllRemoved,\n    \"getContainer\": getContainer\n  }, null));\n  const taskQueue = shallowRef([]);\n  // ========================= Refs =========================\n  const api = {\n    open: config => {\n      const mergedConfig = mergeConfig(shareConfig, config);\n      //@ts-ignore\n      if (mergedConfig.key === null || mergedConfig.key === undefined) {\n        //@ts-ignore\n        mergedConfig.key = `vc-notification-${uniqueKey}`;\n        uniqueKey += 1;\n      }\n      taskQueue.value = [...taskQueue.value, {\n        type: 'open',\n        config: mergedConfig\n      }];\n    },\n    close: key => {\n      taskQueue.value = [...taskQueue.value, {\n        type: 'close',\n        key\n      }];\n    },\n    destroy: () => {\n      taskQueue.value = [...taskQueue.value, {\n        type: 'destroy'\n      }];\n    }\n  };\n  // ======================== Effect ========================\n  watch(taskQueue, () => {\n    // Flush task when node ready\n    if (taskQueue.value.length) {\n      taskQueue.value.forEach(task => {\n        switch (task.type) {\n          case 'open':\n            // @ts-ignore\n            add(task.config);\n            break;\n          case 'close':\n            removeNotice(task.key);\n            break;\n          case 'destroy':\n            destroy();\n            break;\n        }\n      });\n      taskQueue.value = [];\n    }\n  });\n  // ======================== Return ========================\n  return [api, () => contextHolder.value];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}