{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MyHeader from \"@/components/common/MyHeader\";\nexport default {\n  name: \"App\",\n  components: {\n    MyHeader\n  },\n  data() {\n    return {\n      collapsed: false,\n      defaultSelectedKeys: [],\n      breadcrumb: [],\n      selectedKeys: [],\n      simpleSidebarData: [{\n        key: \"1\",\n        icon: \"schedule\",\n        text: \"首页\",\n        link: '/index'\n      }, {\n        key: \"2\",\n        icon: \"code\",\n        text: \"脚本\",\n        link: '/script'\n      }, {\n        key: \"3\",\n        icon: \"bug\",\n        text: \"调试\",\n        link: '/debug'\n      }],\n      subSidebarData: [{\n        key: \"4\",\n        icon: \"branches\",\n        text: \"测试\",\n        children: [{\n          key: \"4-1\",\n          text: \"数据库备份\",\n          link: \"/backup\"\n        }, {\n          key: \"4-2\",\n          text: \"Newman\",\n          link: \"/newman\"\n        }]\n      }, {\n        key: \"5\",\n        icon: \"codepen\",\n        text: \"生成器\",\n        children: [{\n          key: \"5-1\",\n          text: \"代码生成器\",\n          link: \"/code-generator\"\n        }, {\n          key: \"5-2\",\n          text: \"Slate生成器\",\n          link: \"/slate-generator\"\n        }, {\n          key: \"5-3\",\n          text: \"PostmanTest生成器\",\n          link: \"/postman-test-generator\"\n        }, {\n          key: \"5-4\",\n          text: \"Ts Interface生成器\",\n          link: \"/ts-interface-generator\"\n        }]\n      }],\n      defaultOpenKeys: [],\n      routeName: \"\"\n    };\n  },\n  mounted() {},\n  created() {\n    if (this.defaultSelectedKeys === null) {\n      this.defaultSelectedKeys = ['1'];\n      this.selectedKeys = defaultSelectedKeys;\n      this.breadcrumb = [this.simpleSidebarData[0].text];\n    } else {\n      this.menuChecked();\n    }\n  },\n  methods: {\n    menuChecked() {\n      var path = sessionStorage.getItem('development-tool-path');\n      this.defaultSelectedKeys = this.findKeyByLink(path);\n      this.selectedKeys = this.defaultSelectedKeys;\n      var tempBreadcrumb = [];\n      this.selectedKeys.forEach(item => {\n        tempBreadcrumb = this.findTextByKey(item);\n      });\n      this.defaultOpenKeys = [this.selectedKeys[0]];\n      this.breadcrumb = tempBreadcrumb;\n    },\n    findTextByKey(key) {\n      let result = [];\n      // 在simpleSidebarData中查找\n      for (let item of this.simpleSidebarData) {\n        if (item.key === key) {\n          result.push(item.text);\n          break;\n        }\n      }\n      // 在subSidebarData中查找\n      for (let item of this.subSidebarData) {\n        if (item.key === key) {\n          result.push(item.text);\n          break;\n        }\n        if (item.children && item.children.length > 0) {\n          for (let child of item.children) {\n            if (child.key === key) {\n              result.push(item.text);\n              result.push(child.text);\n              break;\n            }\n          }\n        }\n      }\n      return result;\n    },\n    findKeyByLink(link) {\n      let result = [];\n      // 在simpleSidebarData中查找\n      for (let item of this.simpleSidebarData) {\n        if (item.link === link) {\n          result.push(item.key);\n          break;\n        }\n      }\n      // 在subSidebarData中查找\n      for (let item of this.subSidebarData) {\n        if (item.link === link) {\n          result.push(item.key);\n          break;\n        }\n        if (item.children && item.children.length > 0) {\n          for (let child of item.children) {\n            if (child.link === link) {\n              result.push(item.key);\n              result.push(child.key);\n              break;\n            }\n          }\n        }\n      }\n      return result;\n    }\n  },\n  watch: {\n    $route: {\n      handler: function (newVal, oldVal) {\n        const path = newVal.path;\n        sessionStorage.setItem('development-tool-path', path);\n        this.menuChecked();\n      },\n      // 深度观察监听\n      deep: true\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}