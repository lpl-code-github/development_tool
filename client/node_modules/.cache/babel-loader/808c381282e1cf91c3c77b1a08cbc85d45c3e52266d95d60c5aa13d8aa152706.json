{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Keyframes } from '../../_util/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genPresetColor, resetComponent } from '../../style';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`${componentCls}-status-${colorKey}`]: {\n        background: darkColor\n      }\n    };\n  });\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref2) => {\n    let {\n      darkColor\n    } = _ref2;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [componentCls]: _extends(_extends({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: token.motionDurationMid,\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: _extends(_extends({\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          position: 'relative',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        }\n      }, statusPreset), {\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }),\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: _extends(_extends(_extends(_extends({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      height: badgeFontHeight,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});","map":{"version":3,"names":["_extends","Keyframes","genComponentStyleHook","mergeToken","genPresetColor","resetComponent","antStatusProcessing","transform","opacity","antZoomBadgeIn","antZoomBadgeOut","antNoWrapperZoomBadgeIn","antNoWrapperZoomBadgeOut","antBadgeLoadingCircle","transformOrigin","genSharedBadgeStyle","token","componentCls","iconCls","antCls","badgeFontHeight","badgeShadowSize","badgeHeightSm","motionDurationSlow","badgeStatusSize","marginXS","badgeRibbonOffset","numberPrefixCls","ribbonPrefixCls","ribbonWrapperPrefixCls","statusPreset","colorKey","_ref","darkColor","background","statusRibbonPreset","_ref2","color","position","display","width","lineHeight","zIndex","badgeZIndex","minWidth","badgeHeight","height","badgeTextColor","fontWeight","badgeFontWeight","fontSize","badgeFontSize","whiteSpace","textAlign","badgeColor","borderRadius","boxShadow","badgeShadowColor","transition","motionDurationMid","a","badgeColorHover","badgeFontSizeSm","padding","paddingXS","badgeDotSize","top","insetInlineEnd","animationName","animationDuration","animationIterationCount","animationTimingFunction","verticalAlign","backgroundColor","colorSuccess","colorPrimary","insetInlineStart","borderWidth","borderStyle","borderColor","badgeProcessingDuration","content","colorTextPlaceholder","colorError","colorWarning","marginInlineStart","colorText","motionEaseOutBack","animationFillMode","overflow","WebkitTransformStyle","WebkitBackfaceVisibility","margin","direction","borderRadiusSM","colorTextLightSolid","border","badgeRibbonCornerTransform","filter","badgeRibbonCornerFilter","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","borderEndStartRadius","borderInlineStartColor","fontSizeSM","lineWidth","colorBorderBg","Math","round","colorBgContainer","colorErrorHover","badgeToken"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/badge/style/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Keyframes } from '../../_util/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genPresetColor, resetComponent } from '../../style';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`${componentCls}-status-${colorKey}`]: {\n        background: darkColor\n      }\n    };\n  });\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref2) => {\n    let {\n      darkColor\n    } = _ref2;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [componentCls]: _extends(_extends({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: token.motionDurationMid,\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: _extends(_extends({\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          position: 'relative',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        }\n      }, statusPreset), {\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }),\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: _extends(_extends(_extends(_extends({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      height: badgeFontHeight,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}