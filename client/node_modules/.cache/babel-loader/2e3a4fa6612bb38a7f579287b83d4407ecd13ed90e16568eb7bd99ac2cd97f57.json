{"ast":null,"code":"export default {\n  name: \"Statistics\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      echartsStyles: {\n        width: '100%',\n        height: \"100%\"\n      },\n      myChart: null,\n      visible: false,\n      apiInfo: null\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        if (newVal === true) {\n          this.getApiInfo();\n        } else {\n          this.visible = newVal;\n        }\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n    // this.getApiInfo()\n  },\n\n  methods: {\n    afterVisibleChange(val) {\n      console.log('visible', val);\n    },\n    onClose() {\n      this.$emit('updateDrawerStatus', false);\n    },\n    async getApiInfo() {\n      await this.$request.getR1Api().then(res => {\n        if (res.status !== 200) {\n          this.$emit('updateDrawerStatus', false);\n        } else {\n          this.visible = true;\n          this.apiInfo = res.data.data;\n          this.echarts();\n        }\n      });\n    },\n    echarts() {\n      if (this.myChart != null && this.myChart !== \"\" && this.myChart !== undefined) {\n        this.myChart.dispose();\n      }\n      this.myChart = this.$echarts.init(document.getElementById('main'));\n      this.myChart.setOption({\n        tooltip: {\n          trigger: 'item'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          // adjust the start angle\n          startAngle: 180,\n          label: {\n            show: true,\n            formatter(param) {\n              // correct the percentage\n              return param.name + ' (' + param.percent * 2 + '%)';\n            }\n          },\n          data: [{\n            value: 1048,\n            name: 'Search Engine'\n          }, {\n            value: 735,\n            name: 'Direct'\n          }, {\n            value: 580,\n            name: 'Email'\n          }, {\n            value: 484,\n            name: 'Union Ads'\n          }, {\n            value: 300,\n            name: 'Video Ads'\n          }]\n        }]\n      });\n\n      // 让图表跟随屏幕自动的去适应\n      window.addEventListener('resize', () => {\n        this.myChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","openFlag","type","Boolean","required","data","echartsStyles","width","height","myChart","visible","apiInfo","watch","handler","newVal","oldVal","getApiInfo","deep","mounted","methods","afterVisibleChange","val","console","log","onClose","$emit","$request","getR1Api","then","res","status","echarts","undefined","dispose","$echarts","init","document","getElementById","setOption","tooltip","trigger","series","radius","startAngle","label","show","formatter","param","percent","value","window","addEventListener","resize"],"sources":["src/components/preview/Statistics.vue"],"sourcesContent":["<template>\n    <div>\n      <a-drawer\n          title=\"R1项目概览\"\n          placement=\"right\"\n          :closable=\"false\"\n          :visible=\"visible\"\n          :after-visible-change=\"afterVisibleChange\"\n          @close=\"onClose\"\n      >\n        <div class=\"api-info\">\n          <a-statistic st title=\"Api总数\" suffix=\"个\" :value=\"apiInfo && apiInfo.sum.total_num\" style=\"width: 20%\" />\n          <div style=\"width: 80%;height: 100%\">\n            <div id=\"main\" :style=\"echartsStyles\"></div>\n          </div>\n        </div>\n      </a-drawer>\n    </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"Statistics\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n  },\n  data(){\n    return{\n      echartsStyles: {\n        width: '100%',\n        height: \"100%\"\n      },\n      myChart: null,\n      visible: false,\n      apiInfo: null,\n      \n    }\n  },\n  watch:{\n    openFlag:{\n      handler: function (newVal, oldVal) {\n        if (newVal === true){\n          this.getApiInfo()\n        }else {\n          this.visible = newVal\n        }\n\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag\n    // this.getApiInfo()\n  },\n  methods:{\n    afterVisibleChange(val) {\n      console.log('visible', val);\n    },\n    onClose() {\n      this.$emit('updateDrawerStatus', false)\n    },\n    async getApiInfo() {\n\n       await this.$request.getR1Api().then(res => {\n         if (res.status !== 200) {\n           this.$emit('updateDrawerStatus', false)\n         }else {\n           this.visible = true\n           this.apiInfo = res.data.data\n           this.echarts()\n         }\n       })\n     },\n    echarts() {\n      if (this.myChart != null && this.myChart !== \"\" && this.myChart !== undefined) {\n        this.myChart.dispose();\n      }\n      this.myChart = this.$echarts.init(document.getElementById('main'));\n\n      this.myChart.setOption({\n        tooltip: {\n          trigger: 'item'\n        },\n        series: [\n          {\n            name: 'Access From',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            // adjust the start angle\n            startAngle: 180,\n            label: {\n              show: true,\n              formatter(param) {\n                // correct the percentage\n                return param.name + ' (' + param.percent * 2 + '%)';\n              }\n            },\n            data: [\n              { value: 1048, name: 'Search Engine' },\n              { value: 735, name: 'Direct' },\n              { value: 580, name: 'Email' },\n              { value: 484, name: 'Union Ads' },\n              { value: 300, name: 'Video Ads' }\n            ]\n          }\n        ]\n      })\n\n      // 让图表跟随屏幕自动的去适应\n      window.addEventListener('resize', () => {\n        this.myChart.resize()\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n.statistics{\n  /*width: 100px!important;*/\n}\n/deep/ .ant-drawer-content-wrapper{\n  width: 600px!important;\n  right: 0!important;\n}\n.api-info{\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  height: 200px;\n}\n</style>\n"],"mappings":"AAsBA;EACAA,IAAA;EACAC,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,aAAA;QACAC,KAAA;QACAC,MAAA;MACA;MACAC,OAAA;MACAC,OAAA;MACAC,OAAA;IAEA;EACA;EACAC,KAAA;IACAX,QAAA;MACAY,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACA,IAAAD,MAAA;UACA,KAAAE,UAAA;QACA;UACA,KAAAN,OAAA,GAAAI,MAAA;QACA;MAEA;MACA;MACAG,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAR,OAAA,QAAAT,QAAA;IACA;EACA;;EACAkB,OAAA;IACAC,mBAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,YAAAF,GAAA;IACA;IACAG,QAAA;MACA,KAAAC,KAAA;IACA;IACA,MAAAT,WAAA;MAEA,WAAAU,QAAA,CAAAC,QAAA,GAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,KAAAL,KAAA;QACA;UACA,KAAAf,OAAA;UACA,KAAAC,OAAA,GAAAkB,GAAA,CAAAxB,IAAA,CAAAA,IAAA;UACA,KAAA0B,OAAA;QACA;MACA;IACA;IACAA,QAAA;MACA,SAAAtB,OAAA,iBAAAA,OAAA,gBAAAA,OAAA,KAAAuB,SAAA;QACA,KAAAvB,OAAA,CAAAwB,OAAA;MACA;MACA,KAAAxB,OAAA,QAAAyB,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MAEA,KAAA5B,OAAA,CAAA6B,SAAA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA,GACA;UACA1C,IAAA;UACAG,IAAA;UACAwC,MAAA;UACA;UACAC,UAAA;UACAC,KAAA;YACAC,IAAA;YACAC,UAAAC,KAAA;cACA;cACA,OAAAA,KAAA,CAAAhD,IAAA,UAAAgD,KAAA,CAAAC,OAAA;YACA;UACA;UACA3C,IAAA,GACA;YAAA4C,KAAA;YAAAlD,IAAA;UAAA,GACA;YAAAkD,KAAA;YAAAlD,IAAA;UAAA,GACA;YAAAkD,KAAA;YAAAlD,IAAA;UAAA,GACA;YAAAkD,KAAA;YAAAlD,IAAA;UAAA,GACA;YAAAkD,KAAA;YAAAlD,IAAA;UAAA;QAEA;MAEA;;MAEA;MACAmD,MAAA,CAAAC,gBAAA;QACA,KAAA1C,OAAA,CAAA2C,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}