{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    avatarSizeBase,\n    avatarSizeLG,\n    avatarSizeSM,\n    avatarFontSizeBase,\n    avatarFontSizeLG,\n    avatarFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: `${size - lineWidth * 2}px`,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`${componentCls}-string`]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: _extends(_extends(_extends(_extends({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${lineWidth}px ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(avatarSizeBase, avatarFontSizeBase, borderRadius)), {\n      [`&-lg`]: _extends({}, avatarSizeStyle(avatarSizeLG, avatarFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: _extends({}, avatarSizeStyle(avatarSizeSM, avatarFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    avatarGroupBorderColor,\n    avatarGroupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: avatarGroupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: avatarGroupSpace\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    colorBorderBg,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid,\n    avatarSizeBase: controlHeight,\n    avatarSizeLG: controlHeightLG,\n    avatarSizeSM: controlHeightSM,\n    avatarFontSizeBase: Math.round((fontSizeLG + fontSizeXL) / 2),\n    avatarFontSizeLG: fontSizeHeading3,\n    avatarFontSizeSM: fontSize,\n    avatarGroupSpace: -marginXS,\n    avatarGroupBorderColor: colorBorderBg\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n});","map":{"version":3,"names":["_extends","genComponentStyleHook","mergeToken","resetComponent","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","avatarSizeBase","avatarSizeLG","avatarSizeSM","avatarFontSizeBase","avatarFontSizeLG","avatarFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","lineHeight","position","left","_skip_check_","value","transformOrigin","margin","display","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","avatarGroupBorderColor","avatarGroupSpace","borderColor","marginInlineStart","colorTextLightSolid","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","colorBorderBg","colorTextPlaceholder","avatarToken","Math","round"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/avatar/style/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    avatarSizeBase,\n    avatarSizeLG,\n    avatarSizeSM,\n    avatarFontSizeBase,\n    avatarFontSizeLG,\n    avatarFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: `${size - lineWidth * 2}px`,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`${componentCls}-string`]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: _extends(_extends(_extends(_extends({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${lineWidth}px ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(avatarSizeBase, avatarFontSizeBase, borderRadius)), {\n      [`&-lg`]: _extends({}, avatarSizeStyle(avatarSizeLG, avatarFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: _extends({}, avatarSizeStyle(avatarSizeSM, avatarFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    avatarGroupBorderColor,\n    avatarGroupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: avatarGroupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: avatarGroupSpace\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    colorBorderBg,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid,\n    avatarSizeBase: controlHeight,\n    avatarSizeLG: controlHeightLG,\n    avatarSizeSM: controlHeightSM,\n    avatarFontSizeBase: Math.round((fontSizeLG + fontSizeXL) / 2),\n    avatarFontSizeLG: fontSizeHeading3,\n    avatarFontSizeSM: fontSize,\n    avatarGroupSpace: -marginXS,\n    avatarGroupBorderColor: colorBorderBg\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}