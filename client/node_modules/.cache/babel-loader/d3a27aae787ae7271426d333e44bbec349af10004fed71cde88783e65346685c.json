{"ast":null,"code":"export default {\n  name: \"AddBackUp\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    dbList: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      formLayout: 'horizontal',\n      form: {\n        name: '',\n        desc: '',\n        db: ''\n      },\n      // 表单的值\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入操作名称',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 50,\n          message: '长度必须在 5 ～ 50',\n          trigger: 'blur'\n        }],\n        db: [{\n          required: true,\n          message: '请选择数据库',\n          trigger: 'blur'\n        }]\n      } // 表格校验规则\n    };\n  },\n\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        // 将父组件的值拷贝一份\n        this.visible = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n  },\n  methods: {\n    /*\n      表单提交  modal关闭\n     */\n    handleOk(e) {\n      this.loading = true;\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          var data = {\n            data: this.form\n          };\n          var message = this.$message;\n          var loadingMessage = message.loading('正在备份数据库，该操作有点耗时，请等待....', 0);\n          this.$request.postDatabaseBackup(data).then(res => {\n            if (res.status === 200) {\n              setTimeout(loadingMessage, 0);\n              message.success(\"备份成功\");\n              // 请求成功后 将新增的值传给父组件\n              this.$emit('submit', res.data.data);\n            } else {\n              setTimeout(loadingMessage, 0);\n            }\n          });\n          this.initFormData();\n          setTimeout(() => {\n            // 告诉父组件可以关闭了\n            this.$emit('updateModelStatus', false);\n            this.loading = false;\n          }, 1);\n        } else {\n          this.loading = false;\n          return false;\n        }\n      });\n    },\n    /*\n      modal关闭事件\n     */\n    handleCancel(e) {\n      this.initFormData();\n      // 告诉父组件可以关闭了\n      this.$emit('updateModelStatus', false);\n    },\n    afterClose(e) {\n      this.initFormData();\n      // 告诉父组件可以关闭了\n      this.$emit('updateModelStatus', false);\n    },\n    // select选择器 搜索功能\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 重置表单\n    initFormData() {\n      this.$refs.ruleForm.resetFields();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}