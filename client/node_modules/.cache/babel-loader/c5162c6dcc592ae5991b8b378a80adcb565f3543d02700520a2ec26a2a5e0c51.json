{"ast":null,"code":"export default {\n  name: \"Markdown\",\n  props: [\"docContent\"],\n  watch: {\n    content: {\n      deep: true,\n      handler(newVal, oldVal) {\n        this.$bus.$emit('markdownInput', newVal);\n      }\n    },\n    docContent: {\n      deep: true,\n      handler(newVal, oldVal) {\n        this.content = newVal;\n      }\n    }\n  },\n  data() {\n    return {\n      content: \"\",\n      html: \"\"\n    };\n  },\n  beforeDestroy() {\n    const styles = document.getElementsByTagName('style');\n    for (let i = 0; i < styles.length; i++) {\n      const style = styles[i];\n      if (style.innerText.includes('@import \\'mavon-editor/dist/css/index.css\\';')) {\n        document.head.removeChild(style);\n      }\n    }\n  },\n  methods: {\n    // 所有操作都会被解析重新渲染\n    change(value, render) {\n      // render 为 markdown 解析后的结果[html]\n      // this.html = render\n      // 保存\n      localStorage.setItem(\"edit_doc\", value);\n    }\n  }\n};","map":{"version":3,"names":["name","props","watch","content","deep","handler","newVal","oldVal","$bus","$emit","docContent","data","html","beforeDestroy","styles","document","getElementsByTagName","i","length","style","innerText","includes","head","removeChild","methods","change","value","render","localStorage","setItem"],"sources":["src/components/code/Markdown.vue"],"sourcesContent":["<template>\n  <div>\n    <mavon-editor\n        ref=\"md\"\n        v-model=\"content\"\n        style=\"height: 60vh;margin: 20px 0;z-index: 1\"\n        @change=\"change\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Markdown\",\n  props:[\"docContent\"],\n  watch: {\n    content: {\n      deep: true,\n      handler(newVal, oldVal) {\n        this.$bus.$emit('markdownInput',newVal);\n      }\n    },\n    docContent: {\n      deep: true,\n      handler(newVal, oldVal) {\n        this.content = newVal\n      }\n    }\n  },\n  data(){\n    return{\n      content:\"\",\n      html: \"\",\n    }\n  },\n  beforeDestroy() {\n    const styles = document.getElementsByTagName('style');\n    for (let i = 0; i < styles.length; i++) {\n      const style = styles[i];\n      if (style.innerText.includes('@import \\'mavon-editor/dist/css/index.css\\';')) {\n        document.head.removeChild(style);\n      }\n    }\n  },\n  methods:{\n    // 所有操作都会被解析重新渲染\n    change(value, render) {\n      // render 为 markdown 解析后的结果[html]\n      // this.html = render\n      // 保存\n      localStorage.setItem(\"edit_doc\",value)\n    },\n  }\n}\n</script>\n\n<style scoped>\n@font-face {\n  font-family: fontello;\n  src: url(\"~@/assets/font/fontello.eot\");\n  src: url(\"~@/assets/font/fontello.eot#iefix\") format(\"embedded-opentype\"), url(\"~@/assets/font/fontello.woff2\") format(\"woff2\"), url(\"~@/assets/font/fontello.woff\") format(\"woff\"), url(\"~@/assets/font/fontello.ttf\") format(\"truetype\"), url(\"~@/assets/font/fontello.svg#fontello\") format(\"svg\");\n  font-weight: 400;\n  font-style: normal;\n}\n\n[class*=\" fa-mavon-\"]:before, [class^=fa-mavon-]:before {\n  font-family: fontello,serif;\n  font-style: normal;\n  font-weight: 400;\n  speak: none;\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1em;\n  margin-left: .2em;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale\n}\n\n.fa-mavon-bold:before {\n  content: \"\\E800\"\n}\n\n.fa-mavon-italic:before {\n  content: \"\\E801\"\n}\n\n.fa-mavon-thumb-tack:before {\n  content: \"\\E802\"\n}\n\n.fa-mavon-link:before {\n  content: \"\\E803\"\n}\n\n.fa-mavon-picture-o:before {\n  content: \"\\E804\"\n}\n\n.fa-mavon-repeat:before {\n  content: \"\\E805\"\n}\n\n.fa-mavon-undo:before {\n  content: \"\\E806\"\n}\n\n.fa-mavon-trash-o:before {\n  content: \"\\E807\"\n}\n\n.fa-mavon-floppy-o:before {\n  content: \"\\E808\"\n}\n\n.fa-mavon-compress:before {\n  content: \"\\E809\"\n}\n\n.fa-mavon-eye:before {\n  content: \"\\E80A\"\n}\n\n.fa-mavon-eye-slash:before {\n  content: \"\\E80B\"\n}\n\n.fa-mavon-question-circle:before {\n  content: \"\\E80C\"\n}\n\n.fa-mavon-times:before {\n  content: \"\\E80D\"\n}\n\n.fa-mavon-align-left:before {\n  content: \"\\E80F\"\n}\n\n.fa-mavon-align-center:before {\n  content: \"\\E810\"\n}\n\n.fa-mavon-align-right:before {\n  content: \"\\E811\"\n}\n\n.fa-mavon-arrows-alt:before {\n  content: \"\\F0B2\"\n}\n\n.fa-mavon-bars:before {\n  content: \"\\F0C9\"\n}\n\n.fa-mavon-list-ul:before {\n  content: \"\\F0CA\"\n}\n\n.fa-mavon-list-ol:before {\n  content: \"\\F0CB\"\n}\n\n.fa-mavon-strikethrough:before {\n  content: \"\\F0CC\"\n}\n\n.fa-mavon-underline:before {\n  content: \"\\F0CD\"\n}\n\n.fa-mavon-table:before {\n  content: \"\\F0CE\"\n}\n\n.fa-mavon-columns:before {\n  content: \"\\F0DB\"\n}\n\n.fa-mavon-quote-left:before {\n  content: \"\\F10D\"\n}\n\n.fa-mavon-code:before {\n  content: \"\\F121\"\n}\n\n.fa-mavon-superscript:before {\n  content: \"\\F12B\"\n}\n\n.fa-mavon-subscript:before {\n  content: \"\\F12C\"\n}\n\n.fa-mavon-header:before {\n  content: \"\\F1DC\"\n}\n\n.fa-mavon-window-maximize:before {\n  content: \"\\F2D0\"\n}\n\n.markdown-body strong {\n  font-weight: bolder\n}\n\n.markdown-body .hljs-center {\n  text-align: center\n}\n\n.markdown-body .hljs-right {\n  text-align: right\n}\n\n.markdown-body .hljs-left {\n  text-align: left\n}\n\n.markdown-body .hljs {\n  overflow: auto\n}\n\n</style>\n"],"mappings":"AAYA;EACAA,IAAA;EACAC,KAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA;MACAC,QAAAC,MAAA,EAAAC,MAAA;QACA,KAAAC,IAAA,CAAAC,KAAA,kBAAAH,MAAA;MACA;IACA;IACAI,UAAA;MACAN,IAAA;MACAC,QAAAC,MAAA,EAAAC,MAAA;QACA,KAAAJ,OAAA,GAAAG,MAAA;MACA;IACA;EACA;EACAK,KAAA;IACA;MACAR,OAAA;MACAS,IAAA;IACA;EACA;EACAC,cAAA;IACA,MAAAC,MAAA,GAAAC,QAAA,CAAAC,oBAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,GAAAH,MAAA,CAAAI,MAAA,EAAAD,CAAA;MACA,MAAAE,KAAA,GAAAL,MAAA,CAAAG,CAAA;MACA,IAAAE,KAAA,CAAAC,SAAA,CAAAC,QAAA;QACAN,QAAA,CAAAO,IAAA,CAAAC,WAAA,CAAAJ,KAAA;MACA;IACA;EACA;EACAK,OAAA;IACA;IACAC,OAAAC,KAAA,EAAAC,MAAA;MACA;MACA;MACA;MACAC,YAAA,CAAAC,OAAA,aAAAH,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}