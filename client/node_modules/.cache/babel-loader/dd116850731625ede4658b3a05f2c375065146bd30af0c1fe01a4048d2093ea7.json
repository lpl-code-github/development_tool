{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { camelize, filterEmpty } from '../../_util/props-util';\nimport { warning } from '../../vc-util/warning';\nimport TreeNode from '../TreeNode';\nfunction isTreeSelectNode(node) {\n  return node && node.type && node.type.isTreeSelectNode;\n}\nexport function convertChildrenToData(rootNodes) {\n  function dig() {\n    let treeNodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return filterEmpty(treeNodes).map(treeNode => {\n      var _a, _b, _c;\n      // Filter invalidate node\n      if (!isTreeSelectNode(treeNode)) {\n        warning(!treeNode, 'TreeSelect/TreeSelectNode can only accept TreeSelectNode as children.');\n        return null;\n      }\n      const slots = treeNode.children || {};\n      const key = treeNode.key;\n      const props = {};\n      for (const [k, v] of Object.entries(treeNode.props)) {\n        props[camelize(k)] = v;\n      }\n      const {\n        isLeaf,\n        checkable,\n        selectable,\n        disabled,\n        disableCheckbox\n      } = props;\n      // 默认值为 undefined\n      const newProps = {\n        isLeaf: isLeaf || isLeaf === '' || undefined,\n        checkable: checkable || checkable === '' || undefined,\n        selectable: selectable || selectable === '' || undefined,\n        disabled: disabled || disabled === '' || undefined,\n        disableCheckbox: disableCheckbox || disableCheckbox === '' || undefined\n      };\n      const slotsProps = _extends(_extends({}, props), newProps);\n      const {\n          title = (_a = slots.title) === null || _a === void 0 ? void 0 : _a.call(slots, slotsProps),\n          switcherIcon = (_b = slots.switcherIcon) === null || _b === void 0 ? void 0 : _b.call(slots, slotsProps)\n        } = props,\n        rest = __rest(props, [\"title\", \"switcherIcon\"]);\n      const children = (_c = slots.default) === null || _c === void 0 ? void 0 : _c.call(slots);\n      const dataNode = _extends(_extends(_extends({}, rest), {\n        title,\n        switcherIcon,\n        key,\n        isLeaf\n      }), newProps);\n      const parsedChildren = dig(children);\n      if (parsedChildren.length) {\n        dataNode.children = parsedChildren;\n      }\n      return dataNode;\n    });\n  }\n  return dig(rootNodes);\n}\nexport function fillLegacyProps(dataNode) {\n  // Skip if not dataNode exist\n  if (!dataNode) {\n    return dataNode;\n  }\n  const cloneNode = _extends({}, dataNode);\n  if (!('props' in cloneNode)) {\n    Object.defineProperty(cloneNode, 'props', {\n      get() {\n        warning(false, 'New `vc-tree-select` not support return node instance as argument anymore. Please consider to remove `props` access.');\n        return cloneNode;\n      }\n    });\n  }\n  return cloneNode;\n}\nexport function fillAdditionalInfo(extra, triggerValue, checkedValues, treeData, showPosition, fieldNames) {\n  let triggerNode = null;\n  let nodeList = null;\n  function generateMap() {\n    function dig(list) {\n      let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n      let parentIncluded = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return list.map((option, index) => {\n        const pos = `${level}-${index}`;\n        const value = option[fieldNames.value];\n        const included = checkedValues.includes(value);\n        const children = dig(option[fieldNames.children] || [], pos, included);\n        const node = _createVNode(TreeNode, option, {\n          default: () => [children.map(child => child.node)]\n        });\n        // Link with trigger node\n        if (triggerValue === value) {\n          triggerNode = node;\n        }\n        if (included) {\n          const checkedNode = {\n            pos,\n            node,\n            children\n          };\n          if (!parentIncluded) {\n            nodeList.push(checkedNode);\n          }\n          return checkedNode;\n        }\n        return null;\n      }).filter(node => node);\n    }\n    if (!nodeList) {\n      nodeList = [];\n      dig(treeData);\n      // Sort to keep the checked node length\n      nodeList.sort((_ref, _ref2) => {\n        let {\n          node: {\n            props: {\n              value: val1\n            }\n          }\n        } = _ref;\n        let {\n          node: {\n            props: {\n              value: val2\n            }\n          }\n        } = _ref2;\n        const index1 = checkedValues.indexOf(val1);\n        const index2 = checkedValues.indexOf(val2);\n        return index1 - index2;\n      });\n    }\n  }\n  Object.defineProperty(extra, 'triggerNode', {\n    get() {\n      warning(false, '`triggerNode` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      return triggerNode;\n    }\n  });\n  Object.defineProperty(extra, 'allCheckedNodes', {\n    get() {\n      warning(false, '`allCheckedNodes` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      if (showPosition) {\n        return nodeList;\n      }\n      return nodeList.map(_ref3 => {\n        let {\n          node\n        } = _ref3;\n        return node;\n      });\n    }\n  });\n}","map":{"version":3,"names":["_extends","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","camelize","filterEmpty","warning","TreeNode","isTreeSelectNode","node","type","convertChildrenToData","rootNodes","dig","treeNodes","arguments","undefined","map","treeNode","_a","_b","_c","slots","children","key","props","k","v","entries","isLeaf","checkable","selectable","disabled","disableCheckbox","newProps","slotsProps","title","switcherIcon","rest","default","dataNode","parsedChildren","fillLegacyProps","cloneNode","defineProperty","get","fillAdditionalInfo","extra","triggerValue","checkedValues","treeData","showPosition","fieldNames","triggerNode","nodeList","generateMap","list","level","parentIncluded","option","index","pos","value","included","includes","child","checkedNode","push","filter","sort","_ref","_ref2","val1","val2","index1","index2","_ref3"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-tree-select/utils/legacyUtil.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { camelize, filterEmpty } from '../../_util/props-util';\nimport { warning } from '../../vc-util/warning';\nimport TreeNode from '../TreeNode';\nfunction isTreeSelectNode(node) {\n  return node && node.type && node.type.isTreeSelectNode;\n}\nexport function convertChildrenToData(rootNodes) {\n  function dig() {\n    let treeNodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return filterEmpty(treeNodes).map(treeNode => {\n      var _a, _b, _c;\n      // Filter invalidate node\n      if (!isTreeSelectNode(treeNode)) {\n        warning(!treeNode, 'TreeSelect/TreeSelectNode can only accept TreeSelectNode as children.');\n        return null;\n      }\n      const slots = treeNode.children || {};\n      const key = treeNode.key;\n      const props = {};\n      for (const [k, v] of Object.entries(treeNode.props)) {\n        props[camelize(k)] = v;\n      }\n      const {\n        isLeaf,\n        checkable,\n        selectable,\n        disabled,\n        disableCheckbox\n      } = props;\n      // 默认值为 undefined\n      const newProps = {\n        isLeaf: isLeaf || isLeaf === '' || undefined,\n        checkable: checkable || checkable === '' || undefined,\n        selectable: selectable || selectable === '' || undefined,\n        disabled: disabled || disabled === '' || undefined,\n        disableCheckbox: disableCheckbox || disableCheckbox === '' || undefined\n      };\n      const slotsProps = _extends(_extends({}, props), newProps);\n      const {\n          title = (_a = slots.title) === null || _a === void 0 ? void 0 : _a.call(slots, slotsProps),\n          switcherIcon = (_b = slots.switcherIcon) === null || _b === void 0 ? void 0 : _b.call(slots, slotsProps)\n        } = props,\n        rest = __rest(props, [\"title\", \"switcherIcon\"]);\n      const children = (_c = slots.default) === null || _c === void 0 ? void 0 : _c.call(slots);\n      const dataNode = _extends(_extends(_extends({}, rest), {\n        title,\n        switcherIcon,\n        key,\n        isLeaf\n      }), newProps);\n      const parsedChildren = dig(children);\n      if (parsedChildren.length) {\n        dataNode.children = parsedChildren;\n      }\n      return dataNode;\n    });\n  }\n  return dig(rootNodes);\n}\nexport function fillLegacyProps(dataNode) {\n  // Skip if not dataNode exist\n  if (!dataNode) {\n    return dataNode;\n  }\n  const cloneNode = _extends({}, dataNode);\n  if (!('props' in cloneNode)) {\n    Object.defineProperty(cloneNode, 'props', {\n      get() {\n        warning(false, 'New `vc-tree-select` not support return node instance as argument anymore. Please consider to remove `props` access.');\n        return cloneNode;\n      }\n    });\n  }\n  return cloneNode;\n}\nexport function fillAdditionalInfo(extra, triggerValue, checkedValues, treeData, showPosition, fieldNames) {\n  let triggerNode = null;\n  let nodeList = null;\n  function generateMap() {\n    function dig(list) {\n      let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n      let parentIncluded = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return list.map((option, index) => {\n        const pos = `${level}-${index}`;\n        const value = option[fieldNames.value];\n        const included = checkedValues.includes(value);\n        const children = dig(option[fieldNames.children] || [], pos, included);\n        const node = _createVNode(TreeNode, option, {\n          default: () => [children.map(child => child.node)]\n        });\n        // Link with trigger node\n        if (triggerValue === value) {\n          triggerNode = node;\n        }\n        if (included) {\n          const checkedNode = {\n            pos,\n            node,\n            children\n          };\n          if (!parentIncluded) {\n            nodeList.push(checkedNode);\n          }\n          return checkedNode;\n        }\n        return null;\n      }).filter(node => node);\n    }\n    if (!nodeList) {\n      nodeList = [];\n      dig(treeData);\n      // Sort to keep the checked node length\n      nodeList.sort((_ref, _ref2) => {\n        let {\n          node: {\n            props: {\n              value: val1\n            }\n          }\n        } = _ref;\n        let {\n          node: {\n            props: {\n              value: val2\n            }\n          }\n        } = _ref2;\n        const index1 = checkedValues.indexOf(val1);\n        const index2 = checkedValues.indexOf(val2);\n        return index1 - index2;\n      });\n    }\n  }\n  Object.defineProperty(extra, 'triggerNode', {\n    get() {\n      warning(false, '`triggerNode` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      return triggerNode;\n    }\n  });\n  Object.defineProperty(extra, 'allCheckedNodes', {\n    get() {\n      warning(false, '`allCheckedNodes` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      if (showPosition) {\n        return nodeList;\n      }\n      return nodeList.map(_ref3 => {\n        let {\n          node\n        } = _ref3;\n        return node;\n      });\n    }\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}