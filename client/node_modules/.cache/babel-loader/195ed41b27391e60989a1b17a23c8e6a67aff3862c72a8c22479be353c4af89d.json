{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport omit from '../_util/omit';\nimport warning from '../_util/warning';\nimport Base, { baseProps } from './Base';\nexport const textProps = () => _extends(_extends({}, omit(baseProps(), ['component'])), {\n  ellipsis: {\n    type: [Boolean, Object],\n    default: undefined\n  }\n});\nconst Text = (props, _ref) => {\n  let {\n    slots,\n    attrs\n  } = _ref;\n  const {\n    ellipsis\n  } = props;\n  warning(typeof ellipsis !== 'object' || !ellipsis || !('expandable' in ellipsis) && !('rows' in ellipsis), 'Typography.Text', '`ellipsis` do not support `expandable` or `rows` props.');\n  const textProps = _extends(_extends(_extends({}, props), {\n    ellipsis: ellipsis && typeof ellipsis === 'object' ? omit(ellipsis, ['expandable', 'rows']) : ellipsis,\n    component: 'span'\n  }), attrs);\n  return _createVNode(Base, textProps, slots);\n};\nText.displayName = 'ATypographyText';\nText.inheritAttrs = false;\nText.props = textProps();\nexport default Text;","map":{"version":3,"names":["_extends","createVNode","_createVNode","resolveDirective","_resolveDirective","omit","warning","Base","baseProps","textProps","ellipsis","type","Boolean","Object","default","undefined","Text","props","_ref","slots","attrs","component","displayName","inheritAttrs"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/typography/Text.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport omit from '../_util/omit';\nimport warning from '../_util/warning';\nimport Base, { baseProps } from './Base';\nexport const textProps = () => _extends(_extends({}, omit(baseProps(), ['component'])), {\n  ellipsis: {\n    type: [Boolean, Object],\n    default: undefined\n  }\n});\nconst Text = (props, _ref) => {\n  let {\n    slots,\n    attrs\n  } = _ref;\n  const {\n    ellipsis\n  } = props;\n  warning(typeof ellipsis !== 'object' || !ellipsis || !('expandable' in ellipsis) && !('rows' in ellipsis), 'Typography.Text', '`ellipsis` do not support `expandable` or `rows` props.');\n  const textProps = _extends(_extends(_extends({}, props), {\n    ellipsis: ellipsis && typeof ellipsis === 'object' ? omit(ellipsis, ['expandable', 'rows']) : ellipsis,\n    component: 'span'\n  }), attrs);\n  return _createVNode(Base, textProps, slots);\n};\nText.displayName = 'ATypographyText';\nText.inheritAttrs = false;\nText.props = textProps();\nexport default Text;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,WAAW,IAAIC,YAAY,EAAEC,gBAAgB,IAAIC,iBAAiB,QAAQ,KAAK;AACxF,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,IAAI,IAAIC,SAAS,QAAQ,QAAQ;AACxC,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAMT,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEK,IAAI,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;EACtFE,QAAQ,EAAE;IACRC,IAAI,EAAE,CAACC,OAAO,EAAEC,MAAM,CAAC;IACvBC,OAAO,EAAEC;EACX;AACF,CAAC,CAAC;AACF,MAAMC,IAAI,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EAC5B,IAAI;IACFC,KAAK;IACLC;EACF,CAAC,GAAGF,IAAI;EACR,MAAM;IACJR;EACF,CAAC,GAAGO,KAAK;EACTX,OAAO,CAAC,OAAOI,QAAQ,KAAK,QAAQ,IAAI,CAACA,QAAQ,IAAI,EAAE,YAAY,IAAIA,QAAQ,CAAC,IAAI,EAAE,MAAM,IAAIA,QAAQ,CAAC,EAAE,iBAAiB,EAAE,yDAAyD,CAAC;EACxL,MAAMD,SAAS,GAAGT,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEiB,KAAK,CAAC,EAAE;IACvDP,QAAQ,EAAEA,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,GAAGL,IAAI,CAACK,QAAQ,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,GAAGA,QAAQ;IACtGW,SAAS,EAAE;EACb,CAAC,CAAC,EAAED,KAAK,CAAC;EACV,OAAOlB,YAAY,CAACK,IAAI,EAAEE,SAAS,EAAEU,KAAK,CAAC;AAC7C,CAAC;AACDH,IAAI,CAACM,WAAW,GAAG,iBAAiB;AACpCN,IAAI,CAACO,YAAY,GAAG,KAAK;AACzBP,IAAI,CAACC,KAAK,GAAGR,SAAS,CAAC,CAAC;AACxB,eAAeO,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}