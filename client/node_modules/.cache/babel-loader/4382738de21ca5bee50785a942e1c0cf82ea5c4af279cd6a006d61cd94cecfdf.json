{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport PropTypes from '../_util/vue-types';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport Base from '../base';\nvar Divider = {\n  name: 'ADivider',\n  props: {\n    prefixCls: PropTypes.string,\n    type: PropTypes.oneOf(['horizontal', 'vertical', '']).def('horizontal'),\n    dashed: PropTypes.bool,\n    orientation: PropTypes.oneOf(['left', 'right', 'center'])\n  },\n  inject: {\n    configProvider: {\n      'default': function _default() {\n        return ConfigConsumerProps;\n      }\n    }\n  },\n  render: function render() {\n    var _classString;\n    var h = arguments[0];\n    var customizePrefixCls = this.prefixCls,\n      type = this.type,\n      $slots = this.$slots,\n      dashed = this.dashed,\n      _orientation = this.orientation,\n      orientation = _orientation === undefined ? 'center' : _orientation;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? '-' + orientation : orientation;\n    var classString = (_classString = {}, _defineProperty(_classString, prefixCls, true), _defineProperty(_classString, prefixCls + '-' + type, true), _defineProperty(_classString, prefixCls + '-with-text' + orientationPrefix, $slots['default']), _defineProperty(_classString, prefixCls + '-dashed', !!dashed), _classString);\n    return h('div', {\n      'class': classString,\n      attrs: {\n        role: 'separator'\n      }\n    }, [$slots['default'] && h('span', {\n      'class': prefixCls + '-inner-text'\n    }, [$slots['default']])]);\n  }\n};\n\n/* istanbul ignore next */\nDivider.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(Divider.name, Divider);\n};\nexport default Divider;","map":{"version":3,"names":["_defineProperty","PropTypes","ConfigConsumerProps","Base","Divider","name","props","prefixCls","string","type","oneOf","def","dashed","bool","orientation","inject","configProvider","_default","render","_classString","h","arguments","customizePrefixCls","$slots","_orientation","undefined","getPrefixCls","orientationPrefix","length","classString","attrs","role","install","Vue","use","component"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/divider/index.js"],"sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport PropTypes from '../_util/vue-types';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport Base from '../base';\n\nvar Divider = {\n  name: 'ADivider',\n  props: {\n    prefixCls: PropTypes.string,\n    type: PropTypes.oneOf(['horizontal', 'vertical', '']).def('horizontal'),\n    dashed: PropTypes.bool,\n    orientation: PropTypes.oneOf(['left', 'right', 'center'])\n  },\n  inject: {\n    configProvider: { 'default': function _default() {\n        return ConfigConsumerProps;\n      } }\n  },\n  render: function render() {\n    var _classString;\n\n    var h = arguments[0];\n    var customizePrefixCls = this.prefixCls,\n        type = this.type,\n        $slots = this.$slots,\n        dashed = this.dashed,\n        _orientation = this.orientation,\n        orientation = _orientation === undefined ? 'center' : _orientation;\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? '-' + orientation : orientation;\n\n    var classString = (_classString = {}, _defineProperty(_classString, prefixCls, true), _defineProperty(_classString, prefixCls + '-' + type, true), _defineProperty(_classString, prefixCls + '-with-text' + orientationPrefix, $slots['default']), _defineProperty(_classString, prefixCls + '-dashed', !!dashed), _classString);\n\n    return h(\n      'div',\n      { 'class': classString, attrs: { role: 'separator' }\n      },\n      [$slots['default'] && h(\n        'span',\n        { 'class': prefixCls + '-inner-text' },\n        [$slots['default']]\n      )]\n    );\n  }\n};\n\n/* istanbul ignore next */\nDivider.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(Divider.name, Divider);\n};\n\nexport default Divider;"],"mappings":"AAAA,OAAOA,eAAe,MAAM,sCAAsC;AAClE,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,mBAAmB,QAAQ,wCAAwC;AAC5E,OAAOC,IAAI,MAAM,SAAS;AAE1B,IAAIC,OAAO,GAAG;EACZC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,SAAS,EAAEN,SAAS,CAACO,MAAM;IAC3BC,IAAI,EAAER,SAAS,CAACS,KAAK,CAAC,CAAC,YAAY,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,YAAY,CAAC;IACvEC,MAAM,EAAEX,SAAS,CAACY,IAAI;IACtBC,WAAW,EAAEb,SAAS,CAACS,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;EAC1D,CAAC;EACDK,MAAM,EAAE;IACNC,cAAc,EAAE;MAAE,SAAS,EAAE,SAASC,QAAQA,CAAA,EAAG;QAC7C,OAAOf,mBAAmB;MAC5B;IAAE;EACN,CAAC;EACDgB,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;IACxB,IAAIC,YAAY;IAEhB,IAAIC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC;IACpB,IAAIC,kBAAkB,GAAG,IAAI,CAACf,SAAS;MACnCE,IAAI,GAAG,IAAI,CAACA,IAAI;MAChBc,MAAM,GAAG,IAAI,CAACA,MAAM;MACpBX,MAAM,GAAG,IAAI,CAACA,MAAM;MACpBY,YAAY,GAAG,IAAI,CAACV,WAAW;MAC/BA,WAAW,GAAGU,YAAY,KAAKC,SAAS,GAAG,QAAQ,GAAGD,YAAY;IAEtE,IAAIE,YAAY,GAAG,IAAI,CAACV,cAAc,CAACU,YAAY;IACnD,IAAInB,SAAS,GAAGmB,YAAY,CAAC,SAAS,EAAEJ,kBAAkB,CAAC;IAC3D,IAAIK,iBAAiB,GAAGb,WAAW,CAACc,MAAM,GAAG,CAAC,GAAG,GAAG,GAAGd,WAAW,GAAGA,WAAW;IAEhF,IAAIe,WAAW,IAAIV,YAAY,GAAG,CAAC,CAAC,EAAEnB,eAAe,CAACmB,YAAY,EAAEZ,SAAS,EAAE,IAAI,CAAC,EAAEP,eAAe,CAACmB,YAAY,EAAEZ,SAAS,GAAG,GAAG,GAAGE,IAAI,EAAE,IAAI,CAAC,EAAET,eAAe,CAACmB,YAAY,EAAEZ,SAAS,GAAG,YAAY,GAAGoB,iBAAiB,EAAEJ,MAAM,CAAC,SAAS,CAAC,CAAC,EAAEvB,eAAe,CAACmB,YAAY,EAAEZ,SAAS,GAAG,SAAS,EAAE,CAAC,CAACK,MAAM,CAAC,EAAEO,YAAY,CAAC;IAEhU,OAAOC,CAAC,CACN,KAAK,EACL;MAAE,OAAO,EAAES,WAAW;MAAEC,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAY;IACnD,CAAC,EACD,CAACR,MAAM,CAAC,SAAS,CAAC,IAAIH,CAAC,CACrB,MAAM,EACN;MAAE,OAAO,EAAEb,SAAS,GAAG;IAAc,CAAC,EACtC,CAACgB,MAAM,CAAC,SAAS,CAAC,CACpB,CAAC,CACH,CAAC;EACH;AACF,CAAC;;AAED;AACAnB,OAAO,CAAC4B,OAAO,GAAG,UAAUC,GAAG,EAAE;EAC/BA,GAAG,CAACC,GAAG,CAAC/B,IAAI,CAAC;EACb8B,GAAG,CAACE,SAAS,CAAC/B,OAAO,CAACC,IAAI,EAAED,OAAO,CAAC;AACtC,CAAC;AAED,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}