{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AddScript',\n  data() {\n    return {\n      formItemLayout: {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 4\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 20\n          }\n        }\n      },\n      formItemLayoutWithOutLabel: {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 20,\n            offset: 4\n          }\n        }\n      },\n      dynamicValidateForm: {\n        domains: []\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    removeDomain(item) {\n      let index = this.dynamicValidateForm.domains.indexOf(item);\n      if (index !== -1) {\n        this.dynamicValidateForm.domains.splice(index, 1);\n      }\n    },\n    addDomain() {\n      this.dynamicValidateForm.domains.push({\n        value: '',\n        key: Date.now()\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","dynamicValidateForm","domains","methods","submitForm","formName","$refs","validate","valid","alert","console","log","resetForm","resetFields","removeDomain","item","index","indexOf","splice","addDomain","push","value","key","Date","now"],"sources":["src/components/Script/AddScript.vue"],"sourcesContent":["<template>\n  <a-form-model\n      ref=\"dynamicValidateForm\"\n      :model=\"dynamicValidateForm\"\n      v-bind=\"formItemLayoutWithOutLabel\"\n  >\n    <a-form-model-item\n        v-for=\"(domain, index) in dynamicValidateForm.domains\"\n        :key=\"domain.key\"\n        v-bind=\"index === 0 ? formItemLayout : {}\"\n        :label=\"index === 0 ? 'Domains' : ''\"\n        :prop=\"'domains.' + index + '.value'\"\n        :rules=\"{\n        required: true,\n        message: 'domain can not be null',\n        trigger: 'blur',\n      }\"\n    >\n      <a-input\n          v-model=\"domain.value\"\n          placeholder=\"please input domain\"\n          style=\"width: 60%; margin-right: 8px\"\n      />\n      <a-icon\n          v-if=\"dynamicValidateForm.domains.length > 1\"\n          class=\"dynamic-delete-button\"\n          type=\"minus-circle-o\"\n          :disabled=\"dynamicValidateForm.domains.length === 1\"\n          @click=\"removeDomain(domain)\"\n      />\n    </a-form-model-item>\n    <a-form-model-item v-bind=\"formItemLayoutWithOutLabel\">\n      <a-button type=\"dashed\" style=\"width: 60%\" @click=\"addDomain\">\n        <a-icon type=\"plus\" /> Add field\n      </a-button>\n    </a-form-model-item>\n    <a-form-model-item v-bind=\"formItemLayoutWithOutLabel\">\n      <a-button type=\"primary\" html-type=\"submit\" @click=\"submitForm('dynamicValidateForm')\">\n        Submit\n      </a-button>\n      <a-button style=\"margin-left: 10px\" @click=\"resetForm('dynamicValidateForm')\">\n        Reset\n      </a-button>\n    </a-form-model-item>\n  </a-form-model>\n</template>\n\n<script>\nexport default {\n  name: 'AddScript',\n  data() {\n    return {\n      formItemLayout: {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      },\n      formItemLayoutWithOutLabel: {\n        wrapperCol: {\n          xs: { span: 24, offset: 0 },\n          sm: { span: 20, offset: 4 },\n        },\n      },\n      dynamicValidateForm: {\n        domains: [],\n      },\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    removeDomain(item) {\n      let index = this.dynamicValidateForm.domains.indexOf(item);\n      if (index !== -1) {\n        this.dynamicValidateForm.domains.splice(index, 1);\n      }\n    },\n    addDomain() {\n      this.dynamicValidateForm.domains.push({\n        value: '',\n        key: Date.now(),\n      });\n    },\n  },\n};\n</script>\n<style>\n.dynamic-delete-button {\n  cursor: pointer;\n  position: relative;\n  top: 4px;\n  font-size: 24px;\n  color: #999;\n  transition: all 0.3s;\n}\n.dynamic-delete-button:hover {\n  color: #777;\n}\n.dynamic-delete-button[disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n</style>\n"],"mappings":";AAgDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,cAAA;QACAC,QAAA;UACAC,EAAA;YAAAC,IAAA;UAAA;UACAC,EAAA;YAAAD,IAAA;UAAA;QACA;QACAE,UAAA;UACAH,EAAA;YAAAC,IAAA;UAAA;UACAC,EAAA;YAAAD,IAAA;UAAA;QACA;MACA;MACAG,0BAAA;QACAD,UAAA;UACAH,EAAA;YAAAC,IAAA;YAAAI,MAAA;UAAA;UACAH,EAAA;YAAAD,IAAA;YAAAI,MAAA;UAAA;QACA;MACA;MACAC,mBAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAC,UAAAP,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAQ,WAAA;IACA;IACAC,aAAAC,IAAA;MACA,IAAAC,KAAA,QAAAf,mBAAA,CAAAC,OAAA,CAAAe,OAAA,CAAAF,IAAA;MACA,IAAAC,KAAA;QACA,KAAAf,mBAAA,CAAAC,OAAA,CAAAgB,MAAA,CAAAF,KAAA;MACA;IACA;IACAG,UAAA;MACA,KAAAlB,mBAAA,CAAAC,OAAA,CAAAkB,IAAA;QACAC,KAAA;QACAC,GAAA,EAAAC,IAAA,CAAAC,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}