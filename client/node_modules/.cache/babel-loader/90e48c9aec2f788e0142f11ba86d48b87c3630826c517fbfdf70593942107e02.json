{"ast":null,"code":"export default {\n  name: \"OneLog\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    date: {\n      type: String,\n      required: true\n    },\n    logData: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false\n    };\n  },\n  computed: {\n    computedColor() {\n      return function (item) {\n        if (item.flag && item.status === \"成功\") {\n          return 'green';\n        }\n        if (!item.flag && item.status === \"\") {\n          return 'gray';\n        }\n        return 'blue';\n      };\n    }\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        console.log(newVal);\n        this.visible = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    console.log(this.taskName);\n    this.visible = this.openFlag;\n  },\n  methods: {\n    afterClose(e) {\n      this.$emit('updateModelStatus', false);\n    },\n    handleInfiniteOnLoad() {\n      const data = this.data;\n      this.loading = true;\n      if (data.length > 14) {\n        this.$message.warning('Infinite List loaded all');\n        this.busy = true;\n        this.loading = false;\n        return;\n      }\n      this.fetchData(res => {\n        this.data = data.concat(res.results);\n        this.loading = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","openFlag","type","Boolean","required","date","String","logData","Array","data","loading","visible","computed","computedColor","item","flag","status","watch","handler","newVal","oldVal","console","log","deep","mounted","taskName","methods","afterClose","e","$emit","handleInfiniteOnLoad","length","$message","warning","busy","fetchData","res","concat","results"],"sources":["src/components/log/OneLog.vue"],"sourcesContent":["<template>\n  <div>\n    <a-modal\n        v-model=\"visible\"\n        :title=\"date\"\n        on-ok=\"handleOk\"\n        :footer=\"null\"\n        :afterClose=\"afterClose\"\n        :maskClosable=\"false\">\n\n      <div\n          v-infinite-scroll=\"handleInfiniteOnLoad\"\n          class=\"demo-infinite-container\"\n          :infinite-scroll-disabled=\"busy\"\n          :infinite-scroll-distance=\"10\"\n      >\n        <a-list :data-source=\"logData\">\n          <a-list-item slot=\"renderItem\" slot-scope=\"item, index\">\n            <a-list-item-meta :description=\"item.email\">\n              <a slot=\"title\" :href=\"item.href\">{{ item.name.last }}</a>\n              <a-avatar\n                  slot=\"avatar\"\n                  src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              />\n            </a-list-item-meta>\n            <div>Content</div>\n          </a-list-item>\n          <div v-if=\"loading && !busy\" class=\"demo-loading-container\">\n            <a-spin />\n          </div>\n        </a-list>\n      </div>\n    </a-modal>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"OneLog\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    date: {\n      type: String,\n      required: true\n    },\n    logData: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n    };\n  },\n  computed: {\n    computedColor() {\n      return function(item) {\n        if (item.flag && item.status === \"成功\") {\n          return 'green';\n        }\n        if (!item.flag && item.status === \"\"){\n          return 'gray'\n        }\n        return 'blue';\n      }\n    }\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        console.log(newVal)\n        this.visible = newVal\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    console.log(this.taskName)\n    this.visible = this.openFlag\n  },\n  methods: {\n    afterClose(e) {\n      this.$emit('updateModelStatus', false)\n    },\n    handleInfiniteOnLoad() {\n      const data = this.data;\n      this.loading = true;\n      if (data.length > 14) {\n        this.$message.warning('Infinite List loaded all');\n        this.busy = true;\n        this.loading = false;\n        return;\n      }\n      this.fetchData(res => {\n        this.data = data.concat(res.results);\n        this.loading = false;\n      });\n    },\n  }\n};\n</script>\n<style scoped>\n/deep/ .ant-modal-body {\n  max-height: 400px;\n  overflow-y: auto;\n}\n</style>\n"],"mappings":"AAoCA;EACAA,IAAA;EACAC,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,QAAA;IACA;IACAC,IAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;IACAG,OAAA;MACAL,IAAA,EAAAM,KAAA;MACAJ,QAAA;IACA;EACA;EACAK,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,cAAA;MACA,iBAAAC,IAAA;QACA,IAAAA,IAAA,CAAAC,IAAA,IAAAD,IAAA,CAAAE,MAAA;UACA;QACA;QACA,KAAAF,IAAA,CAAAC,IAAA,IAAAD,IAAA,CAAAE,MAAA;UACA;QACA;QACA;MACA;IACA;EACA;EACAC,KAAA;IACAhB,QAAA;MACAiB,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACAC,OAAA,CAAAC,GAAA,CAAAH,MAAA;QACA,KAAAR,OAAA,GAAAQ,MAAA;MACA;MACA;MACAI,IAAA;IACA;EACA;EACAC,QAAA;IACAH,OAAA,CAAAC,GAAA,MAAAG,QAAA;IACA,KAAAd,OAAA,QAAAV,QAAA;EACA;EACAyB,OAAA;IACAC,WAAAC,CAAA;MACA,KAAAC,KAAA;IACA;IACAC,qBAAA;MACA,MAAArB,IAAA,QAAAA,IAAA;MACA,KAAAC,OAAA;MACA,IAAAD,IAAA,CAAAsB,MAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA,KAAAC,IAAA;QACA,KAAAxB,OAAA;QACA;MACA;MACA,KAAAyB,SAAA,CAAAC,GAAA;QACA,KAAA3B,IAAA,GAAAA,IAAA,CAAA4B,MAAA,CAAAD,GAAA,CAAAE,OAAA;QACA,KAAA5B,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}