{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { computed, ref, watch, defineComponent, provide } from 'vue';\nimport Checkbox from './Checkbox';\nimport { useInjectFormItemContext } from '../form/FormItemContext';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport { CheckboxGroupContextKey, checkboxGroupProps } from './interface';\n// CSSINJS\nimport useStyle from './style';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ACheckboxGroup',\n  inheritAttrs: false,\n  props: checkboxGroupProps(),\n  // emits: ['change', 'update:value'],\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs,\n      emit,\n      expose\n    } = _ref;\n    const formItemContext = useInjectFormItemContext();\n    const {\n      prefixCls,\n      direction\n    } = useConfigInject('checkbox', props);\n    const groupPrefixCls = computed(() => `${prefixCls.value}-group`);\n    // style\n    const [wrapSSR, hashId] = useStyle(groupPrefixCls);\n    const mergedValue = ref((props.value === undefined ? props.defaultValue : props.value) || []);\n    watch(() => props.value, () => {\n      mergedValue.value = props.value || [];\n    });\n    const options = computed(() => {\n      return props.options.map(option => {\n        if (typeof option === 'string' || typeof option === 'number') {\n          return {\n            label: option,\n            value: option\n          };\n        }\n        return option;\n      });\n    });\n    const triggerUpdate = ref(Symbol());\n    const registeredValuesMap = ref(new Map());\n    const cancelValue = id => {\n      registeredValuesMap.value.delete(id);\n      triggerUpdate.value = Symbol();\n    };\n    const registerValue = (id, value) => {\n      registeredValuesMap.value.set(id, value);\n      triggerUpdate.value = Symbol();\n    };\n    const registeredValues = ref(new Map());\n    watch(triggerUpdate, () => {\n      const valuseMap = new Map();\n      for (const value of registeredValuesMap.value.values()) {\n        valuseMap.set(value, true);\n      }\n      registeredValues.value = valuseMap;\n    });\n    const toggleOption = option => {\n      const optionIndex = mergedValue.value.indexOf(option.value);\n      const value = [...mergedValue.value];\n      if (optionIndex === -1) {\n        value.push(option.value);\n      } else {\n        value.splice(optionIndex, 1);\n      }\n      if (props.value === undefined) {\n        mergedValue.value = value;\n      }\n      const val = value.filter(val => registeredValues.value.has(val)).sort((a, b) => {\n        const indexA = options.value.findIndex(opt => opt.value === a);\n        const indexB = options.value.findIndex(opt => opt.value === b);\n        return indexA - indexB;\n      });\n      emit('update:value', val);\n      emit('change', val);\n      formItemContext.onFieldChange();\n    };\n    provide(CheckboxGroupContextKey, {\n      cancelValue,\n      registerValue,\n      toggleOption,\n      mergedValue,\n      name: computed(() => props.name),\n      disabled: computed(() => props.disabled)\n    });\n    expose({\n      mergedValue\n    });\n    return () => {\n      var _a;\n      const {\n        id = formItemContext.id.value\n      } = props;\n      let children = null;\n      if (options.value && options.value.length > 0) {\n        children = options.value.map(option => {\n          var _a;\n          return _createVNode(Checkbox, {\n            \"prefixCls\": prefixCls.value,\n            \"key\": option.value.toString(),\n            \"disabled\": 'disabled' in option ? option.disabled : props.disabled,\n            \"indeterminate\": option.indeterminate,\n            \"value\": option.value,\n            \"checked\": mergedValue.value.indexOf(option.value) !== -1,\n            \"onChange\": option.onChange,\n            \"class\": `${groupPrefixCls.value}-item`\n          }, {\n            default: () => [slots.label !== undefined ? (_a = slots.label) === null || _a === void 0 ? void 0 : _a.call(slots, option) : option.label]\n          });\n        });\n      }\n      return wrapSSR(_createVNode(\"div\", _objectSpread(_objectSpread({}, attrs), {}, {\n        \"class\": [groupPrefixCls.value, {\n          [`${groupPrefixCls.value}-rtl`]: direction.value === 'rtl'\n        }, attrs.class, hashId.value],\n        \"id\": id\n      }), [children || ((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots))]));\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","computed","ref","watch","defineComponent","provide","Checkbox","useInjectFormItemContext","useConfigInject","CheckboxGroupContextKey","checkboxGroupProps","useStyle","compatConfig","MODE","name","inheritAttrs","props","setup","_ref","slots","attrs","emit","expose","formItemContext","prefixCls","direction","groupPrefixCls","value","wrapSSR","hashId","mergedValue","undefined","defaultValue","options","map","option","label","triggerUpdate","Symbol","registeredValuesMap","Map","cancelValue","id","delete","registerValue","set","registeredValues","valuseMap","values","toggleOption","optionIndex","indexOf","push","splice","val","filter","has","sort","a","b","indexA","findIndex","opt","indexB","onFieldChange","disabled","_a","children","length","toString","indeterminate","onChange","default","call","class"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/checkbox/Group.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { computed, ref, watch, defineComponent, provide } from 'vue';\nimport Checkbox from './Checkbox';\nimport { useInjectFormItemContext } from '../form/FormItemContext';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport { CheckboxGroupContextKey, checkboxGroupProps } from './interface';\n// CSSINJS\nimport useStyle from './style';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ACheckboxGroup',\n  inheritAttrs: false,\n  props: checkboxGroupProps(),\n  // emits: ['change', 'update:value'],\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs,\n      emit,\n      expose\n    } = _ref;\n    const formItemContext = useInjectFormItemContext();\n    const {\n      prefixCls,\n      direction\n    } = useConfigInject('checkbox', props);\n    const groupPrefixCls = computed(() => `${prefixCls.value}-group`);\n    // style\n    const [wrapSSR, hashId] = useStyle(groupPrefixCls);\n    const mergedValue = ref((props.value === undefined ? props.defaultValue : props.value) || []);\n    watch(() => props.value, () => {\n      mergedValue.value = props.value || [];\n    });\n    const options = computed(() => {\n      return props.options.map(option => {\n        if (typeof option === 'string' || typeof option === 'number') {\n          return {\n            label: option,\n            value: option\n          };\n        }\n        return option;\n      });\n    });\n    const triggerUpdate = ref(Symbol());\n    const registeredValuesMap = ref(new Map());\n    const cancelValue = id => {\n      registeredValuesMap.value.delete(id);\n      triggerUpdate.value = Symbol();\n    };\n    const registerValue = (id, value) => {\n      registeredValuesMap.value.set(id, value);\n      triggerUpdate.value = Symbol();\n    };\n    const registeredValues = ref(new Map());\n    watch(triggerUpdate, () => {\n      const valuseMap = new Map();\n      for (const value of registeredValuesMap.value.values()) {\n        valuseMap.set(value, true);\n      }\n      registeredValues.value = valuseMap;\n    });\n    const toggleOption = option => {\n      const optionIndex = mergedValue.value.indexOf(option.value);\n      const value = [...mergedValue.value];\n      if (optionIndex === -1) {\n        value.push(option.value);\n      } else {\n        value.splice(optionIndex, 1);\n      }\n      if (props.value === undefined) {\n        mergedValue.value = value;\n      }\n      const val = value.filter(val => registeredValues.value.has(val)).sort((a, b) => {\n        const indexA = options.value.findIndex(opt => opt.value === a);\n        const indexB = options.value.findIndex(opt => opt.value === b);\n        return indexA - indexB;\n      });\n      emit('update:value', val);\n      emit('change', val);\n      formItemContext.onFieldChange();\n    };\n    provide(CheckboxGroupContextKey, {\n      cancelValue,\n      registerValue,\n      toggleOption,\n      mergedValue,\n      name: computed(() => props.name),\n      disabled: computed(() => props.disabled)\n    });\n    expose({\n      mergedValue\n    });\n    return () => {\n      var _a;\n      const {\n        id = formItemContext.id.value\n      } = props;\n      let children = null;\n      if (options.value && options.value.length > 0) {\n        children = options.value.map(option => {\n          var _a;\n          return _createVNode(Checkbox, {\n            \"prefixCls\": prefixCls.value,\n            \"key\": option.value.toString(),\n            \"disabled\": 'disabled' in option ? option.disabled : props.disabled,\n            \"indeterminate\": option.indeterminate,\n            \"value\": option.value,\n            \"checked\": mergedValue.value.indexOf(option.value) !== -1,\n            \"onChange\": option.onChange,\n            \"class\": `${groupPrefixCls.value}-item`\n          }, {\n            default: () => [slots.label !== undefined ? (_a = slots.label) === null || _a === void 0 ? void 0 : _a.call(slots, option) : option.label]\n          });\n        });\n      }\n      return wrapSSR(_createVNode(\"div\", _objectSpread(_objectSpread({}, attrs), {}, {\n        \"class\": [groupPrefixCls.value, {\n          [`${groupPrefixCls.value}-rtl`]: direction.value === 'rtl'\n        }, attrs.class, hashId.value],\n        \"id\": id\n      }), [children || ((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots))]));\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}