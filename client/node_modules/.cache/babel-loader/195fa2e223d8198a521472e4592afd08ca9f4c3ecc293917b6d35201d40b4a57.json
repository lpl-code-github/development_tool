{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport Notification from '../vc-notification';\nimport LoadingOutlined from \"@ant-design/icons-vue/es/icons/LoadingOutlined\";\nimport ExclamationCircleFilled from \"@ant-design/icons-vue/es/icons/ExclamationCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons-vue/es/icons/CloseCircleFilled\";\nimport CheckCircleFilled from \"@ant-design/icons-vue/es/icons/CheckCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons-vue/es/icons/InfoCircleFilled\";\nimport classNames from '../_util/classNames';\nimport useStyle from './style';\nimport useMessage from './useMessage';\nlet defaultDuration = 3;\nlet defaultTop;\nlet messageInstance;\nlet key = 1;\nlet localPrefixCls = '';\nlet transitionName = 'move-up';\nlet hasTransitionName = false;\nlet getContainer = () => document.body;\nlet maxCount;\nlet rtl = false;\nexport function getKeyThenIncreaseKey() {\n  return key++;\n}\nfunction setMessageConfig(options) {\n  if (options.top !== undefined) {\n    defaultTop = options.top;\n    messageInstance = null; // delete messageInstance for new defaultTop\n  }\n\n  if (options.duration !== undefined) {\n    defaultDuration = options.duration;\n  }\n  if (options.prefixCls !== undefined) {\n    localPrefixCls = options.prefixCls;\n  }\n  if (options.getContainer !== undefined) {\n    getContainer = options.getContainer;\n    messageInstance = null; // delete messageInstance for new getContainer\n  }\n\n  if (options.transitionName !== undefined) {\n    transitionName = options.transitionName;\n    messageInstance = null; // delete messageInstance for new transitionName\n    hasTransitionName = true;\n  }\n  if (options.maxCount !== undefined) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n  if (options.rtl !== undefined) {\n    rtl = options.rtl;\n  }\n}\nfunction getMessageInstance(args, callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n  Notification.newInstance({\n    appContext: args.appContext,\n    prefixCls: args.prefixCls || localPrefixCls,\n    rootPrefixCls: args.rootPrefixCls,\n    transitionName,\n    hasTransitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer || args.getPopupContainer,\n    maxCount,\n    name: 'message',\n    useStyle\n  }, instance => {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n    messageInstance = instance;\n    callback(instance);\n  });\n}\nconst typeToIcon = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\nexport const typeList = Object.keys(typeToIcon);\nfunction notice(args) {\n  const duration = args.duration !== undefined ? args.duration : defaultDuration;\n  const target = args.key || getKeyThenIncreaseKey();\n  const closePromise = new Promise(resolve => {\n    const callback = () => {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n      return resolve(true);\n    };\n    getMessageInstance(args, instance => {\n      instance.notice({\n        key: target,\n        duration,\n        style: args.style || {},\n        class: args.class,\n        content: _ref => {\n          let {\n            prefixCls\n          } = _ref;\n          const Icon = typeToIcon[args.type];\n          const iconNode = Icon ? _createVNode(Icon, null, null) : '';\n          const messageClass = classNames(`${prefixCls}-custom-content`, {\n            [`${prefixCls}-${args.type}`]: args.type,\n            [`${prefixCls}-rtl`]: rtl === true\n          });\n          return _createVNode(\"div\", {\n            \"class\": messageClass\n          }, [typeof args.icon === 'function' ? args.icon() : args.icon || iconNode, _createVNode(\"span\", null, [typeof args.content === 'function' ? args.content() : args.content])]);\n        },\n        onClose: callback,\n        onClick: args.onClick\n      });\n    });\n  });\n  const result = () => {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n  result.then = (filled, rejected) => closePromise.then(filled, rejected);\n  result.promise = closePromise;\n  return result;\n}\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\nconst api = {\n  open: notice,\n  config: setMessageConfig,\n  destroy(messageKey) {\n    if (messageInstance) {\n      if (messageKey) {\n        const {\n          removeNotice\n        } = messageInstance;\n        removeNotice(messageKey);\n      } else {\n        const {\n          destroy\n        } = messageInstance;\n        destroy();\n        messageInstance = null;\n      }\n    }\n  }\n};\nexport function attachTypeApi(originalApi, type) {\n  originalApi[type] = (content, duration, onClose) => {\n    if (isArgsProps(content)) {\n      return originalApi.open(_extends(_extends({}, content), {\n        type\n      }));\n    }\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n    return originalApi.open({\n      content,\n      duration,\n      type,\n      onClose\n    });\n  };\n}\ntypeList.forEach(type => attachTypeApi(api, type));\napi.warn = api.warning;\napi.useMessage = useMessage;\n/** @private test Only function. Not work on production */\nexport const getInstance = () => process.env.NODE_ENV === 'test' ? messageInstance : null;\nexport default api;","map":{"version":3,"names":["_extends","createVNode","_createVNode","Notification","LoadingOutlined","ExclamationCircleFilled","CloseCircleFilled","CheckCircleFilled","InfoCircleFilled","classNames","useStyle","useMessage","defaultDuration","defaultTop","messageInstance","key","localPrefixCls","transitionName","hasTransitionName","getContainer","document","body","maxCount","rtl","getKeyThenIncreaseKey","setMessageConfig","options","top","undefined","duration","prefixCls","getMessageInstance","args","callback","newInstance","appContext","rootPrefixCls","style","getPopupContainer","name","instance","typeToIcon","info","success","error","warning","loading","typeList","Object","keys","notice","target","closePromise","Promise","resolve","onClose","class","content","_ref","Icon","type","iconNode","messageClass","icon","onClick","result","removeNotice","then","filled","rejected","promise","isArgsProps","prototype","toString","call","api","open","config","destroy","messageKey","attachTypeApi","originalApi","forEach","warn","getInstance","process","env","NODE_ENV"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/message/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport Notification from '../vc-notification';\nimport LoadingOutlined from \"@ant-design/icons-vue/es/icons/LoadingOutlined\";\nimport ExclamationCircleFilled from \"@ant-design/icons-vue/es/icons/ExclamationCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons-vue/es/icons/CloseCircleFilled\";\nimport CheckCircleFilled from \"@ant-design/icons-vue/es/icons/CheckCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons-vue/es/icons/InfoCircleFilled\";\nimport classNames from '../_util/classNames';\nimport useStyle from './style';\nimport useMessage from './useMessage';\nlet defaultDuration = 3;\nlet defaultTop;\nlet messageInstance;\nlet key = 1;\nlet localPrefixCls = '';\nlet transitionName = 'move-up';\nlet hasTransitionName = false;\nlet getContainer = () => document.body;\nlet maxCount;\nlet rtl = false;\nexport function getKeyThenIncreaseKey() {\n  return key++;\n}\nfunction setMessageConfig(options) {\n  if (options.top !== undefined) {\n    defaultTop = options.top;\n    messageInstance = null; // delete messageInstance for new defaultTop\n  }\n\n  if (options.duration !== undefined) {\n    defaultDuration = options.duration;\n  }\n  if (options.prefixCls !== undefined) {\n    localPrefixCls = options.prefixCls;\n  }\n  if (options.getContainer !== undefined) {\n    getContainer = options.getContainer;\n    messageInstance = null; // delete messageInstance for new getContainer\n  }\n\n  if (options.transitionName !== undefined) {\n    transitionName = options.transitionName;\n    messageInstance = null; // delete messageInstance for new transitionName\n    hasTransitionName = true;\n  }\n  if (options.maxCount !== undefined) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n  if (options.rtl !== undefined) {\n    rtl = options.rtl;\n  }\n}\nfunction getMessageInstance(args, callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n  Notification.newInstance({\n    appContext: args.appContext,\n    prefixCls: args.prefixCls || localPrefixCls,\n    rootPrefixCls: args.rootPrefixCls,\n    transitionName,\n    hasTransitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer || args.getPopupContainer,\n    maxCount,\n    name: 'message',\n    useStyle\n  }, instance => {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n    messageInstance = instance;\n    callback(instance);\n  });\n}\nconst typeToIcon = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\nexport const typeList = Object.keys(typeToIcon);\nfunction notice(args) {\n  const duration = args.duration !== undefined ? args.duration : defaultDuration;\n  const target = args.key || getKeyThenIncreaseKey();\n  const closePromise = new Promise(resolve => {\n    const callback = () => {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n      return resolve(true);\n    };\n    getMessageInstance(args, instance => {\n      instance.notice({\n        key: target,\n        duration,\n        style: args.style || {},\n        class: args.class,\n        content: _ref => {\n          let {\n            prefixCls\n          } = _ref;\n          const Icon = typeToIcon[args.type];\n          const iconNode = Icon ? _createVNode(Icon, null, null) : '';\n          const messageClass = classNames(`${prefixCls}-custom-content`, {\n            [`${prefixCls}-${args.type}`]: args.type,\n            [`${prefixCls}-rtl`]: rtl === true\n          });\n          return _createVNode(\"div\", {\n            \"class\": messageClass\n          }, [typeof args.icon === 'function' ? args.icon() : args.icon || iconNode, _createVNode(\"span\", null, [typeof args.content === 'function' ? args.content() : args.content])]);\n        },\n        onClose: callback,\n        onClick: args.onClick\n      });\n    });\n  });\n  const result = () => {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n  result.then = (filled, rejected) => closePromise.then(filled, rejected);\n  result.promise = closePromise;\n  return result;\n}\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\nconst api = {\n  open: notice,\n  config: setMessageConfig,\n  destroy(messageKey) {\n    if (messageInstance) {\n      if (messageKey) {\n        const {\n          removeNotice\n        } = messageInstance;\n        removeNotice(messageKey);\n      } else {\n        const {\n          destroy\n        } = messageInstance;\n        destroy();\n        messageInstance = null;\n      }\n    }\n  }\n};\nexport function attachTypeApi(originalApi, type) {\n  originalApi[type] = (content, duration, onClose) => {\n    if (isArgsProps(content)) {\n      return originalApi.open(_extends(_extends({}, content), {\n        type\n      }));\n    }\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n    return originalApi.open({\n      content,\n      duration,\n      type,\n      onClose\n    });\n  };\n}\ntypeList.forEach(type => attachTypeApi(api, type));\napi.warn = api.warning;\napi.useMessage = useMessage;\n/** @private test Only function. Not work on production */\nexport const getInstance = () => process.env.NODE_ENV === 'test' ? messageInstance : null;\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}