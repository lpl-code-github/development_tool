{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { placements } from '../vc-tooltip/src/placements';\nconst autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nconst autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nconst targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n  return _extends(_extends({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\nexport default function getPlacements(config) {\n  const {\n    arrowWidth = 4,\n    horizontalArrowShift = 16,\n    verticalArrowShift = 8,\n    autoAdjustOverflow,\n    arrowPointAtCenter\n  } = config;\n  const placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(key => {\n    placementMap[key] = arrowPointAtCenter ? _extends(_extends({}, placementMap[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset\n    }) : _extends(_extends({}, placements[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}","map":{"version":3,"names":["_extends","placements","autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","getOverflowOptions","autoAdjustOverflow","getPlacements","config","arrowWidth","horizontalArrowShift","verticalArrowShift","arrowPointAtCenter","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","Object","keys","forEach","key","overflow","ignoreShake"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/_util/placements.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { placements } from '../vc-tooltip/src/placements';\nconst autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nconst autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nconst targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n  return _extends(_extends({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\nexport default function getPlacements(config) {\n  const {\n    arrowWidth = 4,\n    horizontalArrowShift = 16,\n    verticalArrowShift = 8,\n    autoAdjustOverflow,\n    arrowPointAtCenter\n  } = config;\n  const placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(key => {\n    placementMap[key] = arrowPointAtCenter ? _extends(_extends({}, placementMap[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset\n    }) : _extends(_extends({}, placements[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}