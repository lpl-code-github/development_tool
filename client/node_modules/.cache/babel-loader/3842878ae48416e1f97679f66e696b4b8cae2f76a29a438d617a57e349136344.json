{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-redeclare */\nimport { useStyleRegister } from '../../_util/cssinjs';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nimport { computed } from 'vue';\nimport { useConfigContextInject } from '../../config-provider/context';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken) {\n  return _prefixCls => {\n    const prefixCls = computed(() => _prefixCls === null || _prefixCls === void 0 ? void 0 : _prefixCls.value);\n    const [theme, token, hashId] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls\n    } = useConfigContextInject();\n    const rootPrefixCls = computed(() => getPrefixCls());\n    const sharedInfo = computed(() => {\n      return {\n        theme: theme.value,\n        token: token.value,\n        hashId: hashId.value,\n        path: ['Shared', rootPrefixCls.value]\n      };\n    });\n    // Generate style for all a tags in antd component.\n    useStyleRegister(sharedInfo, () => [{\n      // Link\n      '&': genLinkStyle(token.value)\n    }]);\n    const componentInfo = computed(() => {\n      return {\n        theme: theme.value,\n        token: token.value,\n        hashId: hashId.value,\n        path: [component, prefixCls.value, iconPrefixCls.value]\n      };\n    });\n    return [useStyleRegister(componentInfo, () => {\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token.value);\n      const defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(proxyToken) : getDefaultToken;\n      const mergedComponentToken = _extends(_extends({}, defaultComponentToken), token.value[component]);\n      const componentCls = `.${prefixCls.value}`;\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls: prefixCls.value,\n        iconCls: `.${iconPrefixCls.value}`,\n        antCls: `.${rootPrefixCls.value}`\n      }, mergedComponentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId: hashId.value,\n        prefixCls: prefixCls.value,\n        rootPrefixCls: rootPrefixCls.value,\n        iconPrefixCls: iconPrefixCls.value,\n        overrideComponentToken: token.value[component]\n      });\n      flush(component, mergedComponentToken);\n      return [genCommonStyle(token.value, prefixCls.value), styleInterpolation];\n    }), hashId];\n  };\n}","map":{"version":3,"names":["_extends","useStyleRegister","genCommonStyle","genLinkStyle","mergeToken","statisticToken","useToken","computed","useConfigContextInject","genComponentStyleHook","component","styleFn","getDefaultToken","_prefixCls","prefixCls","value","theme","token","hashId","getPrefixCls","iconPrefixCls","rootPrefixCls","sharedInfo","path","componentInfo","proxyToken","flush","defaultComponentToken","mergedComponentToken","componentCls","mergedToken","iconCls","antCls","styleInterpolation","overrideComponentToken"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/theme/util/genComponentStyleHook.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-redeclare */\nimport { useStyleRegister } from '../../_util/cssinjs';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nimport { computed } from 'vue';\nimport { useConfigContextInject } from '../../config-provider/context';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken) {\n  return _prefixCls => {\n    const prefixCls = computed(() => _prefixCls === null || _prefixCls === void 0 ? void 0 : _prefixCls.value);\n    const [theme, token, hashId] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls\n    } = useConfigContextInject();\n    const rootPrefixCls = computed(() => getPrefixCls());\n    const sharedInfo = computed(() => {\n      return {\n        theme: theme.value,\n        token: token.value,\n        hashId: hashId.value,\n        path: ['Shared', rootPrefixCls.value]\n      };\n    });\n    // Generate style for all a tags in antd component.\n    useStyleRegister(sharedInfo, () => [{\n      // Link\n      '&': genLinkStyle(token.value)\n    }]);\n    const componentInfo = computed(() => {\n      return {\n        theme: theme.value,\n        token: token.value,\n        hashId: hashId.value,\n        path: [component, prefixCls.value, iconPrefixCls.value]\n      };\n    });\n    return [useStyleRegister(componentInfo, () => {\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token.value);\n      const defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(proxyToken) : getDefaultToken;\n      const mergedComponentToken = _extends(_extends({}, defaultComponentToken), token.value[component]);\n      const componentCls = `.${prefixCls.value}`;\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls: prefixCls.value,\n        iconCls: `.${iconPrefixCls.value}`,\n        antCls: `.${rootPrefixCls.value}`\n      }, mergedComponentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId: hashId.value,\n        prefixCls: prefixCls.value,\n        rootPrefixCls: rootPrefixCls.value,\n        iconPrefixCls: iconPrefixCls.value,\n        overrideComponentToken: token.value[component]\n      });\n      flush(component, mergedComponentToken);\n      return [genCommonStyle(token.value, prefixCls.value), styleInterpolation];\n    }), hashId];\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}