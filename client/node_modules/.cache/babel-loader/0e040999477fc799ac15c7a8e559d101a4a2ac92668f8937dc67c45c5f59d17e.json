{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed } from 'vue';\nimport useMemo from '../../_util/hooks/useMemo';\nimport shallowequal from '../../_util/shallowequal';\nimport { formatValue } from '../utils/dateUtil';\nexport default function useValueTexts(value, _ref) {\n  let {\n    formatList,\n    generateConfig,\n    locale\n  } = _ref;\n  const texts = useMemo(() => {\n    if (!value.value) {\n      return [[''], ''];\n    }\n    // We will convert data format back to first format\n    let firstValueText = '';\n    const fullValueTexts = [];\n    for (let i = 0; i < formatList.value.length; i += 1) {\n      const format = formatList.value[i];\n      const formatStr = formatValue(value.value, {\n        generateConfig: generateConfig.value,\n        locale: locale.value,\n        format\n      });\n      fullValueTexts.push(formatStr);\n      if (i === 0) {\n        firstValueText = formatStr;\n      }\n    }\n    return [fullValueTexts, firstValueText];\n  }, [value, formatList], (next, prev) => prev[0] !== next[0] || !shallowequal(prev[1], next[1]));\n  const fullValueTexts = computed(() => texts.value[0]);\n  const firstValueText = computed(() => texts.value[1]);\n  return [fullValueTexts, firstValueText];\n}","map":{"version":3,"names":["computed","useMemo","shallowequal","formatValue","useValueTexts","value","_ref","formatList","generateConfig","locale","texts","firstValueText","fullValueTexts","i","length","format","formatStr","push","next","prev"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-picker/hooks/useValueTexts.js"],"sourcesContent":["import { computed } from 'vue';\nimport useMemo from '../../_util/hooks/useMemo';\nimport shallowequal from '../../_util/shallowequal';\nimport { formatValue } from '../utils/dateUtil';\nexport default function useValueTexts(value, _ref) {\n  let {\n    formatList,\n    generateConfig,\n    locale\n  } = _ref;\n  const texts = useMemo(() => {\n    if (!value.value) {\n      return [[''], ''];\n    }\n    // We will convert data format back to first format\n    let firstValueText = '';\n    const fullValueTexts = [];\n    for (let i = 0; i < formatList.value.length; i += 1) {\n      const format = formatList.value[i];\n      const formatStr = formatValue(value.value, {\n        generateConfig: generateConfig.value,\n        locale: locale.value,\n        format\n      });\n      fullValueTexts.push(formatStr);\n      if (i === 0) {\n        firstValueText = formatStr;\n      }\n    }\n    return [fullValueTexts, firstValueText];\n  }, [value, formatList], (next, prev) => prev[0] !== next[0] || !shallowequal(prev[1], next[1]));\n  const fullValueTexts = computed(() => texts.value[0]);\n  const firstValueText = computed(() => texts.value[1]);\n  return [fullValueTexts, firstValueText];\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,YAAY,MAAM,0BAA0B;AACnD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACjD,IAAI;IACFC,UAAU;IACVC,cAAc;IACdC;EACF,CAAC,GAAGH,IAAI;EACR,MAAMI,KAAK,GAAGT,OAAO,CAAC,MAAM;IAC1B,IAAI,CAACI,KAAK,CAACA,KAAK,EAAE;MAChB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IACnB;IACA;IACA,IAAIM,cAAc,GAAG,EAAE;IACvB,MAAMC,cAAc,GAAG,EAAE;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,UAAU,CAACF,KAAK,CAACS,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACnD,MAAME,MAAM,GAAGR,UAAU,CAACF,KAAK,CAACQ,CAAC,CAAC;MAClC,MAAMG,SAAS,GAAGb,WAAW,CAACE,KAAK,CAACA,KAAK,EAAE;QACzCG,cAAc,EAAEA,cAAc,CAACH,KAAK;QACpCI,MAAM,EAAEA,MAAM,CAACJ,KAAK;QACpBU;MACF,CAAC,CAAC;MACFH,cAAc,CAACK,IAAI,CAACD,SAAS,CAAC;MAC9B,IAAIH,CAAC,KAAK,CAAC,EAAE;QACXF,cAAc,GAAGK,SAAS;MAC5B;IACF;IACA,OAAO,CAACJ,cAAc,EAAED,cAAc,CAAC;EACzC,CAAC,EAAE,CAACN,KAAK,EAAEE,UAAU,CAAC,EAAE,CAACW,IAAI,EAAEC,IAAI,KAAKA,IAAI,CAAC,CAAC,CAAC,KAAKD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAChB,YAAY,CAACiB,IAAI,CAAC,CAAC,CAAC,EAAED,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/F,MAAMN,cAAc,GAAGZ,QAAQ,CAAC,MAAMU,KAAK,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC;EACrD,MAAMM,cAAc,GAAGX,QAAQ,CAAC,MAAMU,KAAK,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC;EACrD,OAAO,CAACO,cAAc,EAAED,cAAc,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}