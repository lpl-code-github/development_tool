{"ast":null,"code":"import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport * as moment from 'moment';\nimport padStart from 'lodash/padStart';\nimport interopDefault from '../_util/interopDefault';\n\n// Countdown\nvar timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365],\n// years\n['M', 1000 * 60 * 60 * 24 * 30],\n// months\n['D', 1000 * 60 * 60 * 24],\n// days\n['H', 1000 * 60 * 60],\n// hours\n['m', 1000 * 60],\n// minutes\n['s', 1000],\n// seconds\n['S', 1]];\nexport function formatTimeStr(duration, format) {\n  var leftDuration = duration;\n  var escapeRegex = /\\[[^\\]]*\\]/g;\n  var keepList = (format.match(escapeRegex) || []).map(function (str) {\n    return str.slice(1, -1);\n  });\n  var templateText = format.replace(escapeRegex, '[]');\n  var replacedText = timeUnits.reduce(function (current, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      unit = _ref2[1];\n    if (current.indexOf(name) !== -1) {\n      var value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(name + '+', 'g'), function (match) {\n        var len = match.length;\n        return padStart(value.toString(), len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  var index = 0;\n  return replacedText.replace(escapeRegex, function () {\n    var match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nexport function formatCountdown(value, config) {\n  var _config$format = config.format,\n    format = _config$format === undefined ? '' : _config$format;\n  var target = interopDefault(moment)(value).valueOf();\n  var current = interopDefault(moment)().valueOf();\n  var diff = Math.max(target - current, 0);\n  return formatTimeStr(diff, format);\n}","map":{"version":3,"names":["_slicedToArray","moment","padStart","interopDefault","timeUnits","formatTimeStr","duration","format","leftDuration","escapeRegex","keepList","match","map","str","slice","templateText","replace","replacedText","reduce","current","_ref","_ref2","name","unit","indexOf","value","Math","floor","RegExp","len","length","toString","index","formatCountdown","config","_config$format","undefined","target","valueOf","diff","max"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/statistic/utils.js"],"sourcesContent":["import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport * as moment from 'moment';\nimport padStart from 'lodash/padStart';\n\nimport interopDefault from '../_util/interopDefault';\n\n// Countdown\nvar timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365], // years\n['M', 1000 * 60 * 60 * 24 * 30], // months\n['D', 1000 * 60 * 60 * 24], // days\n['H', 1000 * 60 * 60], // hours\n['m', 1000 * 60], // minutes\n['s', 1000], // seconds\n['S', 1]];\n\nexport function formatTimeStr(duration, format) {\n  var leftDuration = duration;\n\n  var escapeRegex = /\\[[^\\]]*\\]/g;\n  var keepList = (format.match(escapeRegex) || []).map(function (str) {\n    return str.slice(1, -1);\n  });\n  var templateText = format.replace(escapeRegex, '[]');\n\n  var replacedText = timeUnits.reduce(function (current, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        unit = _ref2[1];\n\n    if (current.indexOf(name) !== -1) {\n      var value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(name + '+', 'g'), function (match) {\n        var len = match.length;\n        return padStart(value.toString(), len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n\n  var index = 0;\n  return replacedText.replace(escapeRegex, function () {\n    var match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\n\nexport function formatCountdown(value, config) {\n  var _config$format = config.format,\n      format = _config$format === undefined ? '' : _config$format;\n\n  var target = interopDefault(moment)(value).valueOf();\n  var current = interopDefault(moment)().valueOf();\n  var diff = Math.max(target - current, 0);\n  return formatTimeStr(diff, format);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}