{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport RcDropdown from '../vc-dropdown/src/index';\nimport DropdownButton from './dropdown-button';\nimport PropTypes from '../_util/vue-types';\nimport { cloneElement } from '../_util/vnode';\nimport { getOptionProps, getPropsData, getComponentFromProp, getListeners } from '../_util/props-util';\nimport getDropdownProps from './getDropdownProps';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport Icon from '../icon';\nvar DropdownProps = getDropdownProps();\nvar Dropdown = {\n  name: 'ADropdown',\n  props: _extends({}, DropdownProps, {\n    prefixCls: PropTypes.string,\n    mouseEnterDelay: PropTypes.number.def(0.15),\n    mouseLeaveDelay: PropTypes.number.def(0.1),\n    placement: DropdownProps.placement.def('bottomLeft')\n  }),\n  model: {\n    prop: 'visible',\n    event: 'visibleChange'\n  },\n  provide: function provide() {\n    return {\n      savePopupRef: this.savePopupRef\n    };\n  },\n  inject: {\n    configProvider: {\n      'default': function _default() {\n        return ConfigConsumerProps;\n      }\n    }\n  },\n  methods: {\n    savePopupRef: function savePopupRef(ref) {\n      this.popupRef = ref;\n    },\n    getTransitionName: function getTransitionName() {\n      var _$props = this.$props,\n        _$props$placement = _$props.placement,\n        placement = _$props$placement === undefined ? '' : _$props$placement,\n        transitionName = _$props.transitionName;\n      if (transitionName !== undefined) {\n        return transitionName;\n      }\n      if (placement.indexOf('top') >= 0) {\n        return 'slide-down';\n      }\n      return 'slide-up';\n    },\n    renderOverlay: function renderOverlay(prefixCls) {\n      var h = this.$createElement;\n      var overlay = getComponentFromProp(this, 'overlay');\n      var overlayNode = Array.isArray(overlay) ? overlay[0] : overlay;\n      // menu cannot be selectable in dropdown defaultly\n      // menu should be focusable in dropdown defaultly\n      var overlayProps = overlayNode && getPropsData(overlayNode);\n      var _ref = overlayProps || {},\n        _ref$selectable = _ref.selectable,\n        selectable = _ref$selectable === undefined ? false : _ref$selectable,\n        _ref$focusable = _ref.focusable,\n        focusable = _ref$focusable === undefined ? true : _ref$focusable;\n      var expandIcon = h('span', {\n        'class': prefixCls + '-menu-submenu-arrow'\n      }, [h(Icon, {\n        attrs: {\n          type: 'right'\n        },\n        'class': prefixCls + '-menu-submenu-arrow-icon'\n      })]);\n      var fixedModeOverlay = overlayNode && overlayNode.componentOptions ? cloneElement(overlayNode, {\n        props: {\n          mode: 'vertical',\n          selectable: selectable,\n          focusable: focusable,\n          expandIcon: expandIcon\n        }\n      }) : overlay;\n      return fixedModeOverlay;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var $slots = this.$slots;\n    var props = getOptionProps(this);\n    var customizePrefixCls = props.prefixCls,\n      trigger = props.trigger,\n      disabled = props.disabled,\n      getPopupContainer = props.getPopupContainer;\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n    var dropdownTrigger = cloneElement($slots['default'], {\n      'class': prefixCls + '-trigger',\n      props: {\n        disabled: disabled\n      }\n    });\n    var triggerActions = disabled ? [] : trigger;\n    var alignPoint = void 0;\n    if (triggerActions && triggerActions.indexOf('contextmenu') !== -1) {\n      alignPoint = true;\n    }\n    var dropdownProps = {\n      props: _extends({\n        alignPoint: alignPoint\n      }, props, {\n        prefixCls: prefixCls,\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        transitionName: this.getTransitionName(),\n        trigger: triggerActions\n      }),\n      on: getListeners(this)\n    };\n    return h(RcDropdown, dropdownProps, [dropdownTrigger, h('template', {\n      slot: 'overlay'\n    }, [this.renderOverlay(prefixCls)])]);\n  }\n};\nDropdown.Button = DropdownButton;\nexport default Dropdown;\nexport { DropdownProps };","map":{"version":3,"names":["_extends","RcDropdown","DropdownButton","PropTypes","cloneElement","getOptionProps","getPropsData","getComponentFromProp","getListeners","getDropdownProps","ConfigConsumerProps","Icon","DropdownProps","Dropdown","name","props","prefixCls","string","mouseEnterDelay","number","def","mouseLeaveDelay","placement","model","prop","event","provide","savePopupRef","inject","configProvider","_default","methods","ref","popupRef","getTransitionName","_$props","$props","_$props$placement","undefined","transitionName","indexOf","renderOverlay","h","$createElement","overlay","overlayNode","Array","isArray","overlayProps","_ref","_ref$selectable","selectable","_ref$focusable","focusable","expandIcon","attrs","type","fixedModeOverlay","componentOptions","mode","render","arguments","$slots","customizePrefixCls","trigger","disabled","getPopupContainer","getContextPopupContainer","getPrefixCls","dropdownTrigger","triggerActions","alignPoint","dropdownProps","on","slot","Button"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/dropdown/dropdown.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport RcDropdown from '../vc-dropdown/src/index';\nimport DropdownButton from './dropdown-button';\nimport PropTypes from '../_util/vue-types';\nimport { cloneElement } from '../_util/vnode';\nimport { getOptionProps, getPropsData, getComponentFromProp, getListeners } from '../_util/props-util';\nimport getDropdownProps from './getDropdownProps';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport Icon from '../icon';\n\nvar DropdownProps = getDropdownProps();\nvar Dropdown = {\n  name: 'ADropdown',\n  props: _extends({}, DropdownProps, {\n    prefixCls: PropTypes.string,\n    mouseEnterDelay: PropTypes.number.def(0.15),\n    mouseLeaveDelay: PropTypes.number.def(0.1),\n    placement: DropdownProps.placement.def('bottomLeft')\n  }),\n  model: {\n    prop: 'visible',\n    event: 'visibleChange'\n  },\n  provide: function provide() {\n    return {\n      savePopupRef: this.savePopupRef\n    };\n  },\n\n  inject: {\n    configProvider: { 'default': function _default() {\n        return ConfigConsumerProps;\n      } }\n  },\n  methods: {\n    savePopupRef: function savePopupRef(ref) {\n      this.popupRef = ref;\n    },\n    getTransitionName: function getTransitionName() {\n      var _$props = this.$props,\n          _$props$placement = _$props.placement,\n          placement = _$props$placement === undefined ? '' : _$props$placement,\n          transitionName = _$props.transitionName;\n\n      if (transitionName !== undefined) {\n        return transitionName;\n      }\n      if (placement.indexOf('top') >= 0) {\n        return 'slide-down';\n      }\n      return 'slide-up';\n    },\n    renderOverlay: function renderOverlay(prefixCls) {\n      var h = this.$createElement;\n\n      var overlay = getComponentFromProp(this, 'overlay');\n      var overlayNode = Array.isArray(overlay) ? overlay[0] : overlay;\n      // menu cannot be selectable in dropdown defaultly\n      // menu should be focusable in dropdown defaultly\n      var overlayProps = overlayNode && getPropsData(overlayNode);\n\n      var _ref = overlayProps || {},\n          _ref$selectable = _ref.selectable,\n          selectable = _ref$selectable === undefined ? false : _ref$selectable,\n          _ref$focusable = _ref.focusable,\n          focusable = _ref$focusable === undefined ? true : _ref$focusable;\n\n      var expandIcon = h(\n        'span',\n        { 'class': prefixCls + '-menu-submenu-arrow' },\n        [h(Icon, {\n          attrs: { type: 'right' },\n          'class': prefixCls + '-menu-submenu-arrow-icon' })]\n      );\n\n      var fixedModeOverlay = overlayNode && overlayNode.componentOptions ? cloneElement(overlayNode, {\n        props: {\n          mode: 'vertical',\n          selectable: selectable,\n          focusable: focusable,\n          expandIcon: expandIcon\n        }\n      }) : overlay;\n      return fixedModeOverlay;\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var $slots = this.$slots;\n\n    var props = getOptionProps(this);\n    var customizePrefixCls = props.prefixCls,\n        trigger = props.trigger,\n        disabled = props.disabled,\n        getPopupContainer = props.getPopupContainer;\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n\n    var dropdownTrigger = cloneElement($slots['default'], {\n      'class': prefixCls + '-trigger',\n      props: {\n        disabled: disabled\n      }\n    });\n    var triggerActions = disabled ? [] : trigger;\n    var alignPoint = void 0;\n    if (triggerActions && triggerActions.indexOf('contextmenu') !== -1) {\n      alignPoint = true;\n    }\n    var dropdownProps = {\n      props: _extends({\n        alignPoint: alignPoint\n      }, props, {\n        prefixCls: prefixCls,\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        transitionName: this.getTransitionName(),\n        trigger: triggerActions\n      }),\n      on: getListeners(this)\n    };\n    return h(\n      RcDropdown,\n      dropdownProps,\n      [dropdownTrigger, h(\n        'template',\n        { slot: 'overlay' },\n        [this.renderOverlay(prefixCls)]\n      )]\n    );\n  }\n};\n\nDropdown.Button = DropdownButton;\nexport default Dropdown;\nexport { DropdownProps };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}