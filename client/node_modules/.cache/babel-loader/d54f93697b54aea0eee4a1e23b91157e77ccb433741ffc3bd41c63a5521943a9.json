{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Script\",\n  data() {\n    return {\n      columns: [{\n        title: '名称',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '标签',\n        key: 'tags',\n        dataIndex: 'tags',\n        filters: [],\n        filteredValue: filteredInfo.name || null,\n        onFilter: (value, record) => record.name.includes(value),\n        scopedSlots: {\n          customRender: 'tags'\n        }\n      }, {\n        title: '路径',\n        dataIndex: 'path',\n        key: 'age'\n      }, {\n        title: '创建时间',\n        dataIndex: 'created_at',\n        key: 'address'\n      }, {\n        title: 'Action',\n        dataIndex: '',\n        key: 'x',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      scriptData: []\n    };\n  },\n  computed: {\n    columns() {\n      let {\n        sortedInfo,\n        filteredInfo\n      } = this;\n      sortedInfo = sortedInfo || {};\n      filteredInfo = filteredInfo || {};\n      const columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [{\n          text: 'Joe',\n          value: 'Joe'\n        }, {\n          text: 'Jim',\n          value: 'Jim'\n        }],\n        filteredValue: filteredInfo.name || null,\n        onFilter: (value, record) => record.name.includes(value),\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n        ellipsis: true\n      }, {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        sorter: (a, b) => a.age - b.age,\n        sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order\n      }, {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        filters: [{\n          text: 'London',\n          value: 'London'\n        }, {\n          text: 'New York',\n          value: 'New York'\n        }],\n        filteredValue: filteredInfo.address || null,\n        onFilter: (value, record) => record.address.includes(value),\n        sorter: (a, b) => a.address.length - b.address.length,\n        sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n        ellipsis: true\n      }];\n      return columns;\n    }\n  },\n  created() {\n    this.getScriptData();\n  },\n  methods: {\n    onSearch(value) {\n      console.log(value);\n    },\n    filterData() {},\n    getScriptData() {\n      this.scriptData = [{\n        id: 1,\n        name: 'John Brown',\n        path: 32,\n        tags: [{\n          color: \"#108ee9\",\n          text: \"db\"\n        }],\n        created_at: 'New York No. 1 Lake Park',\n        description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'\n      }, {\n        id: 2,\n        name: 'Jim Green',\n        path: 42,\n        tags: [{\n          color: \"#690c3d\",\n          text: \"test\"\n        }],\n        created_at: 'London No. 1 Lake Park',\n        description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'\n      }, {\n        id: 3,\n        name: 'Joe Black',\n        path: 32,\n        tags: [{\n          color: \"#3a9f75\",\n          text: \"env\"\n        }],\n        created_at: 'Sidney No. 1 Lake Park',\n        description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'\n      }, {\n        id: 4,\n        name: 'Joe Black',\n        path: 32,\n        tags: [{\n          color: \"#3a9f75\",\n          text: \"env\"\n        }],\n        created_at: 'Sidney No. 1 Lake Park',\n        description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'\n      }];\n      const tagsFilters = [];\n      this.scriptData.forEach(item => {\n        item.tags.forEach(tag => {\n          const existingTag = tagsFilters.find(filter => filter.text === tag.text);\n          if (!existingTag) {\n            tagsFilters.push({\n              text: tag.text,\n              value: tag.text\n            });\n          }\n        });\n      });\n      this.columns.forEach(item => {\n        if (item.key === 'tags') {\n          item.filters = tagsFilters;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","columns","title","dataIndex","key","filters","filteredValue","filteredInfo","onFilter","value","record","includes","scopedSlots","customRender","scriptData","computed","sortedInfo","text","sorter","a","b","length","sortOrder","columnKey","order","ellipsis","age","address","created","getScriptData","methods","onSearch","console","log","filterData","id","path","tags","color","created_at","description","tagsFilters","forEach","item","tag","existingTag","find","filter","push"],"sources":["src/views/Script.vue"],"sourcesContent":["<template>\n  <div class=\"my-script\">\n    <div class=\"my-s-button\">\n      <a-input-search placeholder=\"输入脚本名或描述搜索\" style=\"width: 200px\" @search=\"onSearch\"/>\n      <a-button type=\"primary\">\n        添加\n      </a-button>\n    </div>\n    <div class=\"my-s-table\">\n      <a-table :columns=\"columns\" :data-source=\"scriptData\">\n        <span slot=\"tags\" slot-scope=\"tags\">\n          <a-tag\n              v-for=\"t in tags\"\n              :key=\"t\"\n              :color=\"t.color\"\n          >\n            {{ t.text }}\n          </a-tag>\n        </span>\n        <a slot=\"action\" slot-scope=\"text\" href=\"javascript:;\">删除</a>\n        <p slot=\"expandedRowRender\" slot-scope=\"record\" style=\"margin: 0\">\n          {{ record.description }}\n        </p>\n      </a-table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Script\",\n\n  data() {\n    return {\n      columns: [\n        {title: '名称', dataIndex: 'name', key: 'name'},\n        {\n          title: '标签',\n          key: 'tags',\n          dataIndex: 'tags',\n          filters: [],\n          filteredValue: filteredInfo.name || null,\n          onFilter: (value, record) => record.name.includes(value),\n          scopedSlots: {customRender: 'tags'},\n        },\n        {title: '路径', dataIndex: 'path', key: 'age'},\n        {title: '创建时间', dataIndex: 'created_at', key: 'address'},\n        {title: 'Action', dataIndex: '', key: 'x', scopedSlots: {customRender: 'action'}},\n      ],\n      scriptData: []\n    }\n  },\n  computed: {\n    columns() {\n      let { sortedInfo, filteredInfo } = this;\n      sortedInfo = sortedInfo || {};\n      filteredInfo = filteredInfo || {};\n      const columns = [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          filters: [\n            { text: 'Joe', value: 'Joe' },\n            { text: 'Jim', value: 'Jim' },\n          ],\n          filteredValue: filteredInfo.name || null,\n          onFilter: (value, record) => record.name.includes(value),\n          sorter: (a, b) => a.name.length - b.name.length,\n          sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n          ellipsis: true,\n        },\n        {\n          title: 'Age',\n          dataIndex: 'age',\n          key: 'age',\n          sorter: (a, b) => a.age - b.age,\n          sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\n        },\n        {\n          title: 'Address',\n          dataIndex: 'address',\n          key: 'address',\n          filters: [\n            { text: 'London', value: 'London' },\n            { text: 'New York', value: 'New York' },\n          ],\n          filteredValue: filteredInfo.address || null,\n          onFilter: (value, record) => record.address.includes(value),\n          sorter: (a, b) => a.address.length - b.address.length,\n          sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n          ellipsis: true,\n        },\n      ];\n      return columns;\n    },\n  },\n  created() {\n    this.getScriptData()\n  },\n  methods: {\n    onSearch(value) {\n      console.log(value);\n    },\n    filterData(){\n\n    },\n    getScriptData() {\n      this.scriptData =[\n        {\n          id: 1,\n          name: 'John Brown',\n          path: 32,\n          tags: [\n            {\n              color: \"#108ee9\",\n              text: \"db\"\n            }\n          ],\n          created_at: 'New York No. 1 Lake Park',\n          description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\n        },\n        {\n          id: 2,\n          name: 'Jim Green',\n          path: 42,\n          tags: [\n            {\n              color: \"#690c3d\",\n              text: \"test\"\n            }\n          ],\n          created_at: 'London No. 1 Lake Park',\n          description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\n        },\n        {\n          id: 3,\n          name: 'Joe Black',\n          path: 32,\n          tags: [\n            {\n              color: \"#3a9f75\",\n              text: \"env\"\n            }\n          ],\n          created_at: 'Sidney No. 1 Lake Park',\n          description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n        },\n        {\n          id: 4,\n          name: 'Joe Black',\n          path: 32,\n          tags: [\n            {\n              color: \"#3a9f75\",\n              text: \"env\"\n            }\n          ],\n          created_at: 'Sidney No. 1 Lake Park',\n          description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n        }\n      ]\n      const tagsFilters = [];\n\n      this.scriptData.forEach(item => {\n        item.tags.forEach(tag => {\n          const existingTag = tagsFilters.find(filter => filter.text === tag.text);\n          if (!existingTag) {\n            tagsFilters.push({ text: tag.text, value: tag.text });\n          }\n        });\n      });\n      this.columns.forEach(item => {\n        if (item.key === 'tags') {\n          item.filters = tagsFilters\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.my-script {\n\n}\n\n.my-s-button {\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.my-s-table {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AA6BA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,OAAA,GACA;QAAAC,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QACAF,KAAA;QACAE,GAAA;QACAD,SAAA;QACAE,OAAA;QACAC,aAAA,EAAAC,YAAA,CAAAR,IAAA;QACAS,QAAA,EAAAA,CAAAC,KAAA,EAAAC,MAAA,KAAAA,MAAA,CAAAX,IAAA,CAAAY,QAAA,CAAAF,KAAA;QACAG,WAAA;UAAAC,YAAA;QAAA;MACA,GACA;QAAAX,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,SAAA;QAAAC,GAAA;QAAAQ,WAAA;UAAAC,YAAA;QAAA;MAAA,EACA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACAd,QAAA;MACA;QAAAe,UAAA;QAAAT;MAAA;MACAS,UAAA,GAAAA,UAAA;MACAT,YAAA,GAAAA,YAAA;MACA,MAAAN,OAAA,IACA;QACAC,KAAA;QACAC,SAAA;QACAC,GAAA;QACAC,OAAA,GACA;UAAAY,IAAA;UAAAR,KAAA;QAAA,GACA;UAAAQ,IAAA;UAAAR,KAAA;QAAA,EACA;QACAH,aAAA,EAAAC,YAAA,CAAAR,IAAA;QACAS,QAAA,EAAAA,CAAAC,KAAA,EAAAC,MAAA,KAAAA,MAAA,CAAAX,IAAA,CAAAY,QAAA,CAAAF,KAAA;QACAS,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAApB,IAAA,CAAAsB,MAAA,GAAAD,CAAA,CAAArB,IAAA,CAAAsB,MAAA;QACAC,SAAA,EAAAN,UAAA,CAAAO,SAAA,eAAAP,UAAA,CAAAQ,KAAA;QACAC,QAAA;MACA,GACA;QACAvB,KAAA;QACAC,SAAA;QACAC,GAAA;QACAc,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAO,GAAA,GAAAN,CAAA,CAAAM,GAAA;QACAJ,SAAA,EAAAN,UAAA,CAAAO,SAAA,cAAAP,UAAA,CAAAQ;MACA,GACA;QACAtB,KAAA;QACAC,SAAA;QACAC,GAAA;QACAC,OAAA,GACA;UAAAY,IAAA;UAAAR,KAAA;QAAA,GACA;UAAAQ,IAAA;UAAAR,KAAA;QAAA,EACA;QACAH,aAAA,EAAAC,YAAA,CAAAoB,OAAA;QACAnB,QAAA,EAAAA,CAAAC,KAAA,EAAAC,MAAA,KAAAA,MAAA,CAAAiB,OAAA,CAAAhB,QAAA,CAAAF,KAAA;QACAS,MAAA,EAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAQ,OAAA,CAAAN,MAAA,GAAAD,CAAA,CAAAO,OAAA,CAAAN,MAAA;QACAC,SAAA,EAAAN,UAAA,CAAAO,SAAA,kBAAAP,UAAA,CAAAQ,KAAA;QACAC,QAAA;MACA,EACA;MACA,OAAAxB,OAAA;IACA;EACA;EACA2B,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAC,SAAAtB,KAAA;MACAuB,OAAA,CAAAC,GAAA,CAAAxB,KAAA;IACA;IACAyB,WAAA,GAEA;IACAL,cAAA;MACA,KAAAf,UAAA,IACA;QACAqB,EAAA;QACApC,IAAA;QACAqC,IAAA;QACAC,IAAA,GACA;UACAC,KAAA;UACArB,IAAA;QACA,EACA;QACAsB,UAAA;QACAC,WAAA;MACA,GACA;QACAL,EAAA;QACApC,IAAA;QACAqC,IAAA;QACAC,IAAA,GACA;UACAC,KAAA;UACArB,IAAA;QACA,EACA;QACAsB,UAAA;QACAC,WAAA;MACA,GACA;QACAL,EAAA;QACApC,IAAA;QACAqC,IAAA;QACAC,IAAA,GACA;UACAC,KAAA;UACArB,IAAA;QACA,EACA;QACAsB,UAAA;QACAC,WAAA;MACA,GACA;QACAL,EAAA;QACApC,IAAA;QACAqC,IAAA;QACAC,IAAA,GACA;UACAC,KAAA;UACArB,IAAA;QACA,EACA;QACAsB,UAAA;QACAC,WAAA;MACA,EACA;MACA,MAAAC,WAAA;MAEA,KAAA3B,UAAA,CAAA4B,OAAA,CAAAC,IAAA;QACAA,IAAA,CAAAN,IAAA,CAAAK,OAAA,CAAAE,GAAA;UACA,MAAAC,WAAA,GAAAJ,WAAA,CAAAK,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAA9B,IAAA,KAAA2B,GAAA,CAAA3B,IAAA;UACA,KAAA4B,WAAA;YACAJ,WAAA,CAAAO,IAAA;cAAA/B,IAAA,EAAA2B,GAAA,CAAA3B,IAAA;cAAAR,KAAA,EAAAmC,GAAA,CAAA3B;YAAA;UACA;QACA;MACA;MACA,KAAAhB,OAAA,CAAAyC,OAAA,CAAAC,IAAA;QACA,IAAAA,IAAA,CAAAvC,GAAA;UACAuC,IAAA,CAAAtC,OAAA,GAAAoC,WAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}