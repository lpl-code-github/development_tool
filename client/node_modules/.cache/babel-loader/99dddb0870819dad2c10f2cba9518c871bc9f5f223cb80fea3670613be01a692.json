{"ast":null,"code":"import { isCheckDisabled } from './valueUtil';\nexport const SHOW_ALL = 'SHOW_ALL';\nexport const SHOW_PARENT = 'SHOW_PARENT';\nexport const SHOW_CHILD = 'SHOW_CHILD';\nexport function formatStrategyValues(values, strategy, keyEntities, fieldNames) {\n  const valueSet = new Set(values);\n  if (strategy === SHOW_CHILD) {\n    return values.filter(key => {\n      const entity = keyEntities[key];\n      if (entity && entity.children && entity.children.some(_ref => {\n        let {\n          node\n        } = _ref;\n        return valueSet.has(node[fieldNames.value]);\n      }) && entity.children.every(_ref2 => {\n        let {\n          node\n        } = _ref2;\n        return isCheckDisabled(node) || valueSet.has(node[fieldNames.value]);\n      })) {\n        return false;\n      }\n      return true;\n    });\n  }\n  if (strategy === SHOW_PARENT) {\n    return values.filter(key => {\n      const entity = keyEntities[key];\n      const parent = entity ? entity.parent : null;\n      if (parent && !isCheckDisabled(parent.node) && valueSet.has(parent.key)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  return values;\n}","map":{"version":3,"names":["isCheckDisabled","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","formatStrategyValues","values","strategy","keyEntities","fieldNames","valueSet","Set","filter","key","entity","children","some","_ref","node","has","value","every","_ref2","parent"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-tree-select/utils/strategyUtil.js"],"sourcesContent":["import { isCheckDisabled } from './valueUtil';\nexport const SHOW_ALL = 'SHOW_ALL';\nexport const SHOW_PARENT = 'SHOW_PARENT';\nexport const SHOW_CHILD = 'SHOW_CHILD';\nexport function formatStrategyValues(values, strategy, keyEntities, fieldNames) {\n  const valueSet = new Set(values);\n  if (strategy === SHOW_CHILD) {\n    return values.filter(key => {\n      const entity = keyEntities[key];\n      if (entity && entity.children && entity.children.some(_ref => {\n        let {\n          node\n        } = _ref;\n        return valueSet.has(node[fieldNames.value]);\n      }) && entity.children.every(_ref2 => {\n        let {\n          node\n        } = _ref2;\n        return isCheckDisabled(node) || valueSet.has(node[fieldNames.value]);\n      })) {\n        return false;\n      }\n      return true;\n    });\n  }\n  if (strategy === SHOW_PARENT) {\n    return values.filter(key => {\n      const entity = keyEntities[key];\n      const parent = entity ? entity.parent : null;\n      if (parent && !isCheckDisabled(parent.node) && valueSet.has(parent.key)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  return values;\n}"],"mappings":"AAAA,SAASA,eAAe,QAAQ,aAAa;AAC7C,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,SAASC,oBAAoBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAE;EAC9E,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAACL,MAAM,CAAC;EAChC,IAAIC,QAAQ,KAAKH,UAAU,EAAE;IAC3B,OAAOE,MAAM,CAACM,MAAM,CAACC,GAAG,IAAI;MAC1B,MAAMC,MAAM,GAAGN,WAAW,CAACK,GAAG,CAAC;MAC/B,IAAIC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,IAAI,IAAI;QAC5D,IAAI;UACFC;QACF,CAAC,GAAGD,IAAI;QACR,OAAOP,QAAQ,CAACS,GAAG,CAACD,IAAI,CAACT,UAAU,CAACW,KAAK,CAAC,CAAC;MAC7C,CAAC,CAAC,IAAIN,MAAM,CAACC,QAAQ,CAACM,KAAK,CAACC,KAAK,IAAI;QACnC,IAAI;UACFJ;QACF,CAAC,GAAGI,KAAK;QACT,OAAOrB,eAAe,CAACiB,IAAI,CAAC,IAAIR,QAAQ,CAACS,GAAG,CAACD,IAAI,CAACT,UAAU,CAACW,KAAK,CAAC,CAAC;MACtE,CAAC,CAAC,EAAE;QACF,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;EACA,IAAIb,QAAQ,KAAKJ,WAAW,EAAE;IAC5B,OAAOG,MAAM,CAACM,MAAM,CAACC,GAAG,IAAI;MAC1B,MAAMC,MAAM,GAAGN,WAAW,CAACK,GAAG,CAAC;MAC/B,MAAMU,MAAM,GAAGT,MAAM,GAAGA,MAAM,CAACS,MAAM,GAAG,IAAI;MAC5C,IAAIA,MAAM,IAAI,CAACtB,eAAe,CAACsB,MAAM,CAACL,IAAI,CAAC,IAAIR,QAAQ,CAACS,GAAG,CAACI,MAAM,CAACV,GAAG,CAAC,EAAE;QACvE,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;EACA,OAAOP,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}