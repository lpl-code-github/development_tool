{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AddScript from \"@/components/Script/AddScript\";\nexport default {\n  name: \"Script\",\n  components: {\n    AddScript\n  },\n  data() {\n    return {\n      columns: [{\n        title: '名称',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '标签',\n        key: 'tags',\n        dataIndex: 'tags',\n        filters: [],\n        scopedSlots: {\n          customRender: 'tags'\n        }\n      }, {\n        title: '路径',\n        dataIndex: 'path',\n        key: 'age'\n      }, {\n        title: '创建时间',\n        dataIndex: 'created_at',\n        key: 'address'\n      }, {\n        title: 'Action',\n        dataIndex: '',\n        key: 'x',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // table信息\n      scriptData: [],\n      tableData: [],\n      filteredTags: [],\n      tagsFilterDropdownVisible: false,\n      openAddScriptModel: false\n    };\n  },\n  created() {\n    this.getScriptData();\n  },\n  methods: {\n    //获取全部ScriptData\n    getScriptData(params) {\n      if (params == null) {\n        params = \"\";\n      }\n      this.$request.getScriptData(params).then(res => {\n        if (res.status === 200) {\n          if (res.status === 200) {\n            this.backupList = res.data.data;\n            const dbFilters = [];\n            this.backupList.forEach(item => {\n              const existingTag = dbFilters.find(filter => filter.text === item.db_name);\n              if (!existingTag) {\n                dbFilters.push({\n                  text: item.db_name,\n                  value: item.db_name\n                });\n              }\n              item.key = item.id;\n            });\n            this.columns.forEach(item => {\n              if (item.key === 'db_name') {\n                item.filters = dbFilters;\n              }\n            });\n            this.tableData = this.backupList;\n            this.cacheData = this.tableData.map(item => ({\n              ...item\n            }));\n          }\n        }\n      });\n    },\n    onSearch(value) {\n      console.log(value);\n    },\n    handleChange(pagination, filters) {\n      var tagFilterChecked = filters.tags;\n      if (filters.tags.length === 0) {\n        this.tableData = this.scriptData;\n        return;\n      }\n      this.tableData = this.scriptData.filter(item => {\n        return item.tags.some(tag => tagFilterChecked.includes(tag.text));\n      });\n    },\n    // getScriptData() {\n    //   this.scriptData = [\n    //     {\n    //       id: 1,\n    //       name: 'John Brown',\n    //       path: 32,\n    //       tags: [\n    //         {\n    //           color: \"#108ee9\",\n    //           text: \"db\"\n    //         },\n    //         {\n    //           color: \"#690c3d\",\n    //           text: \"test\"\n    //         }\n    //       ],\n    //       created_at: 'New York No. 1 Lake Park',\n    //       description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\n    //     },\n    //     {\n    //       id: 2,\n    //       name: 'Jim Green',\n    //       path: 42,\n    //       tags: [\n    //         {\n    //           color: \"#690c3d\",\n    //           text: \"test\"\n    //         }\n    //       ],\n    //       created_at: 'London No. 1 Lake Park',\n    //       description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\n    //     },\n    //     {\n    //       id: 3,\n    //       name: 'Joe Black',\n    //       path: 32,\n    //       tags: [\n    //         {\n    //           color: \"#3a9f75\",\n    //           text: \"env\"\n    //         }\n    //       ],\n    //       created_at: 'Sidney No. 1 Lake Park',\n    //       description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n    //     },\n    //     {\n    //       id: 4,\n    //       name: 'Joe Black',\n    //       path: 32,\n    //       tags: [\n    //         {\n    //           color: \"#3a9f75\",\n    //           text: \"env\"\n    //         }\n    //       ],\n    //       created_at: 'Sidney No. 1 Lake Park',\n    //       description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n    //     }\n    //   ]\n    //   const tagsFilters = [];\n    //\n    //   this.scriptData.forEach(item => {\n    //     item.tags.forEach(tag => {\n    //       const existingTag = tagsFilters.find(filter => filter.text === tag.text);\n    //       if (!existingTag) {\n    //         tagsFilters.push({text: tag.text, value: tag.text});\n    //       }\n    //     });\n    //   });\n    //\n    //   this.columns.forEach(item => {\n    //     if (item.key === 'tags') {\n    //       item.filters = tagsFilters\n    //     }\n    //   })\n    //   this.tableData = this.scriptData\n    // },\n    addScript() {\n      this.openAddScriptModel = true;\n    },\n    getModelStatus(status) {\n      this.openAddScriptModel = status;\n    }\n  }\n};","map":{"version":3,"names":["AddScript","name","components","data","columns","title","dataIndex","key","filters","scopedSlots","customRender","scriptData","tableData","filteredTags","tagsFilterDropdownVisible","openAddScriptModel","created","getScriptData","methods","params","$request","then","res","status","backupList","dbFilters","forEach","item","existingTag","find","filter","text","db_name","push","value","id","cacheData","map","onSearch","console","log","handleChange","pagination","tagFilterChecked","tags","length","some","tag","includes","addScript","getModelStatus"],"sources":["src/views/Script.vue"],"sourcesContent":["<template>\n  <div class=\"my-script\">\n    <AddScript @updateModelStatus=\"getModelStatus\" :open-flag=\"openAddScriptModel\"></AddScript>\n    <div class=\"my-s-button\">\n      <a-input-search placeholder=\"输入脚本名或描述搜索\" style=\"width: 200px\" @search=\"onSearch\"/>\n      <a-button type=\"primary\" @click=\"addScript\">\n        添加\n      </a-button>\n    </div>\n    <div class=\"my-s-table\">\n      <a-table :columns=\"columns\" :data-source=\"tableData\" @change=\"handleChange\" :pagination=\"false\">\n        <span slot=\"tags\" slot-scope=\"tags\">\n          <a-tag\n              v-for=\"(t,index) in tags\"\n              :key=\"index\"\n              :color=\"t.color\"\n          >\n            {{ t.text }}\n          </a-tag>\n        </span>\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <a style=\"color: #2c982c\">运行</a>\n          <a-divider type=\"vertical\" style=\"background-color: #a8a7a7!important;\"/>\n          <a style=\"color: #f17878\">删除</a>\n        </span>\n        <p slot=\"expandedRowRender\" slot-scope=\"record\" style=\"margin: 0\">\n          {{ record.description }}\n        </p>\n      </a-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AddScript from \"@/components/Script/AddScript\";\n\nexport default {\n  name: \"Script\",\n  components: {AddScript},\n  data() {\n    return {\n      columns: [\n        {title: '名称', dataIndex: 'name', key: 'name'},\n        {\n          title: '标签',\n          key: 'tags',\n          dataIndex: 'tags',\n          filters: [],\n          scopedSlots: {customRender: 'tags'},\n        },\n        {title: '路径', dataIndex: 'path', key: 'age'},\n        {title: '创建时间', dataIndex: 'created_at', key: 'address'},\n        {title: 'Action', dataIndex: '', key: 'x', scopedSlots: {customRender: 'action'}},\n      ], // table信息\n      scriptData: [],\n      tableData: [],\n      filteredTags: [],\n      tagsFilterDropdownVisible: false,\n      openAddScriptModel: false\n    }\n  },\n  created() {\n    this.getScriptData()\n  },\n  methods: {\n    //获取全部ScriptData\n    getScriptData(params){\n      if (params == null) {\n        params = \"\"\n      }\n      this.$request.getScriptData(params).then(res => {\n        if (res.status === 200){\n          if (res.status === 200) {\n            this.backupList = res.data.data\n\n            const dbFilters = [];\n\n            this.backupList.forEach(item => {\n              const existingTag = dbFilters.find(filter => filter.text === item.db_name);\n              if (!existingTag) {\n                dbFilters.push({text: item.db_name, value: item.db_name});\n              }\n              item.key = item.id\n            })\n            this.columns.forEach(item => {\n              if (item.key === 'db_name') {\n                item.filters = dbFilters\n              }\n            })\n            this.tableData = this.backupList\n            this.cacheData = this.tableData.map(item => ({...item}));\n          }\n        }\n      })\n    },\n\n\n\n    onSearch(value) {\n      console.log(value);\n    },\n    handleChange(pagination, filters) {\n      var tagFilterChecked = filters.tags\n      if (filters.tags.length === 0) {\n        this.tableData = this.scriptData\n        return\n      }\n      this.tableData = this.scriptData.filter(item => {\n        return item.tags.some(tag => tagFilterChecked.includes(tag.text));\n      })\n    },\n    // getScriptData() {\n    //   this.scriptData = [\n    //     {\n    //       id: 1,\n    //       name: 'John Brown',\n    //       path: 32,\n    //       tags: [\n    //         {\n    //           color: \"#108ee9\",\n    //           text: \"db\"\n    //         },\n    //         {\n    //           color: \"#690c3d\",\n    //           text: \"test\"\n    //         }\n    //       ],\n    //       created_at: 'New York No. 1 Lake Park',\n    //       description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\n    //     },\n    //     {\n    //       id: 2,\n    //       name: 'Jim Green',\n    //       path: 42,\n    //       tags: [\n    //         {\n    //           color: \"#690c3d\",\n    //           text: \"test\"\n    //         }\n    //       ],\n    //       created_at: 'London No. 1 Lake Park',\n    //       description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\n    //     },\n    //     {\n    //       id: 3,\n    //       name: 'Joe Black',\n    //       path: 32,\n    //       tags: [\n    //         {\n    //           color: \"#3a9f75\",\n    //           text: \"env\"\n    //         }\n    //       ],\n    //       created_at: 'Sidney No. 1 Lake Park',\n    //       description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n    //     },\n    //     {\n    //       id: 4,\n    //       name: 'Joe Black',\n    //       path: 32,\n    //       tags: [\n    //         {\n    //           color: \"#3a9f75\",\n    //           text: \"env\"\n    //         }\n    //       ],\n    //       created_at: 'Sidney No. 1 Lake Park',\n    //       description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n    //     }\n    //   ]\n    //   const tagsFilters = [];\n    //\n    //   this.scriptData.forEach(item => {\n    //     item.tags.forEach(tag => {\n    //       const existingTag = tagsFilters.find(filter => filter.text === tag.text);\n    //       if (!existingTag) {\n    //         tagsFilters.push({text: tag.text, value: tag.text});\n    //       }\n    //     });\n    //   });\n    //\n    //   this.columns.forEach(item => {\n    //     if (item.key === 'tags') {\n    //       item.filters = tagsFilters\n    //     }\n    //   })\n    //   this.tableData = this.scriptData\n    // },\n    addScript() {\n      this.openAddScriptModel = true\n    },\n\n    getModelStatus(status) {\n      this.openAddScriptModel = status\n    },\n  }\n}\n</script>\n\n<style scoped>\n.my-script {\n\n}\n\n.my-s-button {\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.my-s-table {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AAkCA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,OAAA,GACA;QAAAC,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QACAF,KAAA;QACAE,GAAA;QACAD,SAAA;QACAE,OAAA;QACAC,WAAA;UAAAC,YAAA;QAAA;MACA,GACA;QAAAL,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,SAAA;QAAAC,GAAA;QAAAE,WAAA;UAAAC,YAAA;QAAA;MAAA,EACA;MAAA;MACAC,UAAA;MACAC,SAAA;MACAC,YAAA;MACAC,yBAAA;MACAC,kBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA;IACAD,cAAAE,MAAA;MACA,IAAAA,MAAA;QACAA,MAAA;MACA;MACA,KAAAC,QAAA,CAAAH,aAAA,CAAAE,MAAA,EAAAE,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,MAAA;UACA,IAAAD,GAAA,CAAAC,MAAA;YACA,KAAAC,UAAA,GAAAF,GAAA,CAAAnB,IAAA,CAAAA,IAAA;YAEA,MAAAsB,SAAA;YAEA,KAAAD,UAAA,CAAAE,OAAA,CAAAC,IAAA;cACA,MAAAC,WAAA,GAAAH,SAAA,CAAAI,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,IAAA,KAAAJ,IAAA,CAAAK,OAAA;cACA,KAAAJ,WAAA;gBACAH,SAAA,CAAAQ,IAAA;kBAAAF,IAAA,EAAAJ,IAAA,CAAAK,OAAA;kBAAAE,KAAA,EAAAP,IAAA,CAAAK;gBAAA;cACA;cACAL,IAAA,CAAApB,GAAA,GAAAoB,IAAA,CAAAQ,EAAA;YACA;YACA,KAAA/B,OAAA,CAAAsB,OAAA,CAAAC,IAAA;cACA,IAAAA,IAAA,CAAApB,GAAA;gBACAoB,IAAA,CAAAnB,OAAA,GAAAiB,SAAA;cACA;YACA;YACA,KAAAb,SAAA,QAAAY,UAAA;YACA,KAAAY,SAAA,QAAAxB,SAAA,CAAAyB,GAAA,CAAAV,IAAA;cAAA,GAAAA;YAAA;UACA;QACA;MACA;IACA;IAIAW,SAAAJ,KAAA;MACAK,OAAA,CAAAC,GAAA,CAAAN,KAAA;IACA;IACAO,aAAAC,UAAA,EAAAlC,OAAA;MACA,IAAAmC,gBAAA,GAAAnC,OAAA,CAAAoC,IAAA;MACA,IAAApC,OAAA,CAAAoC,IAAA,CAAAC,MAAA;QACA,KAAAjC,SAAA,QAAAD,UAAA;QACA;MACA;MACA,KAAAC,SAAA,QAAAD,UAAA,CAAAmB,MAAA,CAAAH,IAAA;QACA,OAAAA,IAAA,CAAAiB,IAAA,CAAAE,IAAA,CAAAC,GAAA,IAAAJ,gBAAA,CAAAK,QAAA,CAAAD,GAAA,CAAAhB,IAAA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAkB,UAAA;MACA,KAAAlC,kBAAA;IACA;IAEAmC,eAAA3B,MAAA;MACA,KAAAR,kBAAA,GAAAQ,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}