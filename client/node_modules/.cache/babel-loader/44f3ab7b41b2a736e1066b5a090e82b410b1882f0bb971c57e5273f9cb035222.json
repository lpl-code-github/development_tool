{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createTextVNode as _createTextVNode, createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { getSeparatedContent } from './utils/valueUtil';\nimport SelectTrigger from './SelectTrigger';\nimport Selector from './Selector';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useDelayReset from './hooks/useDelayReset';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport { useProvideBaseSelectProps } from './hooks/useBaseProps';\nimport { computed, defineComponent, getCurrentInstance, onBeforeUnmount, onMounted, provide, shallowRef, toRefs, watch, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps, isValidElement } from '../_util/props-util';\nimport isMobile from '../vc-util/isMobile';\nimport KeyCode from '../_util/KeyCode';\nimport { toReactive } from '../_util/toReactive';\nimport classNames from '../_util/classNames';\nimport createRef from '../_util/createRef';\nimport useInjectLegacySelectContext from '../vc-tree-select/LegacyContext';\nimport { cloneElement } from '../_util/vnode';\nconst DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autofocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabindex', 'OptionList', 'notFoundContent'];\nconst baseSelectPrivateProps = () => {\n  return {\n    prefixCls: String,\n    id: String,\n    omitDomProps: Array,\n    // >>> Value\n    displayValues: Array,\n    onDisplayValuesChange: Function,\n    // >>> Active\n    /** Current dropdown list active item string value */\n    activeValue: String,\n    /** Link search input with target element */\n    activeDescendantId: String,\n    onActiveValueChange: Function,\n    // >>> Search\n    searchValue: String,\n    /** Trigger onSearch, return false to prevent trigger open event */\n    onSearch: Function,\n    /** Trigger when search text match the `tokenSeparators`. Will provide split content */\n    onSearchSplit: Function,\n    maxLength: Number,\n    OptionList: PropTypes.any,\n    /** Tell if provided `options` is empty */\n    emptyOptions: Boolean\n  };\n};\nexport const baseSelectPropsWithoutPrivate = () => {\n  return {\n    showSearch: {\n      type: Boolean,\n      default: undefined\n    },\n    tagRender: {\n      type: Function\n    },\n    optionLabelRender: {\n      type: Function\n    },\n    direction: {\n      type: String\n    },\n    // MISC\n    tabindex: Number,\n    autofocus: Boolean,\n    notFoundContent: PropTypes.any,\n    placeholder: PropTypes.any,\n    onClear: Function,\n    choiceTransitionName: String,\n    // >>> Mode\n    mode: String,\n    // >>> Status\n    disabled: {\n      type: Boolean,\n      default: undefined\n    },\n    loading: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Open\n    open: {\n      type: Boolean,\n      default: undefined\n    },\n    defaultOpen: {\n      type: Boolean,\n      default: undefined\n    },\n    onDropdownVisibleChange: {\n      type: Function\n    },\n    // >>> Customize Input\n    /** @private Internal usage. Do not use in your production. */\n    getInputElement: {\n      type: Function\n    },\n    /** @private Internal usage. Do not use in your production. */\n    getRawInputElement: {\n      type: Function\n    },\n    // >>> Selector\n    maxTagTextLength: Number,\n    maxTagCount: {\n      type: [String, Number]\n    },\n    maxTagPlaceholder: PropTypes.any,\n    // >>> Search\n    tokenSeparators: {\n      type: Array\n    },\n    // >>> Icons\n    allowClear: {\n      type: Boolean,\n      default: undefined\n    },\n    showArrow: {\n      type: Boolean,\n      default: undefined\n    },\n    inputIcon: PropTypes.any,\n    /** Clear all icon */\n    clearIcon: PropTypes.any,\n    /** Selector remove icon */\n    removeIcon: PropTypes.any,\n    // >>> Dropdown\n    animation: String,\n    transitionName: String,\n    dropdownStyle: {\n      type: Object\n    },\n    dropdownClassName: String,\n    dropdownMatchSelectWidth: {\n      type: [Boolean, Number],\n      default: undefined\n    },\n    dropdownRender: {\n      type: Function\n    },\n    dropdownAlign: Object,\n    placement: {\n      type: String\n    },\n    getPopupContainer: {\n      type: Function\n    },\n    // >>> Focus\n    showAction: {\n      type: Array\n    },\n    onBlur: {\n      type: Function\n    },\n    onFocus: {\n      type: Function\n    },\n    // >>> Rest Events\n    onKeyup: Function,\n    onKeydown: Function,\n    onMousedown: Function,\n    onPopupScroll: Function,\n    onInputKeyDown: Function,\n    onMouseenter: Function,\n    onMouseleave: Function,\n    onClick: Function\n  };\n};\nconst baseSelectProps = () => {\n  return _extends(_extends({}, baseSelectPrivateProps()), baseSelectPropsWithoutPrivate());\n};\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'BaseSelect',\n  inheritAttrs: false,\n  props: initDefaultProps(baseSelectProps(), {\n    showAction: [],\n    notFoundContent: 'Not Found'\n  }),\n  setup(props, _ref) {\n    let {\n      attrs,\n      expose,\n      slots\n    } = _ref;\n    const multiple = computed(() => isMultiple(props.mode));\n    const mergedShowSearch = computed(() => props.showSearch !== undefined ? props.showSearch : multiple.value || props.mode === 'combobox');\n    const mobile = shallowRef(false);\n    onMounted(() => {\n      mobile.value = isMobile();\n    });\n    const legacyTreeSelectContext = useInjectLegacySelectContext();\n    // ============================== Refs ==============================\n    const containerRef = shallowRef(null);\n    const selectorDomRef = createRef();\n    const triggerRef = shallowRef(null);\n    const selectorRef = shallowRef(null);\n    const listRef = shallowRef(null);\n    /** Used for component focused management */\n    const [mockFocused, setMockFocused, cancelSetMockFocused] = useDelayReset();\n    const focus = () => {\n      var _a;\n      (_a = selectorRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    const blur = () => {\n      var _a;\n      (_a = selectorRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n    };\n    expose({\n      focus,\n      blur,\n      scrollTo: arg => {\n        var _a;\n        return (_a = listRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo(arg);\n      }\n    });\n    const mergedSearchValue = computed(() => {\n      var _a;\n      if (props.mode !== 'combobox') {\n        return props.searchValue;\n      }\n      const val = (_a = props.displayValues[0]) === null || _a === void 0 ? void 0 : _a.value;\n      return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n    });\n    // ============================== Open ==============================\n    const initOpen = props.open !== undefined ? props.open : props.defaultOpen;\n    const innerOpen = shallowRef(initOpen);\n    const mergedOpen = shallowRef(initOpen);\n    const setInnerOpen = val => {\n      innerOpen.value = props.open !== undefined ? props.open : val;\n      mergedOpen.value = innerOpen.value;\n    };\n    watch(() => props.open, () => {\n      setInnerOpen(props.open);\n    });\n    // Not trigger `open` in `combobox` when `notFoundContent` is empty\n    const emptyListContent = computed(() => !props.notFoundContent && props.emptyOptions);\n    watchEffect(() => {\n      mergedOpen.value = innerOpen.value;\n      if (props.disabled || emptyListContent.value && mergedOpen.value && props.mode === 'combobox') {\n        mergedOpen.value = false;\n      }\n    });\n    const triggerOpen = computed(() => emptyListContent.value ? false : mergedOpen.value);\n    const onToggleOpen = newOpen => {\n      const nextOpen = newOpen !== undefined ? newOpen : !mergedOpen.value;\n      if (innerOpen.value !== nextOpen && !props.disabled) {\n        setInnerOpen(nextOpen);\n        if (props.onDropdownVisibleChange) {\n          props.onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n    const tokenWithEnter = computed(() => (props.tokenSeparators || []).some(tokenSeparator => ['\\n', '\\r\\n'].includes(tokenSeparator)));\n    const onInternalSearch = (searchText, fromTyping, isCompositing) => {\n      var _a, _b;\n      let ret = true;\n      let newSearchText = searchText;\n      (_a = props.onActiveValueChange) === null || _a === void 0 ? void 0 : _a.call(props, null);\n      // Check if match the `tokenSeparators`\n      const patchLabels = isCompositing ? null : getSeparatedContent(searchText, props.tokenSeparators);\n      // Ignore combobox since it's not split-able\n      if (props.mode !== 'combobox' && patchLabels) {\n        newSearchText = '';\n        (_b = props.onSearchSplit) === null || _b === void 0 ? void 0 : _b.call(props, patchLabels);\n        // Should close when paste finish\n        onToggleOpen(false);\n        // Tell Selector that break next actions\n        ret = false;\n      }\n      if (props.onSearch && mergedSearchValue.value !== newSearchText) {\n        props.onSearch(newSearchText, {\n          source: fromTyping ? 'typing' : 'effect'\n        });\n      }\n      return ret;\n    };\n    // Only triggered when menu is closed & mode is tags\n    // If menu is open, OptionList will take charge\n    // If mode isn't tags, press enter is not meaningful when you can't see any option\n    const onInternalSearchSubmit = searchText => {\n      var _a;\n      // prevent empty tags from appearing when you click the Enter button\n      if (!searchText || !searchText.trim()) {\n        return;\n      }\n      (_a = props.onSearch) === null || _a === void 0 ? void 0 : _a.call(props, searchText, {\n        source: 'submit'\n      });\n    };\n    // Close will clean up single mode search text\n    watch(mergedOpen, () => {\n      if (!mergedOpen.value && !multiple.value && props.mode !== 'combobox') {\n        onInternalSearch('', false, false);\n      }\n    }, {\n      immediate: true,\n      flush: 'post'\n    });\n    // ============================ Disabled ============================\n    // Close dropdown & remove focus state when disabled change\n    watch(() => props.disabled, () => {\n      if (innerOpen.value && !!props.disabled) {\n        setInnerOpen(false);\n      }\n    }, {\n      immediate: true\n    });\n    // ============================ Keyboard ============================\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n    const [getClearLock, setClearLock] = useLock();\n    // KeyDown\n    const onInternalKeyDown = function (event) {\n      var _a;\n      const clearLock = getClearLock();\n      const {\n        which\n      } = event;\n      if (which === KeyCode.ENTER) {\n        // Do not submit form when type in the input\n        if (props.mode !== 'combobox') {\n          event.preventDefault();\n        }\n        // We only manage open state here, close logic should handle by list component\n        if (!mergedOpen.value) {\n          onToggleOpen(true);\n        }\n      }\n      setClearLock(!!mergedSearchValue.value);\n      // Remove value by `backspace`\n      if (which === KeyCode.BACKSPACE && !clearLock && multiple.value && !mergedSearchValue.value && props.displayValues.length) {\n        const cloneDisplayValues = [...props.displayValues];\n        let removedDisplayValue = null;\n        for (let i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n          const current = cloneDisplayValues[i];\n          if (!current.disabled) {\n            cloneDisplayValues.splice(i, 1);\n            removedDisplayValue = current;\n            break;\n          }\n        }\n        if (removedDisplayValue) {\n          props.onDisplayValuesChange(cloneDisplayValues, {\n            type: 'remove',\n            values: [removedDisplayValue]\n          });\n        }\n      }\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      if (mergedOpen.value && listRef.value) {\n        listRef.value.onKeydown(event, ...rest);\n      }\n      (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, event, ...rest);\n    };\n    // KeyUp\n    const onInternalKeyUp = function (event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n      if (mergedOpen.value && listRef.value) {\n        listRef.value.onKeyup(event, ...rest);\n      }\n      if (props.onKeyup) {\n        props.onKeyup(event, ...rest);\n      }\n    };\n    // ============================ Selector ============================\n    const onSelectorRemove = val => {\n      const newValues = props.displayValues.filter(i => i !== val);\n      props.onDisplayValuesChange(newValues, {\n        type: 'remove',\n        values: [val]\n      });\n    };\n    // ========================== Focus / Blur ==========================\n    /** Record real focus status */\n    const focusRef = shallowRef(false);\n    const onContainerFocus = function () {\n      setMockFocused(true);\n      if (!props.disabled) {\n        if (props.onFocus && !focusRef.value) {\n          props.onFocus(...arguments);\n        }\n        // `showAction` should handle `focus` if set\n        if (props.showAction && props.showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n      focusRef.value = true;\n    };\n    const onContainerBlur = function () {\n      setMockFocused(false, () => {\n        focusRef.value = false;\n        onToggleOpen(false);\n      });\n      if (props.disabled) {\n        return;\n      }\n      const searchVal = mergedSearchValue.value;\n      if (searchVal) {\n        // `tags` mode should move `searchValue` into values\n        if (props.mode === 'tags') {\n          props.onSearch(searchVal, {\n            source: 'submit'\n          });\n        } else if (props.mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          props.onSearch('', {\n            source: 'blur'\n          });\n        }\n      }\n      if (props.onBlur) {\n        props.onBlur(...arguments);\n      }\n    };\n    provide('VCSelectContainerEvent', {\n      focus: onContainerFocus,\n      blur: onContainerBlur\n    });\n    // Give focus back of Select\n    const activeTimeoutIds = [];\n    onMounted(() => {\n      activeTimeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    });\n    onBeforeUnmount(() => {\n      activeTimeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    });\n    const onInternalMouseDown = function (event) {\n      var _a, _b;\n      const {\n        target\n      } = event;\n      const popupElement = (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.getPopupElement();\n      // We should give focus back to selector if clicked item is not focusable\n      if (popupElement && popupElement.contains(target)) {\n        const timeoutId = setTimeout(() => {\n          var _a;\n          const index = activeTimeoutIds.indexOf(timeoutId);\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n          cancelSetMockFocused();\n          if (!mobile.value && !popupElement.contains(document.activeElement)) {\n            (_a = selectorRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n      for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        restArgs[_key3 - 1] = arguments[_key3];\n      }\n      (_b = props.onMousedown) === null || _b === void 0 ? void 0 : _b.call(props, event, ...restArgs);\n    };\n    // ============================= Dropdown ==============================\n    const containerWidth = shallowRef(null);\n    const instance = getCurrentInstance();\n    const onPopupMouseEnter = () => {\n      // We need force update here since popup dom is render async\n      instance.update();\n    };\n    onMounted(() => {\n      watch(triggerOpen, () => {\n        var _a;\n        if (triggerOpen.value) {\n          const newWidth = Math.ceil((_a = containerRef.value) === null || _a === void 0 ? void 0 : _a.offsetWidth);\n          if (containerWidth.value !== newWidth && !Number.isNaN(newWidth)) {\n            containerWidth.value = newWidth;\n          }\n        }\n      }, {\n        immediate: true,\n        flush: 'post'\n      });\n    });\n    // Close when click on non-select element\n    useSelectTriggerControl([containerRef, triggerRef], triggerOpen, onToggleOpen);\n    useProvideBaseSelectProps(toReactive(_extends(_extends({}, toRefs(props)), {\n      open: mergedOpen,\n      triggerOpen,\n      showSearch: mergedShowSearch,\n      multiple,\n      toggleOpen: onToggleOpen\n    })));\n    return () => {\n      const _a = _extends(_extends({}, props), attrs),\n        {\n          prefixCls,\n          id,\n          open,\n          defaultOpen,\n          mode,\n          // Search related\n          showSearch,\n          searchValue,\n          onSearch,\n          // Icons\n          allowClear,\n          clearIcon,\n          showArrow,\n          inputIcon,\n          // Others\n          disabled,\n          loading,\n          getInputElement,\n          getPopupContainer,\n          placement,\n          // Dropdown\n          animation,\n          transitionName,\n          dropdownStyle,\n          dropdownClassName,\n          dropdownMatchSelectWidth,\n          dropdownRender,\n          dropdownAlign,\n          showAction,\n          direction,\n          // Tags\n          tokenSeparators,\n          tagRender,\n          optionLabelRender,\n          // Events\n          onPopupScroll,\n          onDropdownVisibleChange,\n          onFocus,\n          onBlur,\n          onKeyup,\n          onKeydown,\n          onMousedown,\n          onClear,\n          omitDomProps,\n          getRawInputElement,\n          displayValues,\n          onDisplayValuesChange,\n          emptyOptions,\n          activeDescendantId,\n          activeValue,\n          OptionList\n        } = _a,\n        restProps = __rest(_a, [\"prefixCls\", \"id\", \"open\", \"defaultOpen\", \"mode\", \"showSearch\", \"searchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"disabled\", \"loading\", \"getInputElement\", \"getPopupContainer\", \"placement\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"optionLabelRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyup\", \"onKeydown\", \"onMousedown\", \"onClear\", \"omitDomProps\", \"getRawInputElement\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"activeDescendantId\", \"activeValue\", \"OptionList\"]);\n      // ============================= Input ==============================\n      // Only works in `combobox`\n      const customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null;\n      // Used for customize replacement for `vc-cascader`\n      const customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n      const domProps = _extends({}, restProps);\n      // Used for raw custom input trigger\n      let onTriggerVisibleChange;\n      if (customizeRawInputElement) {\n        onTriggerVisibleChange = newOpen => {\n          onToggleOpen(newOpen);\n        };\n      }\n      DEFAULT_OMIT_PROPS.forEach(propName => {\n        delete domProps[propName];\n      });\n      omitDomProps === null || omitDomProps === void 0 ? void 0 : omitDomProps.forEach(propName => {\n        delete domProps[propName];\n      });\n      // ============================= Arrow ==============================\n      const mergedShowArrow = showArrow !== undefined ? showArrow : loading || !multiple.value && mode !== 'combobox';\n      let arrowNode;\n      if (mergedShowArrow) {\n        arrowNode = _createVNode(TransBtn, {\n          \"class\": classNames(`${prefixCls}-arrow`, {\n            [`${prefixCls}-arrow-loading`]: loading\n          }),\n          \"customizeIcon\": inputIcon,\n          \"customizeIconProps\": {\n            loading,\n            searchValue: mergedSearchValue.value,\n            open: mergedOpen.value,\n            focused: mockFocused.value,\n            showSearch: mergedShowSearch.value\n          }\n        }, null);\n      }\n      // ============================= Clear ==============================\n      let clearNode;\n      const onClearMouseDown = () => {\n        onClear === null || onClear === void 0 ? void 0 : onClear();\n        onDisplayValuesChange([], {\n          type: 'clear',\n          values: displayValues\n        });\n        onInternalSearch('', false, false);\n      };\n      if (!disabled && allowClear && (displayValues.length || mergedSearchValue.value)) {\n        clearNode = _createVNode(TransBtn, {\n          \"class\": `${prefixCls}-clear`,\n          \"onMousedown\": onClearMouseDown,\n          \"customizeIcon\": clearIcon\n        }, {\n          default: () => [_createTextVNode(\"\\xD7\")]\n        });\n      }\n      // =========================== OptionList ===========================\n      const optionList = _createVNode(OptionList, {\n        \"ref\": listRef\n      }, _extends(_extends({}, legacyTreeSelectContext.customSlots), {\n        option: slots.option\n      }));\n      // ============================= Select =============================\n      const mergedClassName = classNames(prefixCls, attrs.class, {\n        [`${prefixCls}-focused`]: mockFocused.value,\n        [`${prefixCls}-multiple`]: multiple.value,\n        [`${prefixCls}-single`]: !multiple.value,\n        [`${prefixCls}-allow-clear`]: allowClear,\n        [`${prefixCls}-show-arrow`]: mergedShowArrow,\n        [`${prefixCls}-disabled`]: disabled,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-open`]: mergedOpen.value,\n        [`${prefixCls}-customize-input`]: customizeInputElement,\n        [`${prefixCls}-show-search`]: mergedShowSearch.value\n      });\n      // >>> Selector\n      const selectorNode = _createVNode(SelectTrigger, {\n        \"ref\": triggerRef,\n        \"disabled\": disabled,\n        \"prefixCls\": prefixCls,\n        \"visible\": triggerOpen.value,\n        \"popupElement\": optionList,\n        \"containerWidth\": containerWidth.value,\n        \"animation\": animation,\n        \"transitionName\": transitionName,\n        \"dropdownStyle\": dropdownStyle,\n        \"dropdownClassName\": dropdownClassName,\n        \"direction\": direction,\n        \"dropdownMatchSelectWidth\": dropdownMatchSelectWidth,\n        \"dropdownRender\": dropdownRender,\n        \"dropdownAlign\": dropdownAlign,\n        \"placement\": placement,\n        \"getPopupContainer\": getPopupContainer,\n        \"empty\": emptyOptions,\n        \"getTriggerDOMNode\": () => selectorDomRef.current,\n        \"onPopupVisibleChange\": onTriggerVisibleChange,\n        \"onPopupMouseEnter\": onPopupMouseEnter\n      }, {\n        default: () => {\n          return customizeRawInputElement ? isValidElement(customizeRawInputElement) && cloneElement(customizeRawInputElement, {\n            ref: selectorDomRef\n          }, false, true) : _createVNode(Selector, _objectSpread(_objectSpread({}, props), {}, {\n            \"domRef\": selectorDomRef,\n            \"prefixCls\": prefixCls,\n            \"inputElement\": customizeInputElement,\n            \"ref\": selectorRef,\n            \"id\": id,\n            \"showSearch\": mergedShowSearch.value,\n            \"mode\": mode,\n            \"activeDescendantId\": activeDescendantId,\n            \"tagRender\": tagRender,\n            \"optionLabelRender\": optionLabelRender,\n            \"values\": displayValues,\n            \"open\": mergedOpen.value,\n            \"onToggleOpen\": onToggleOpen,\n            \"activeValue\": activeValue,\n            \"searchValue\": mergedSearchValue.value,\n            \"onSearch\": onInternalSearch,\n            \"onSearchSubmit\": onInternalSearchSubmit,\n            \"onRemove\": onSelectorRemove,\n            \"tokenWithEnter\": tokenWithEnter.value\n          }), null);\n        }\n      });\n      // >>> Render\n      let renderNode;\n      // Render raw\n      if (customizeRawInputElement) {\n        renderNode = selectorNode;\n      } else {\n        renderNode = _createVNode(\"div\", _objectSpread(_objectSpread({}, domProps), {}, {\n          \"class\": mergedClassName,\n          \"ref\": containerRef,\n          \"onMousedown\": onInternalMouseDown,\n          \"onKeydown\": onInternalKeyDown,\n          \"onKeyup\": onInternalKeyUp\n        }), [mockFocused.value && !mergedOpen.value && _createVNode(\"span\", {\n          \"style\": {\n            width: 0,\n            height: 0,\n            position: 'absolute',\n            overflow: 'hidden',\n            opacity: 0\n          },\n          \"aria-live\": \"polite\"\n        }, [`${displayValues.map(_ref2 => {\n          let {\n            label,\n            value\n          } = _ref2;\n          return ['number', 'string'].includes(typeof label) ? label : value;\n        }).join(', ')}`]), selectorNode, arrowNode, clearNode]);\n      }\n      return renderNode;\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_extends","resolveDirective","_resolveDirective","createTextVNode","_createTextVNode","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","getSeparatedContent","SelectTrigger","Selector","useSelectTriggerControl","useDelayReset","TransBtn","useLock","useProvideBaseSelectProps","computed","defineComponent","getCurrentInstance","onBeforeUnmount","onMounted","provide","shallowRef","toRefs","watch","watchEffect","PropTypes","initDefaultProps","isValidElement","isMobile","KeyCode","toReactive","classNames","createRef","useInjectLegacySelectContext","cloneElement","DEFAULT_OMIT_PROPS","baseSelectPrivateProps","prefixCls","String","id","omitDomProps","Array","displayValues","onDisplayValuesChange","Function","activeValue","activeDescendantId","onActiveValueChange","searchValue","onSearch","onSearchSplit","maxLength","Number","OptionList","any","emptyOptions","Boolean","baseSelectPropsWithoutPrivate","showSearch","type","default","undefined","tagRender","optionLabelRender","direction","tabindex","autofocus","notFoundContent","placeholder","onClear","choiceTransitionName","mode","disabled","loading","open","defaultOpen","onDropdownVisibleChange","getInputElement","getRawInputElement","maxTagTextLength","maxTagCount","maxTagPlaceholder","tokenSeparators","allowClear","showArrow","inputIcon","clearIcon","removeIcon","animation","transitionName","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","placement","getPopupContainer","showAction","onBlur","onFocus","onKeyup","onKeydown","onMousedown","onPopupScroll","onInputKeyDown","onMouseenter","onMouseleave","onClick","baseSelectProps","isMultiple","compatConfig","MODE","name","inheritAttrs","props","setup","_ref","attrs","expose","slots","multiple","mergedShowSearch","value","mobile","legacyTreeSelectContext","containerRef","selectorDomRef","triggerRef","selectorRef","listRef","mockFocused","setMockFocused","cancelSetMockFocused","focus","_a","blur","scrollTo","arg","mergedSearchValue","val","initOpen","innerOpen","mergedOpen","setInnerOpen","emptyListContent","triggerOpen","onToggleOpen","newOpen","nextOpen","tokenWithEnter","some","tokenSeparator","includes","onInternalSearch","searchText","fromTyping","isCompositing","_b","ret","newSearchText","patchLabels","source","onInternalSearchSubmit","trim","immediate","flush","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","preventDefault","BACKSPACE","cloneDisplayValues","removedDisplayValue","current","splice","values","_len","arguments","rest","_key","onInternalKeyUp","_len2","_key2","onSelectorRemove","newValues","filter","focusRef","onContainerFocus","onContainerBlur","searchVal","activeTimeoutIds","forEach","timeoutId","clearTimeout","onInternalMouseDown","target","popupElement","getPopupElement","contains","setTimeout","index","document","activeElement","push","_len3","restArgs","_key3","containerWidth","instance","onPopupMouseEnter","update","newWidth","Math","ceil","offsetWidth","isNaN","toggleOpen","restProps","customizeInputElement","customizeRawInputElement","domProps","onTriggerVisibleChange","propName","mergedShowArrow","arrowNode","focused","clearNode","onClearMouseDown","optionList","customSlots","option","mergedClassName","class","selectorNode","getTriggerDOMNode","ref","renderNode","width","height","position","overflow","opacity","map","_ref2","label","join"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-select/BaseSelect.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createTextVNode as _createTextVNode, createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { getSeparatedContent } from './utils/valueUtil';\nimport SelectTrigger from './SelectTrigger';\nimport Selector from './Selector';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useDelayReset from './hooks/useDelayReset';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport { useProvideBaseSelectProps } from './hooks/useBaseProps';\nimport { computed, defineComponent, getCurrentInstance, onBeforeUnmount, onMounted, provide, shallowRef, toRefs, watch, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps, isValidElement } from '../_util/props-util';\nimport isMobile from '../vc-util/isMobile';\nimport KeyCode from '../_util/KeyCode';\nimport { toReactive } from '../_util/toReactive';\nimport classNames from '../_util/classNames';\nimport createRef from '../_util/createRef';\nimport useInjectLegacySelectContext from '../vc-tree-select/LegacyContext';\nimport { cloneElement } from '../_util/vnode';\nconst DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autofocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabindex', 'OptionList', 'notFoundContent'];\nconst baseSelectPrivateProps = () => {\n  return {\n    prefixCls: String,\n    id: String,\n    omitDomProps: Array,\n    // >>> Value\n    displayValues: Array,\n    onDisplayValuesChange: Function,\n    // >>> Active\n    /** Current dropdown list active item string value */\n    activeValue: String,\n    /** Link search input with target element */\n    activeDescendantId: String,\n    onActiveValueChange: Function,\n    // >>> Search\n    searchValue: String,\n    /** Trigger onSearch, return false to prevent trigger open event */\n    onSearch: Function,\n    /** Trigger when search text match the `tokenSeparators`. Will provide split content */\n    onSearchSplit: Function,\n    maxLength: Number,\n    OptionList: PropTypes.any,\n    /** Tell if provided `options` is empty */\n    emptyOptions: Boolean\n  };\n};\nexport const baseSelectPropsWithoutPrivate = () => {\n  return {\n    showSearch: {\n      type: Boolean,\n      default: undefined\n    },\n    tagRender: {\n      type: Function\n    },\n    optionLabelRender: {\n      type: Function\n    },\n    direction: {\n      type: String\n    },\n    // MISC\n    tabindex: Number,\n    autofocus: Boolean,\n    notFoundContent: PropTypes.any,\n    placeholder: PropTypes.any,\n    onClear: Function,\n    choiceTransitionName: String,\n    // >>> Mode\n    mode: String,\n    // >>> Status\n    disabled: {\n      type: Boolean,\n      default: undefined\n    },\n    loading: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Open\n    open: {\n      type: Boolean,\n      default: undefined\n    },\n    defaultOpen: {\n      type: Boolean,\n      default: undefined\n    },\n    onDropdownVisibleChange: {\n      type: Function\n    },\n    // >>> Customize Input\n    /** @private Internal usage. Do not use in your production. */\n    getInputElement: {\n      type: Function\n    },\n    /** @private Internal usage. Do not use in your production. */\n    getRawInputElement: {\n      type: Function\n    },\n    // >>> Selector\n    maxTagTextLength: Number,\n    maxTagCount: {\n      type: [String, Number]\n    },\n    maxTagPlaceholder: PropTypes.any,\n    // >>> Search\n    tokenSeparators: {\n      type: Array\n    },\n    // >>> Icons\n    allowClear: {\n      type: Boolean,\n      default: undefined\n    },\n    showArrow: {\n      type: Boolean,\n      default: undefined\n    },\n    inputIcon: PropTypes.any,\n    /** Clear all icon */\n    clearIcon: PropTypes.any,\n    /** Selector remove icon */\n    removeIcon: PropTypes.any,\n    // >>> Dropdown\n    animation: String,\n    transitionName: String,\n    dropdownStyle: {\n      type: Object\n    },\n    dropdownClassName: String,\n    dropdownMatchSelectWidth: {\n      type: [Boolean, Number],\n      default: undefined\n    },\n    dropdownRender: {\n      type: Function\n    },\n    dropdownAlign: Object,\n    placement: {\n      type: String\n    },\n    getPopupContainer: {\n      type: Function\n    },\n    // >>> Focus\n    showAction: {\n      type: Array\n    },\n    onBlur: {\n      type: Function\n    },\n    onFocus: {\n      type: Function\n    },\n    // >>> Rest Events\n    onKeyup: Function,\n    onKeydown: Function,\n    onMousedown: Function,\n    onPopupScroll: Function,\n    onInputKeyDown: Function,\n    onMouseenter: Function,\n    onMouseleave: Function,\n    onClick: Function\n  };\n};\nconst baseSelectProps = () => {\n  return _extends(_extends({}, baseSelectPrivateProps()), baseSelectPropsWithoutPrivate());\n};\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'BaseSelect',\n  inheritAttrs: false,\n  props: initDefaultProps(baseSelectProps(), {\n    showAction: [],\n    notFoundContent: 'Not Found'\n  }),\n  setup(props, _ref) {\n    let {\n      attrs,\n      expose,\n      slots\n    } = _ref;\n    const multiple = computed(() => isMultiple(props.mode));\n    const mergedShowSearch = computed(() => props.showSearch !== undefined ? props.showSearch : multiple.value || props.mode === 'combobox');\n    const mobile = shallowRef(false);\n    onMounted(() => {\n      mobile.value = isMobile();\n    });\n    const legacyTreeSelectContext = useInjectLegacySelectContext();\n    // ============================== Refs ==============================\n    const containerRef = shallowRef(null);\n    const selectorDomRef = createRef();\n    const triggerRef = shallowRef(null);\n    const selectorRef = shallowRef(null);\n    const listRef = shallowRef(null);\n    /** Used for component focused management */\n    const [mockFocused, setMockFocused, cancelSetMockFocused] = useDelayReset();\n    const focus = () => {\n      var _a;\n      (_a = selectorRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    const blur = () => {\n      var _a;\n      (_a = selectorRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n    };\n    expose({\n      focus,\n      blur,\n      scrollTo: arg => {\n        var _a;\n        return (_a = listRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo(arg);\n      }\n    });\n    const mergedSearchValue = computed(() => {\n      var _a;\n      if (props.mode !== 'combobox') {\n        return props.searchValue;\n      }\n      const val = (_a = props.displayValues[0]) === null || _a === void 0 ? void 0 : _a.value;\n      return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n    });\n    // ============================== Open ==============================\n    const initOpen = props.open !== undefined ? props.open : props.defaultOpen;\n    const innerOpen = shallowRef(initOpen);\n    const mergedOpen = shallowRef(initOpen);\n    const setInnerOpen = val => {\n      innerOpen.value = props.open !== undefined ? props.open : val;\n      mergedOpen.value = innerOpen.value;\n    };\n    watch(() => props.open, () => {\n      setInnerOpen(props.open);\n    });\n    // Not trigger `open` in `combobox` when `notFoundContent` is empty\n    const emptyListContent = computed(() => !props.notFoundContent && props.emptyOptions);\n    watchEffect(() => {\n      mergedOpen.value = innerOpen.value;\n      if (props.disabled || emptyListContent.value && mergedOpen.value && props.mode === 'combobox') {\n        mergedOpen.value = false;\n      }\n    });\n    const triggerOpen = computed(() => emptyListContent.value ? false : mergedOpen.value);\n    const onToggleOpen = newOpen => {\n      const nextOpen = newOpen !== undefined ? newOpen : !mergedOpen.value;\n      if (innerOpen.value !== nextOpen && !props.disabled) {\n        setInnerOpen(nextOpen);\n        if (props.onDropdownVisibleChange) {\n          props.onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n    const tokenWithEnter = computed(() => (props.tokenSeparators || []).some(tokenSeparator => ['\\n', '\\r\\n'].includes(tokenSeparator)));\n    const onInternalSearch = (searchText, fromTyping, isCompositing) => {\n      var _a, _b;\n      let ret = true;\n      let newSearchText = searchText;\n      (_a = props.onActiveValueChange) === null || _a === void 0 ? void 0 : _a.call(props, null);\n      // Check if match the `tokenSeparators`\n      const patchLabels = isCompositing ? null : getSeparatedContent(searchText, props.tokenSeparators);\n      // Ignore combobox since it's not split-able\n      if (props.mode !== 'combobox' && patchLabels) {\n        newSearchText = '';\n        (_b = props.onSearchSplit) === null || _b === void 0 ? void 0 : _b.call(props, patchLabels);\n        // Should close when paste finish\n        onToggleOpen(false);\n        // Tell Selector that break next actions\n        ret = false;\n      }\n      if (props.onSearch && mergedSearchValue.value !== newSearchText) {\n        props.onSearch(newSearchText, {\n          source: fromTyping ? 'typing' : 'effect'\n        });\n      }\n      return ret;\n    };\n    // Only triggered when menu is closed & mode is tags\n    // If menu is open, OptionList will take charge\n    // If mode isn't tags, press enter is not meaningful when you can't see any option\n    const onInternalSearchSubmit = searchText => {\n      var _a;\n      // prevent empty tags from appearing when you click the Enter button\n      if (!searchText || !searchText.trim()) {\n        return;\n      }\n      (_a = props.onSearch) === null || _a === void 0 ? void 0 : _a.call(props, searchText, {\n        source: 'submit'\n      });\n    };\n    // Close will clean up single mode search text\n    watch(mergedOpen, () => {\n      if (!mergedOpen.value && !multiple.value && props.mode !== 'combobox') {\n        onInternalSearch('', false, false);\n      }\n    }, {\n      immediate: true,\n      flush: 'post'\n    });\n    // ============================ Disabled ============================\n    // Close dropdown & remove focus state when disabled change\n    watch(() => props.disabled, () => {\n      if (innerOpen.value && !!props.disabled) {\n        setInnerOpen(false);\n      }\n    }, {\n      immediate: true\n    });\n    // ============================ Keyboard ============================\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n    const [getClearLock, setClearLock] = useLock();\n    // KeyDown\n    const onInternalKeyDown = function (event) {\n      var _a;\n      const clearLock = getClearLock();\n      const {\n        which\n      } = event;\n      if (which === KeyCode.ENTER) {\n        // Do not submit form when type in the input\n        if (props.mode !== 'combobox') {\n          event.preventDefault();\n        }\n        // We only manage open state here, close logic should handle by list component\n        if (!mergedOpen.value) {\n          onToggleOpen(true);\n        }\n      }\n      setClearLock(!!mergedSearchValue.value);\n      // Remove value by `backspace`\n      if (which === KeyCode.BACKSPACE && !clearLock && multiple.value && !mergedSearchValue.value && props.displayValues.length) {\n        const cloneDisplayValues = [...props.displayValues];\n        let removedDisplayValue = null;\n        for (let i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n          const current = cloneDisplayValues[i];\n          if (!current.disabled) {\n            cloneDisplayValues.splice(i, 1);\n            removedDisplayValue = current;\n            break;\n          }\n        }\n        if (removedDisplayValue) {\n          props.onDisplayValuesChange(cloneDisplayValues, {\n            type: 'remove',\n            values: [removedDisplayValue]\n          });\n        }\n      }\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      if (mergedOpen.value && listRef.value) {\n        listRef.value.onKeydown(event, ...rest);\n      }\n      (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, event, ...rest);\n    };\n    // KeyUp\n    const onInternalKeyUp = function (event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n      if (mergedOpen.value && listRef.value) {\n        listRef.value.onKeyup(event, ...rest);\n      }\n      if (props.onKeyup) {\n        props.onKeyup(event, ...rest);\n      }\n    };\n    // ============================ Selector ============================\n    const onSelectorRemove = val => {\n      const newValues = props.displayValues.filter(i => i !== val);\n      props.onDisplayValuesChange(newValues, {\n        type: 'remove',\n        values: [val]\n      });\n    };\n    // ========================== Focus / Blur ==========================\n    /** Record real focus status */\n    const focusRef = shallowRef(false);\n    const onContainerFocus = function () {\n      setMockFocused(true);\n      if (!props.disabled) {\n        if (props.onFocus && !focusRef.value) {\n          props.onFocus(...arguments);\n        }\n        // `showAction` should handle `focus` if set\n        if (props.showAction && props.showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n      focusRef.value = true;\n    };\n    const onContainerBlur = function () {\n      setMockFocused(false, () => {\n        focusRef.value = false;\n        onToggleOpen(false);\n      });\n      if (props.disabled) {\n        return;\n      }\n      const searchVal = mergedSearchValue.value;\n      if (searchVal) {\n        // `tags` mode should move `searchValue` into values\n        if (props.mode === 'tags') {\n          props.onSearch(searchVal, {\n            source: 'submit'\n          });\n        } else if (props.mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          props.onSearch('', {\n            source: 'blur'\n          });\n        }\n      }\n      if (props.onBlur) {\n        props.onBlur(...arguments);\n      }\n    };\n    provide('VCSelectContainerEvent', {\n      focus: onContainerFocus,\n      blur: onContainerBlur\n    });\n    // Give focus back of Select\n    const activeTimeoutIds = [];\n    onMounted(() => {\n      activeTimeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    });\n    onBeforeUnmount(() => {\n      activeTimeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    });\n    const onInternalMouseDown = function (event) {\n      var _a, _b;\n      const {\n        target\n      } = event;\n      const popupElement = (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.getPopupElement();\n      // We should give focus back to selector if clicked item is not focusable\n      if (popupElement && popupElement.contains(target)) {\n        const timeoutId = setTimeout(() => {\n          var _a;\n          const index = activeTimeoutIds.indexOf(timeoutId);\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n          cancelSetMockFocused();\n          if (!mobile.value && !popupElement.contains(document.activeElement)) {\n            (_a = selectorRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n      for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        restArgs[_key3 - 1] = arguments[_key3];\n      }\n      (_b = props.onMousedown) === null || _b === void 0 ? void 0 : _b.call(props, event, ...restArgs);\n    };\n    // ============================= Dropdown ==============================\n    const containerWidth = shallowRef(null);\n    const instance = getCurrentInstance();\n    const onPopupMouseEnter = () => {\n      // We need force update here since popup dom is render async\n      instance.update();\n    };\n    onMounted(() => {\n      watch(triggerOpen, () => {\n        var _a;\n        if (triggerOpen.value) {\n          const newWidth = Math.ceil((_a = containerRef.value) === null || _a === void 0 ? void 0 : _a.offsetWidth);\n          if (containerWidth.value !== newWidth && !Number.isNaN(newWidth)) {\n            containerWidth.value = newWidth;\n          }\n        }\n      }, {\n        immediate: true,\n        flush: 'post'\n      });\n    });\n    // Close when click on non-select element\n    useSelectTriggerControl([containerRef, triggerRef], triggerOpen, onToggleOpen);\n    useProvideBaseSelectProps(toReactive(_extends(_extends({}, toRefs(props)), {\n      open: mergedOpen,\n      triggerOpen,\n      showSearch: mergedShowSearch,\n      multiple,\n      toggleOpen: onToggleOpen\n    })));\n    return () => {\n      const _a = _extends(_extends({}, props), attrs),\n        {\n          prefixCls,\n          id,\n          open,\n          defaultOpen,\n          mode,\n          // Search related\n          showSearch,\n          searchValue,\n          onSearch,\n          // Icons\n          allowClear,\n          clearIcon,\n          showArrow,\n          inputIcon,\n          // Others\n          disabled,\n          loading,\n          getInputElement,\n          getPopupContainer,\n          placement,\n          // Dropdown\n          animation,\n          transitionName,\n          dropdownStyle,\n          dropdownClassName,\n          dropdownMatchSelectWidth,\n          dropdownRender,\n          dropdownAlign,\n          showAction,\n          direction,\n          // Tags\n          tokenSeparators,\n          tagRender,\n          optionLabelRender,\n          // Events\n          onPopupScroll,\n          onDropdownVisibleChange,\n          onFocus,\n          onBlur,\n          onKeyup,\n          onKeydown,\n          onMousedown,\n          onClear,\n          omitDomProps,\n          getRawInputElement,\n          displayValues,\n          onDisplayValuesChange,\n          emptyOptions,\n          activeDescendantId,\n          activeValue,\n          OptionList\n        } = _a,\n        restProps = __rest(_a, [\"prefixCls\", \"id\", \"open\", \"defaultOpen\", \"mode\", \"showSearch\", \"searchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"disabled\", \"loading\", \"getInputElement\", \"getPopupContainer\", \"placement\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"optionLabelRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyup\", \"onKeydown\", \"onMousedown\", \"onClear\", \"omitDomProps\", \"getRawInputElement\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"activeDescendantId\", \"activeValue\", \"OptionList\"]);\n      // ============================= Input ==============================\n      // Only works in `combobox`\n      const customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null;\n      // Used for customize replacement for `vc-cascader`\n      const customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n      const domProps = _extends({}, restProps);\n      // Used for raw custom input trigger\n      let onTriggerVisibleChange;\n      if (customizeRawInputElement) {\n        onTriggerVisibleChange = newOpen => {\n          onToggleOpen(newOpen);\n        };\n      }\n      DEFAULT_OMIT_PROPS.forEach(propName => {\n        delete domProps[propName];\n      });\n      omitDomProps === null || omitDomProps === void 0 ? void 0 : omitDomProps.forEach(propName => {\n        delete domProps[propName];\n      });\n      // ============================= Arrow ==============================\n      const mergedShowArrow = showArrow !== undefined ? showArrow : loading || !multiple.value && mode !== 'combobox';\n      let arrowNode;\n      if (mergedShowArrow) {\n        arrowNode = _createVNode(TransBtn, {\n          \"class\": classNames(`${prefixCls}-arrow`, {\n            [`${prefixCls}-arrow-loading`]: loading\n          }),\n          \"customizeIcon\": inputIcon,\n          \"customizeIconProps\": {\n            loading,\n            searchValue: mergedSearchValue.value,\n            open: mergedOpen.value,\n            focused: mockFocused.value,\n            showSearch: mergedShowSearch.value\n          }\n        }, null);\n      }\n      // ============================= Clear ==============================\n      let clearNode;\n      const onClearMouseDown = () => {\n        onClear === null || onClear === void 0 ? void 0 : onClear();\n        onDisplayValuesChange([], {\n          type: 'clear',\n          values: displayValues\n        });\n        onInternalSearch('', false, false);\n      };\n      if (!disabled && allowClear && (displayValues.length || mergedSearchValue.value)) {\n        clearNode = _createVNode(TransBtn, {\n          \"class\": `${prefixCls}-clear`,\n          \"onMousedown\": onClearMouseDown,\n          \"customizeIcon\": clearIcon\n        }, {\n          default: () => [_createTextVNode(\"\\xD7\")]\n        });\n      }\n      // =========================== OptionList ===========================\n      const optionList = _createVNode(OptionList, {\n        \"ref\": listRef\n      }, _extends(_extends({}, legacyTreeSelectContext.customSlots), {\n        option: slots.option\n      }));\n      // ============================= Select =============================\n      const mergedClassName = classNames(prefixCls, attrs.class, {\n        [`${prefixCls}-focused`]: mockFocused.value,\n        [`${prefixCls}-multiple`]: multiple.value,\n        [`${prefixCls}-single`]: !multiple.value,\n        [`${prefixCls}-allow-clear`]: allowClear,\n        [`${prefixCls}-show-arrow`]: mergedShowArrow,\n        [`${prefixCls}-disabled`]: disabled,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-open`]: mergedOpen.value,\n        [`${prefixCls}-customize-input`]: customizeInputElement,\n        [`${prefixCls}-show-search`]: mergedShowSearch.value\n      });\n      // >>> Selector\n      const selectorNode = _createVNode(SelectTrigger, {\n        \"ref\": triggerRef,\n        \"disabled\": disabled,\n        \"prefixCls\": prefixCls,\n        \"visible\": triggerOpen.value,\n        \"popupElement\": optionList,\n        \"containerWidth\": containerWidth.value,\n        \"animation\": animation,\n        \"transitionName\": transitionName,\n        \"dropdownStyle\": dropdownStyle,\n        \"dropdownClassName\": dropdownClassName,\n        \"direction\": direction,\n        \"dropdownMatchSelectWidth\": dropdownMatchSelectWidth,\n        \"dropdownRender\": dropdownRender,\n        \"dropdownAlign\": dropdownAlign,\n        \"placement\": placement,\n        \"getPopupContainer\": getPopupContainer,\n        \"empty\": emptyOptions,\n        \"getTriggerDOMNode\": () => selectorDomRef.current,\n        \"onPopupVisibleChange\": onTriggerVisibleChange,\n        \"onPopupMouseEnter\": onPopupMouseEnter\n      }, {\n        default: () => {\n          return customizeRawInputElement ? isValidElement(customizeRawInputElement) && cloneElement(customizeRawInputElement, {\n            ref: selectorDomRef\n          }, false, true) : _createVNode(Selector, _objectSpread(_objectSpread({}, props), {}, {\n            \"domRef\": selectorDomRef,\n            \"prefixCls\": prefixCls,\n            \"inputElement\": customizeInputElement,\n            \"ref\": selectorRef,\n            \"id\": id,\n            \"showSearch\": mergedShowSearch.value,\n            \"mode\": mode,\n            \"activeDescendantId\": activeDescendantId,\n            \"tagRender\": tagRender,\n            \"optionLabelRender\": optionLabelRender,\n            \"values\": displayValues,\n            \"open\": mergedOpen.value,\n            \"onToggleOpen\": onToggleOpen,\n            \"activeValue\": activeValue,\n            \"searchValue\": mergedSearchValue.value,\n            \"onSearch\": onInternalSearch,\n            \"onSearchSubmit\": onInternalSearchSubmit,\n            \"onRemove\": onSelectorRemove,\n            \"tokenWithEnter\": tokenWithEnter.value\n          }), null);\n        }\n      });\n      // >>> Render\n      let renderNode;\n      // Render raw\n      if (customizeRawInputElement) {\n        renderNode = selectorNode;\n      } else {\n        renderNode = _createVNode(\"div\", _objectSpread(_objectSpread({}, domProps), {}, {\n          \"class\": mergedClassName,\n          \"ref\": containerRef,\n          \"onMousedown\": onInternalMouseDown,\n          \"onKeydown\": onInternalKeyDown,\n          \"onKeyup\": onInternalKeyUp\n        }), [mockFocused.value && !mergedOpen.value && _createVNode(\"span\", {\n          \"style\": {\n            width: 0,\n            height: 0,\n            position: 'absolute',\n            overflow: 'hidden',\n            opacity: 0\n          },\n          \"aria-live\": \"polite\"\n        }, [`${displayValues.map(_ref2 => {\n          let {\n            label,\n            value\n          } = _ref2;\n          return ['number', 'string'].includes(typeof label) ? label : value;\n        }).join(', ')}`]), selectorNode, arrowNode, clearNode]);\n      }\n      return renderNode;\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}