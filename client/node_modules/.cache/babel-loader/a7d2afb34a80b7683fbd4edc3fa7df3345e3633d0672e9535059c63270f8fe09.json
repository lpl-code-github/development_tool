{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Script\",\n  data() {\n    return {\n      scriptData: [],\n      filteredInfo: null,\n      tagsFilters: [],\n      tableData: []\n    };\n  },\n  computed: {\n    columns() {\n      let filteredInfo = this;\n      filteredInfo = filteredInfo || {};\n      var columns = [{\n        title: '名称',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '标签',\n        key: 'tags',\n        dataIndex: 'tags',\n        filters: [],\n        filteredValue: filteredInfo.name || null,\n        onFilter: (value, record) => record.name.includes(value),\n        scopedSlots: {\n          customRender: 'tags'\n        }\n      }, {\n        title: '路径',\n        dataIndex: 'path',\n        key: 'age'\n      }, {\n        title: '创建时间',\n        dataIndex: 'created_at',\n        key: 'address'\n      }, {\n        title: 'Action',\n        dataIndex: '',\n        key: 'x',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }];\n      columns.forEach(item => {\n        if (item.key === 'tags') {\n          item.filters = this.tagsFilters;\n        }\n      });\n      return columns;\n    }\n  },\n  created() {\n    this.getScriptData();\n  },\n  methods: {\n    onSearch(value) {\n      console.log(value);\n    },\n    handleChange(pagination, filters) {\n      var tagFilterChecked = filters.tags;\n      this.tableData = this.scriptData.filter(item => {\n        return item.tags.some(tag => tagFilterChecked.includes(tag.text));\n      });\n    },\n    getScriptData() {\n      this.scriptData = [{\n        id: 1,\n        name: 'John Brown',\n        path: 32,\n        tags: [{\n          color: \"#108ee9\",\n          text: \"db\"\n        }, {\n          color: \"#690c3d\",\n          text: \"test\"\n        }],\n        created_at: 'New York No. 1 Lake Park',\n        description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'\n      }, {\n        id: 2,\n        name: 'Jim Green',\n        path: 42,\n        tags: [{\n          color: \"#690c3d\",\n          text: \"test\"\n        }],\n        created_at: 'London No. 1 Lake Park',\n        description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'\n      }, {\n        id: 3,\n        name: 'Joe Black',\n        path: 32,\n        tags: [{\n          color: \"#3a9f75\",\n          text: \"env\"\n        }],\n        created_at: 'Sidney No. 1 Lake Park',\n        description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'\n      }, {\n        id: 4,\n        name: 'Joe Black',\n        path: 32,\n        tags: [{\n          color: \"#3a9f75\",\n          text: \"env\"\n        }],\n        created_at: 'Sidney No. 1 Lake Park',\n        description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'\n      }];\n      const tagsFilters = [];\n      this.scriptData.forEach(item => {\n        item.tags.forEach(tag => {\n          const existingTag = tagsFilters.find(filter => filter.text === tag.text);\n          if (!existingTag) {\n            tagsFilters.push({\n              text: tag.text,\n              value: tag.text\n            });\n          }\n        });\n      });\n      this.tagsFilters = tagsFilters;\n      this.tableData = this.scriptData;\n    }\n  }\n};","map":{"version":3,"names":["name","data","scriptData","filteredInfo","tagsFilters","tableData","computed","columns","title","dataIndex","key","filters","filteredValue","onFilter","value","record","includes","scopedSlots","customRender","forEach","item","created","getScriptData","methods","onSearch","console","log","handleChange","pagination","tagFilterChecked","tags","filter","some","tag","text","id","path","color","created_at","description","existingTag","find","push"],"sources":["src/views/Script.vue"],"sourcesContent":["<template>\n  <div class=\"my-script\">\n    <div class=\"my-s-button\">\n      <a-input-search placeholder=\"输入脚本名或描述搜索\" style=\"width: 200px\" @search=\"onSearch\"/>\n      <a-button type=\"primary\">\n        添加\n      </a-button>\n    </div>\n    <div class=\"my-s-table\">\n      <a-table :columns=\"columns\" :data-source=\"tableData\" @change=\"handleChange\" >\n        <span slot=\"tags\" slot-scope=\"tags\">\n          <a-tag\n              v-for=\"(t,index) in tags\"\n              :key=\"index\"\n              :color=\"t.color\"\n          >\n            {{ t.text }}\n          </a-tag>\n        </span>\n        <a slot=\"action\" slot-scope=\"text\" href=\"javascript:;\">删除</a>\n        <p slot=\"expandedRowRender\" slot-scope=\"record\" style=\"margin: 0\">\n          {{ record.description }}\n        </p>\n      </a-table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Script\",\n\n  data() {\n    return {\n      scriptData: [],\n      filteredInfo: null,\n      tagsFilters:[],\n      tableData:[]\n    }\n  },\n  computed: {\n    columns() {\n      let filteredInfo  = this;\n      filteredInfo = filteredInfo || {};\n      var columns = [\n        {title: '名称', dataIndex: 'name', key: 'name'},\n        {\n          title: '标签',\n          key: 'tags',\n          dataIndex: 'tags',\n          filters: [],\n          filteredValue: filteredInfo.name || null,\n          onFilter: (value, record) => record.name.includes(value),\n          scopedSlots: {customRender: 'tags'},\n        },\n        {title: '路径', dataIndex: 'path', key: 'age'},\n        {title: '创建时间', dataIndex: 'created_at', key: 'address'},\n        {title: 'Action', dataIndex: '', key: 'x', scopedSlots: {customRender: 'action'}},\n      ];\n      columns.forEach(item => {\n        if (item.key === 'tags') {\n          item.filters = this.tagsFilters\n        }\n      })\n\n      return columns;\n    },\n  },\n  created() {\n    this.getScriptData()\n  },\n  methods: {\n    onSearch(value) {\n      console.log(value);\n    },\n    handleChange(pagination, filters) {\n      var tagFilterChecked = filters.tags\n    \n      this.tableData = this.scriptData.filter(item => {\n        return item.tags.some(tag => tagFilterChecked.includes(tag.text));\n      })\n    },\n    getScriptData() {\n      this.scriptData =[\n        {\n          id: 1,\n          name: 'John Brown',\n          path: 32,\n          tags: [\n            {\n              color: \"#108ee9\",\n              text: \"db\"\n            },\n            {\n              color: \"#690c3d\",\n              text: \"test\"\n            }\n          ],\n          created_at: 'New York No. 1 Lake Park',\n          description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\n        },\n        {\n          id: 2,\n          name: 'Jim Green',\n          path: 42,\n          tags: [\n            {\n              color: \"#690c3d\",\n              text: \"test\"\n            }\n          ],\n          created_at: 'London No. 1 Lake Park',\n          description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\n        },\n        {\n          id: 3,\n          name: 'Joe Black',\n          path: 32,\n          tags: [\n            {\n              color: \"#3a9f75\",\n              text: \"env\"\n            }\n          ],\n          created_at: 'Sidney No. 1 Lake Park',\n          description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n        },\n        {\n          id: 4,\n          name: 'Joe Black',\n          path: 32,\n          tags: [\n            {\n              color: \"#3a9f75\",\n              text: \"env\"\n            }\n          ],\n          created_at: 'Sidney No. 1 Lake Park',\n          description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n        }\n      ]\n      const tagsFilters = [];\n\n      this.scriptData.forEach(item => {\n        item.tags.forEach(tag => {\n          const existingTag = tagsFilters.find(filter => filter.text === tag.text);\n          if (!existingTag) {\n            tagsFilters.push({ text: tag.text, value: tag.text });\n          }\n        });\n      });\n      this.tagsFilters = tagsFilters;\n      this.tableData = this.scriptData\n    }\n  }\n}\n</script>\n\n<style scoped>\n.my-script {\n\n}\n\n.my-s-button {\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.my-s-table {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AA6BA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,UAAA;MACAC,YAAA;MACAC,WAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACAC,QAAA;MACA,IAAAJ,YAAA;MACAA,YAAA,GAAAA,YAAA;MACA,IAAAI,OAAA,IACA;QAAAC,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QACAF,KAAA;QACAE,GAAA;QACAD,SAAA;QACAE,OAAA;QACAC,aAAA,EAAAT,YAAA,CAAAH,IAAA;QACAa,QAAA,EAAAA,CAAAC,KAAA,EAAAC,MAAA,KAAAA,MAAA,CAAAf,IAAA,CAAAgB,QAAA,CAAAF,KAAA;QACAG,WAAA;UAAAC,YAAA;QAAA;MACA,GACA;QAAAV,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,SAAA;QAAAC,GAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,SAAA;QAAAC,GAAA;QAAAO,WAAA;UAAAC,YAAA;QAAA;MAAA,EACA;MACAX,OAAA,CAAAY,OAAA,CAAAC,IAAA;QACA,IAAAA,IAAA,CAAAV,GAAA;UACAU,IAAA,CAAAT,OAAA,QAAAP,WAAA;QACA;MACA;MAEA,OAAAG,OAAA;IACA;EACA;EACAc,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAC,SAAAV,KAAA;MACAW,OAAA,CAAAC,GAAA,CAAAZ,KAAA;IACA;IACAa,aAAAC,UAAA,EAAAjB,OAAA;MACA,IAAAkB,gBAAA,GAAAlB,OAAA,CAAAmB,IAAA;MAEA,KAAAzB,SAAA,QAAAH,UAAA,CAAA6B,MAAA,CAAAX,IAAA;QACA,OAAAA,IAAA,CAAAU,IAAA,CAAAE,IAAA,CAAAC,GAAA,IAAAJ,gBAAA,CAAAb,QAAA,CAAAiB,GAAA,CAAAC,IAAA;MACA;IACA;IACAZ,cAAA;MACA,KAAApB,UAAA,IACA;QACAiC,EAAA;QACAnC,IAAA;QACAoC,IAAA;QACAN,IAAA,GACA;UACAO,KAAA;UACAH,IAAA;QACA,GACA;UACAG,KAAA;UACAH,IAAA;QACA,EACA;QACAI,UAAA;QACAC,WAAA;MACA,GACA;QACAJ,EAAA;QACAnC,IAAA;QACAoC,IAAA;QACAN,IAAA,GACA;UACAO,KAAA;UACAH,IAAA;QACA,EACA;QACAI,UAAA;QACAC,WAAA;MACA,GACA;QACAJ,EAAA;QACAnC,IAAA;QACAoC,IAAA;QACAN,IAAA,GACA;UACAO,KAAA;UACAH,IAAA;QACA,EACA;QACAI,UAAA;QACAC,WAAA;MACA,GACA;QACAJ,EAAA;QACAnC,IAAA;QACAoC,IAAA;QACAN,IAAA,GACA;UACAO,KAAA;UACAH,IAAA;QACA,EACA;QACAI,UAAA;QACAC,WAAA;MACA,EACA;MACA,MAAAnC,WAAA;MAEA,KAAAF,UAAA,CAAAiB,OAAA,CAAAC,IAAA;QACAA,IAAA,CAAAU,IAAA,CAAAX,OAAA,CAAAc,GAAA;UACA,MAAAO,WAAA,GAAApC,WAAA,CAAAqC,IAAA,CAAAV,MAAA,IAAAA,MAAA,CAAAG,IAAA,KAAAD,GAAA,CAAAC,IAAA;UACA,KAAAM,WAAA;YACApC,WAAA,CAAAsC,IAAA;cAAAR,IAAA,EAAAD,GAAA,CAAAC,IAAA;cAAApB,KAAA,EAAAmB,GAAA,CAAAC;YAAA;UACA;QACA;MACA;MACA,KAAA9B,WAAA,GAAAA,WAAA;MACA,KAAAC,SAAA,QAAAH,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}