{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport { generate, getSecondaryColor, isIconDefinition, log, MiniMap, withSuffix } from '../utils';\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6'\n};\nvar Icon = {\n  name: 'AntdIcon',\n  props: ['type', 'primaryColor', 'secondaryColor'],\n  displayName: 'IconVue',\n  definitions: new MiniMap(),\n  data: function data() {\n    return {\n      twoToneColorPalette: twoToneColorPalette\n    };\n  },\n  add: function add() {\n    for (var _len = arguments.length, icons = Array(_len), _key = 0; _key < _len; _key++) {\n      icons[_key] = arguments[_key];\n    }\n    icons.forEach(function (icon) {\n      Icon.definitions.set(withSuffix(icon.name, icon.theme), icon);\n    });\n  },\n  clear: function clear() {\n    Icon.definitions.clear();\n  },\n  get: function get(key) {\n    var colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : twoToneColorPalette;\n    if (key) {\n      var target = Icon.definitions.get(key);\n      if (target && typeof target.icon === 'function') {\n        target = _extends({}, target, {\n          icon: target.icon(colors.primaryColor, colors.secondaryColor)\n        });\n      }\n      return target;\n    }\n  },\n  setTwoToneColors: function setTwoToneColors(_ref) {\n    var primaryColor = _ref.primaryColor,\n      secondaryColor = _ref.secondaryColor;\n    twoToneColorPalette.primaryColor = primaryColor;\n    twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  },\n  getTwoToneColors: function getTwoToneColors() {\n    return _extends({}, twoToneColorPalette);\n  },\n  render: function render(h) {\n    var _$props = this.$props,\n      type = _$props.type,\n      primaryColor = _$props.primaryColor,\n      secondaryColor = _$props.secondaryColor;\n    var target = void 0;\n    var colors = twoToneColorPalette;\n    if (primaryColor) {\n      colors = {\n        primaryColor: primaryColor,\n        secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n      };\n    }\n    if (isIconDefinition(type)) {\n      target = type;\n    } else if (typeof type === 'string') {\n      target = Icon.get(type, colors);\n      if (!target) {\n        // log(`Could not find icon: ${type}`);\n        return null;\n      }\n    }\n    if (!target) {\n      log('type should be string or icon definiton, but got ' + type);\n      return null;\n    }\n    if (target && typeof target.icon === 'function') {\n      target = _extends({}, target, {\n        icon: target.icon(colors.primaryColor, colors.secondaryColor)\n      });\n    }\n    return generate(h, target.icon, 'svg-' + target.name, {\n      attrs: {\n        'data-icon': target.name,\n        width: '1em',\n        height: '1em',\n        fill: 'currentColor',\n        'aria-hidden': 'true'\n      },\n      on: this.$listeners\n    });\n  }\n};\n\n/* istanbul ignore next */\nIcon.install = function (Vue) {\n  Vue.component(Icon.name, Icon);\n};\nexport default Icon;","map":{"version":3,"names":["_extends","generate","getSecondaryColor","isIconDefinition","log","MiniMap","withSuffix","twoToneColorPalette","primaryColor","secondaryColor","Icon","name","props","displayName","definitions","data","add","_len","arguments","length","icons","Array","_key","forEach","icon","set","theme","clear","get","key","colors","undefined","target","setTwoToneColors","_ref","getTwoToneColors","render","h","_$props","$props","type","attrs","width","height","fill","on","$listeners","install","Vue","component"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/@ant-design/icons-vue/es/components/Icon.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport { generate, getSecondaryColor, isIconDefinition, log, MiniMap, withSuffix } from '../utils';\n\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6'\n};\n\nvar Icon = {\n  name: 'AntdIcon',\n  props: ['type', 'primaryColor', 'secondaryColor'],\n  displayName: 'IconVue',\n  definitions: new MiniMap(),\n  data: function data() {\n    return {\n      twoToneColorPalette: twoToneColorPalette\n    };\n  },\n  add: function add() {\n    for (var _len = arguments.length, icons = Array(_len), _key = 0; _key < _len; _key++) {\n      icons[_key] = arguments[_key];\n    }\n\n    icons.forEach(function (icon) {\n      Icon.definitions.set(withSuffix(icon.name, icon.theme), icon);\n    });\n  },\n  clear: function clear() {\n    Icon.definitions.clear();\n  },\n  get: function get(key) {\n    var colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : twoToneColorPalette;\n\n    if (key) {\n      var target = Icon.definitions.get(key);\n      if (target && typeof target.icon === 'function') {\n        target = _extends({}, target, {\n          icon: target.icon(colors.primaryColor, colors.secondaryColor)\n        });\n      }\n      return target;\n    }\n  },\n  setTwoToneColors: function setTwoToneColors(_ref) {\n    var primaryColor = _ref.primaryColor,\n        secondaryColor = _ref.secondaryColor;\n\n    twoToneColorPalette.primaryColor = primaryColor;\n    twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  },\n  getTwoToneColors: function getTwoToneColors() {\n    return _extends({}, twoToneColorPalette);\n  },\n  render: function render(h) {\n    var _$props = this.$props,\n        type = _$props.type,\n        primaryColor = _$props.primaryColor,\n        secondaryColor = _$props.secondaryColor;\n\n\n    var target = void 0;\n    var colors = twoToneColorPalette;\n    if (primaryColor) {\n      colors = {\n        primaryColor: primaryColor,\n        secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n      };\n    }\n    if (isIconDefinition(type)) {\n      target = type;\n    } else if (typeof type === 'string') {\n      target = Icon.get(type, colors);\n      if (!target) {\n        // log(`Could not find icon: ${type}`);\n        return null;\n      }\n    }\n    if (!target) {\n      log('type should be string or icon definiton, but got ' + type);\n      return null;\n    }\n    if (target && typeof target.icon === 'function') {\n      target = _extends({}, target, {\n        icon: target.icon(colors.primaryColor, colors.secondaryColor)\n      });\n    }\n    return generate(h, target.icon, 'svg-' + target.name, {\n      attrs: {\n        'data-icon': target.name,\n        width: '1em',\n        height: '1em',\n        fill: 'currentColor',\n        'aria-hidden': 'true'\n      },\n      on: this.$listeners\n    });\n  }\n};\n\n/* istanbul ignore next */\nIcon.install = function (Vue) {\n  Vue.component(Icon.name, Icon);\n};\n\nexport default Icon;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}