{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n/**\n * Handle virtual list of the TreeNodes.\n */\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { computed, defineComponent, ref, shallowRef, watch } from 'vue';\nimport VirtualList from '../vc-virtual-list';\nimport omit from '../_util/omit';\nimport { useInjectKeysState, useInjectTreeContext } from './contextTypes';\nimport MotionTreeNode from './MotionTreeNode';\nimport { nodeListProps } from './props';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getKey } from './utils/treeUtil';\nconst HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nconst noop = () => {};\nexport const MOTION_KEY = `RC_TREE_MOTION_${Math.random()}`;\nconst MotionNode = {\n  key: MOTION_KEY\n};\nexport const MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode,\n  nodes: [MotionNode]\n};\nconst MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n  title: null,\n  key: MOTION_KEY,\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\nexport function getMinimumRangeTransitionRange(list, virtual, height, itemHeight) {\n  if (virtual === false || !height) {\n    return list;\n  }\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\nfunction itemKey(item) {\n  const {\n    key,\n    pos\n  } = item;\n  return getKey(key, pos);\n}\nfunction getAccessibilityPath(item) {\n  let path = String(item.key);\n  let current = item;\n  while (current.parent) {\n    current = current.parent;\n    path = `${current.key} > ${path}`;\n  }\n  return path;\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'NodeList',\n  inheritAttrs: false,\n  props: nodeListProps,\n  setup(props, _ref) {\n    let {\n      expose,\n      attrs\n    } = _ref;\n    // =============================== Ref ================================\n    const listRef = ref();\n    const indentMeasurerRef = ref();\n    const {\n      expandedKeys,\n      flattenNodes\n    } = useInjectKeysState();\n    expose({\n      scrollTo: scroll => {\n        listRef.value.scrollTo(scroll);\n      },\n      getIndentWidth: () => indentMeasurerRef.value.offsetWidth\n    });\n    // ============================== Motion ==============================\n    const transitionData = shallowRef(flattenNodes.value);\n    const transitionRange = shallowRef([]);\n    const motionType = ref(null);\n    function onMotionEnd() {\n      transitionData.value = flattenNodes.value;\n      transitionRange.value = [];\n      motionType.value = null;\n      props.onListChangeEnd();\n    }\n    const context = useInjectTreeContext();\n    watch([() => expandedKeys.value.slice(), flattenNodes], (_ref2, _ref3) => {\n      let [expandedKeys, data] = _ref2;\n      let [prevExpandedKeys, prevData] = _ref3;\n      const diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n      if (diffExpanded.key !== null) {\n        const {\n          virtual,\n          height,\n          itemHeight\n        } = props;\n        if (diffExpanded.add) {\n          const keyIndex = prevData.findIndex(_ref4 => {\n            let {\n              key\n            } = _ref4;\n            return key === diffExpanded.key;\n          });\n          const rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), virtual, height, itemHeight);\n          const newTransitionData = prevData.slice();\n          newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n          transitionData.value = newTransitionData;\n          transitionRange.value = rangeNodes;\n          motionType.value = 'show';\n        } else {\n          const keyIndex = data.findIndex(_ref5 => {\n            let {\n              key\n            } = _ref5;\n            return key === diffExpanded.key;\n          });\n          const rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), virtual, height, itemHeight);\n          const newTransitionData = data.slice();\n          newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n          transitionData.value = newTransitionData;\n          transitionRange.value = rangeNodes;\n          motionType.value = 'hide';\n        }\n      } else if (prevData !== data) {\n        transitionData.value = data;\n      }\n    });\n    // We should clean up motion if is changed by dragging\n    watch(() => context.value.dragging, dragging => {\n      if (!dragging) {\n        onMotionEnd();\n      }\n    });\n    const mergedData = computed(() => props.motion === undefined ? transitionData.value : flattenNodes.value);\n    const onActiveChange = () => {\n      props.onActiveChange(null);\n    };\n    return () => {\n      const _a = _extends(_extends({}, props), attrs),\n        {\n          prefixCls,\n          selectable,\n          checkable,\n          disabled,\n          motion,\n          height,\n          itemHeight,\n          virtual,\n          focusable,\n          activeItem,\n          focused,\n          tabindex,\n          onKeydown,\n          onFocus,\n          onBlur,\n          onListChangeStart,\n          onListChangeEnd\n        } = _a,\n        domProps = __rest(_a, [\"prefixCls\", \"selectable\", \"checkable\", \"disabled\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabindex\", \"onKeydown\", \"onFocus\", \"onBlur\", \"onListChangeStart\", \"onListChangeEnd\"]);\n      return _createVNode(_Fragment, null, [focused && activeItem && _createVNode(\"span\", {\n        \"style\": HIDDEN_STYLE,\n        \"aria-live\": \"assertive\"\n      }, [getAccessibilityPath(activeItem)]), _createVNode(\"div\", null, [_createVNode(\"input\", {\n        \"style\": HIDDEN_STYLE,\n        \"disabled\": focusable === false || disabled,\n        \"tabindex\": focusable !== false ? tabindex : null,\n        \"onKeydown\": onKeydown,\n        \"onFocus\": onFocus,\n        \"onBlur\": onBlur,\n        \"value\": \"\",\n        \"onChange\": noop,\n        \"aria-label\": \"for screen reader\"\n      }, null)]), _createVNode(\"div\", {\n        \"class\": `${prefixCls}-treenode`,\n        \"aria-hidden\": true,\n        \"style\": {\n          position: 'absolute',\n          pointerEvents: 'none',\n          visibility: 'hidden',\n          height: 0,\n          overflow: 'hidden'\n        }\n      }, [_createVNode(\"div\", {\n        \"class\": `${prefixCls}-indent`\n      }, [_createVNode(\"div\", {\n        \"ref\": indentMeasurerRef,\n        \"class\": `${prefixCls}-indent-unit`\n      }, null)])]), _createVNode(VirtualList, _objectSpread(_objectSpread({}, omit(domProps, ['onActiveChange'])), {}, {\n        \"data\": mergedData.value,\n        \"itemKey\": itemKey,\n        \"height\": height,\n        \"fullHeight\": false,\n        \"virtual\": virtual,\n        \"itemHeight\": itemHeight,\n        \"prefixCls\": `${prefixCls}-list`,\n        \"ref\": listRef,\n        \"onVisibleChange\": (originList, fullList) => {\n          const originSet = new Set(originList);\n          const restList = fullList.filter(item => !originSet.has(item));\n          // Motion node is not render. Skip motion\n          if (restList.some(item => itemKey(item) === MOTION_KEY)) {\n            onMotionEnd();\n          }\n        }\n      }), {\n        default: treeNode => {\n          const {\n              pos\n            } = treeNode,\n            restProps = __rest(treeNode.data, []),\n            {\n              title,\n              key,\n              isStart,\n              isEnd\n            } = treeNode;\n          const mergedKey = getKey(key, pos);\n          delete restProps.key;\n          delete restProps.children;\n          return _createVNode(MotionTreeNode, _objectSpread(_objectSpread({}, restProps), {}, {\n            \"eventKey\": mergedKey,\n            \"title\": title,\n            \"active\": !!activeItem && key === activeItem.key,\n            \"data\": treeNode.data,\n            \"isStart\": isStart,\n            \"isEnd\": isEnd,\n            \"motion\": motion,\n            \"motionNodes\": key === MOTION_KEY ? transitionRange.value : null,\n            \"motionType\": motionType.value,\n            \"onMotionStart\": onListChangeStart,\n            \"onMotionEnd\": onMotionEnd,\n            \"onMousemove\": onActiveChange\n          }), null);\n        }\n      })]);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_extends","resolveDirective","_resolveDirective","createVNode","_createVNode","Fragment","_Fragment","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","computed","defineComponent","ref","shallowRef","watch","VirtualList","omit","useInjectKeysState","useInjectTreeContext","MotionTreeNode","nodeListProps","findExpandedKeys","getExpandRange","getKey","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","noop","MOTION_KEY","Math","random","MotionNode","key","MotionEntity","level","index","pos","node","nodes","MotionFlattenData","parent","children","data","title","isStart","isEnd","getMinimumRangeTransitionRange","list","virtual","itemHeight","slice","ceil","itemKey","item","getAccessibilityPath","path","String","current","compatConfig","MODE","name","inheritAttrs","props","setup","_ref","expose","attrs","listRef","indentMeasurerRef","expandedKeys","flattenNodes","scrollTo","scroll","value","getIndentWidth","offsetWidth","transitionData","transitionRange","motionType","onMotionEnd","onListChangeEnd","context","_ref2","_ref3","prevExpandedKeys","prevData","diffExpanded","add","keyIndex","findIndex","_ref4","rangeNodes","newTransitionData","splice","_ref5","dragging","mergedData","motion","undefined","onActiveChange","_a","prefixCls","selectable","checkable","disabled","focusable","activeItem","focused","tabindex","onKeydown","onFocus","onBlur","onListChangeStart","domProps","position","pointerEvents","visibility","onVisibleChange","originList","fullList","originSet","Set","restList","filter","has","some","default","treeNode","restProps","mergedKey"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-tree/NodeList.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n/**\n * Handle virtual list of the TreeNodes.\n */\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { computed, defineComponent, ref, shallowRef, watch } from 'vue';\nimport VirtualList from '../vc-virtual-list';\nimport omit from '../_util/omit';\nimport { useInjectKeysState, useInjectTreeContext } from './contextTypes';\nimport MotionTreeNode from './MotionTreeNode';\nimport { nodeListProps } from './props';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getKey } from './utils/treeUtil';\nconst HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nconst noop = () => {};\nexport const MOTION_KEY = `RC_TREE_MOTION_${Math.random()}`;\nconst MotionNode = {\n  key: MOTION_KEY\n};\nexport const MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode,\n  nodes: [MotionNode]\n};\nconst MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n  title: null,\n  key: MOTION_KEY,\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\nexport function getMinimumRangeTransitionRange(list, virtual, height, itemHeight) {\n  if (virtual === false || !height) {\n    return list;\n  }\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\nfunction itemKey(item) {\n  const {\n    key,\n    pos\n  } = item;\n  return getKey(key, pos);\n}\nfunction getAccessibilityPath(item) {\n  let path = String(item.key);\n  let current = item;\n  while (current.parent) {\n    current = current.parent;\n    path = `${current.key} > ${path}`;\n  }\n  return path;\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'NodeList',\n  inheritAttrs: false,\n  props: nodeListProps,\n  setup(props, _ref) {\n    let {\n      expose,\n      attrs\n    } = _ref;\n    // =============================== Ref ================================\n    const listRef = ref();\n    const indentMeasurerRef = ref();\n    const {\n      expandedKeys,\n      flattenNodes\n    } = useInjectKeysState();\n    expose({\n      scrollTo: scroll => {\n        listRef.value.scrollTo(scroll);\n      },\n      getIndentWidth: () => indentMeasurerRef.value.offsetWidth\n    });\n    // ============================== Motion ==============================\n    const transitionData = shallowRef(flattenNodes.value);\n    const transitionRange = shallowRef([]);\n    const motionType = ref(null);\n    function onMotionEnd() {\n      transitionData.value = flattenNodes.value;\n      transitionRange.value = [];\n      motionType.value = null;\n      props.onListChangeEnd();\n    }\n    const context = useInjectTreeContext();\n    watch([() => expandedKeys.value.slice(), flattenNodes], (_ref2, _ref3) => {\n      let [expandedKeys, data] = _ref2;\n      let [prevExpandedKeys, prevData] = _ref3;\n      const diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n      if (diffExpanded.key !== null) {\n        const {\n          virtual,\n          height,\n          itemHeight\n        } = props;\n        if (diffExpanded.add) {\n          const keyIndex = prevData.findIndex(_ref4 => {\n            let {\n              key\n            } = _ref4;\n            return key === diffExpanded.key;\n          });\n          const rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), virtual, height, itemHeight);\n          const newTransitionData = prevData.slice();\n          newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n          transitionData.value = newTransitionData;\n          transitionRange.value = rangeNodes;\n          motionType.value = 'show';\n        } else {\n          const keyIndex = data.findIndex(_ref5 => {\n            let {\n              key\n            } = _ref5;\n            return key === diffExpanded.key;\n          });\n          const rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), virtual, height, itemHeight);\n          const newTransitionData = data.slice();\n          newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n          transitionData.value = newTransitionData;\n          transitionRange.value = rangeNodes;\n          motionType.value = 'hide';\n        }\n      } else if (prevData !== data) {\n        transitionData.value = data;\n      }\n    });\n    // We should clean up motion if is changed by dragging\n    watch(() => context.value.dragging, dragging => {\n      if (!dragging) {\n        onMotionEnd();\n      }\n    });\n    const mergedData = computed(() => props.motion === undefined ? transitionData.value : flattenNodes.value);\n    const onActiveChange = () => {\n      props.onActiveChange(null);\n    };\n    return () => {\n      const _a = _extends(_extends({}, props), attrs),\n        {\n          prefixCls,\n          selectable,\n          checkable,\n          disabled,\n          motion,\n          height,\n          itemHeight,\n          virtual,\n          focusable,\n          activeItem,\n          focused,\n          tabindex,\n          onKeydown,\n          onFocus,\n          onBlur,\n          onListChangeStart,\n          onListChangeEnd\n        } = _a,\n        domProps = __rest(_a, [\"prefixCls\", \"selectable\", \"checkable\", \"disabled\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabindex\", \"onKeydown\", \"onFocus\", \"onBlur\", \"onListChangeStart\", \"onListChangeEnd\"]);\n      return _createVNode(_Fragment, null, [focused && activeItem && _createVNode(\"span\", {\n        \"style\": HIDDEN_STYLE,\n        \"aria-live\": \"assertive\"\n      }, [getAccessibilityPath(activeItem)]), _createVNode(\"div\", null, [_createVNode(\"input\", {\n        \"style\": HIDDEN_STYLE,\n        \"disabled\": focusable === false || disabled,\n        \"tabindex\": focusable !== false ? tabindex : null,\n        \"onKeydown\": onKeydown,\n        \"onFocus\": onFocus,\n        \"onBlur\": onBlur,\n        \"value\": \"\",\n        \"onChange\": noop,\n        \"aria-label\": \"for screen reader\"\n      }, null)]), _createVNode(\"div\", {\n        \"class\": `${prefixCls}-treenode`,\n        \"aria-hidden\": true,\n        \"style\": {\n          position: 'absolute',\n          pointerEvents: 'none',\n          visibility: 'hidden',\n          height: 0,\n          overflow: 'hidden'\n        }\n      }, [_createVNode(\"div\", {\n        \"class\": `${prefixCls}-indent`\n      }, [_createVNode(\"div\", {\n        \"ref\": indentMeasurerRef,\n        \"class\": `${prefixCls}-indent-unit`\n      }, null)])]), _createVNode(VirtualList, _objectSpread(_objectSpread({}, omit(domProps, ['onActiveChange'])), {}, {\n        \"data\": mergedData.value,\n        \"itemKey\": itemKey,\n        \"height\": height,\n        \"fullHeight\": false,\n        \"virtual\": virtual,\n        \"itemHeight\": itemHeight,\n        \"prefixCls\": `${prefixCls}-list`,\n        \"ref\": listRef,\n        \"onVisibleChange\": (originList, fullList) => {\n          const originSet = new Set(originList);\n          const restList = fullList.filter(item => !originSet.has(item));\n          // Motion node is not render. Skip motion\n          if (restList.some(item => itemKey(item) === MOTION_KEY)) {\n            onMotionEnd();\n          }\n        }\n      }), {\n        default: treeNode => {\n          const {\n              pos\n            } = treeNode,\n            restProps = __rest(treeNode.data, []),\n            {\n              title,\n              key,\n              isStart,\n              isEnd\n            } = treeNode;\n          const mergedKey = getKey(key, pos);\n          delete restProps.key;\n          delete restProps.children;\n          return _createVNode(MotionTreeNode, _objectSpread(_objectSpread({}, restProps), {}, {\n            \"eventKey\": mergedKey,\n            \"title\": title,\n            \"active\": !!activeItem && key === activeItem.key,\n            \"data\": treeNode.data,\n            \"isStart\": isStart,\n            \"isEnd\": isEnd,\n            \"motion\": motion,\n            \"motionNodes\": key === MOTION_KEY ? transitionRange.value : null,\n            \"motionType\": motionType.value,\n            \"onMotionStart\": onListChangeStart,\n            \"onMotionEnd\": onMotionEnd,\n            \"onMousemove\": onActiveChange\n          }), null);\n        }\n      })]);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}