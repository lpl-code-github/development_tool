{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"RunNewman\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      formLayout: 'horizontal',\n      form: {\n        name: '',\n        description: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入操作名称',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 50,\n          message: '长度必须在 5 ～ 50',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        // 父组件给的openFlag值发变化 拷贝一份\n        this.visible = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n  },\n  methods: {\n    /*\n      modal按钮事件\n     */\n    handleOk(e) {\n      const h = this.$createElement;\n      this.loading = true;\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          this.$confirm({\n            title: '在创建测试任务前需要和您确认',\n            content: h => h(\"div\", {\n              \"style\": \"color:red;\"\n            }, [\"\\u60A8\\u5F53\\u524D\\u6570\\u636E\\u5E93\\u662F\\u5426\\u7B26\\u5408\\u6D4B\\u8BD5\\u73AF\\u5883?\"]),\n            okText: '是的，创建任务',\n            cancelText: '去导入数据库',\n            onOk: () => {\n              var param = {\n                data: this.form\n              };\n              this.$request.postNewmanTasks(param).then(res => {\n                if (res.status === 200) {\n                  this.$emit('newmanTask', res.data.data);\n                  this.$message.success(\"创建测试任务成功，请到任务详情查看\");\n                } else {\n                  this.$message.error(\"创建测试失败\");\n                }\n              });\n              setTimeout(() => {\n                this.$emit('updateModelStatus', false);\n                this.loading = false;\n                this.initFormData();\n              }, 2);\n            },\n            onCancel: () => {\n              this.$router.push(\"/backup\");\n            }\n          });\n        } else {\n          this.loading = false;\n          return false;\n        }\n      });\n    },\n    handleCancel(e) {\n      this.$emit('updateModelStatus', false);\n    },\n    afterClose(e) {\n      this.$emit('updateModelStatus', false);\n    },\n    // 重置表单\n    initFormData() {\n      this.$refs.ruleForm.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["name","props","openFlag","type","Boolean","required","data","loading","visible","formLayout","form","description","rules","message","trigger","min","max","watch","handler","newVal","oldVal","deep","mounted","methods","handleOk","e","h","$createElement","$refs","ruleForm","validate","valid","$confirm","title","content","okText","cancelText","onOk","param","$request","postNewmanTasks","then","res","status","$emit","$message","success","error","setTimeout","initFormData","onCancel","$router","push","handleCancel","afterClose","resetFields"],"sources":["src/components/Newman/RunNewman.vue"],"sourcesContent":["<template>\n  <div>\n    <a-modal v-model=\"visible\" title=\"运行postman测试\" on-ok=\"handleOk\" :afterClose=\"afterClose\" :maskClosable=\"false\">\n      <!--表单底部按钮-->\n      <template slot=\"footer\">\n        <a-button key=\"back\" @click=\"handleCancel\">\n          取消\n        </a-button>\n        <a-button key=\"submit\" type=\"primary\" :loading=\"loading\" @click=\"handleOk\">\n          提交\n        </a-button>\n      </template>\n\n      <!-- 表单-->\n      <a-form-model\n          ref=\"ruleForm\"\n          :model=\"form\"\n          :rules=\"rules\"\n          :label-col=\"{ span: 3 }\"\n          :wrapper-col=\"{ span: 20}\"\n          style=\"width: 100%\">\n        <a-form-model-item ref=\"name\" label=\"名称\" prop=\"name\">\n          <a-input v-model=\"form.name\"/>\n        </a-form-model-item>\n        <a-form-model-item label=\"描述\" prop=\"description\">\n          <a-input v-model=\"form.description\" rows=\"4\" type=\"textarea\"/>\n        </a-form-model-item>\n      </a-form-model>\n    </a-modal>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"RunNewman\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      formLayout: 'horizontal',\n      form: {\n        name: '',\n        description: '',\n      },\n      rules: {\n        name: [\n          {required: true, message: '请输入操作名称', trigger: 'blur'},\n          {min: 5, max: 50, message: '长度必须在 5 ～ 50', trigger: 'blur'},\n        ],\n      },\n    };\n  },\n  watch:{\n    openFlag:{\n      handler: function (newVal,oldVal) {\n        // 父组件给的openFlag值发变化 拷贝一份\n        this.visible = newVal\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag\n  },\n  methods: {\n    /*\n      modal按钮事件\n     */\n    handleOk(e) {\n      this.loading = true;\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          this.$confirm({\n            title: '在创建测试任务前需要和您确认',\n            content: h => <div style=\"color:red;\">您当前数据库是否符合测试环境?</div>,\n            okText: '是的，创建任务',\n            cancelText: '去导入数据库',\n            onOk:()=> {\n              var param = {\n                data: this.form\n              }\n              this.$request.postNewmanTasks(param).then(res=>{\n                if (res.status === 200){\n                  this.$emit('newmanTask', res.data.data)\n                  this.$message.success(\"创建测试任务成功，请到任务详情查看\")\n                }else {\n                  this.$message.error(\"创建测试失败\")\n                }\n              })\n              setTimeout(() => {\n                this.$emit('updateModelStatus', false)\n                this.loading = false;\n                this.initFormData()\n              }, 2);\n            },\n            onCancel:()=>{\n                this.$router.push(\"/backup\")\n            },\n          })\n\n        } else {\n          this.loading = false\n          return false\n        }\n      });\n    },\n    handleCancel(e) {\n      this.$emit('updateModelStatus', false)\n    },\n    afterClose(e){\n      this.$emit('updateModelStatus', false)\n    },\n    // 重置表单\n    initFormData() {\n      this.$refs.ruleForm.resetFields();\n    }\n  },\n};\n</script>\n<style scoped>\n/deep/ .ant-modal-body{\n  max-height: 400px;\n  overflow-y: auto;\n}\n</style>\n"],"mappings":";AAgCA;EACAA,IAAA;EACAC,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;MACAC,UAAA;MACAC,IAAA;QACAV,IAAA;QACAW,WAAA;MACA;MACAC,KAAA;QACAZ,IAAA,GACA;UAAAK,QAAA;UAAAQ,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,KAAA;IACAf,QAAA;MACAgB,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACA;QACA,KAAAZ,OAAA,GAAAW,MAAA;MACA;MACA;MACAE,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAd,OAAA,QAAAN,QAAA;EACA;EACAqB,OAAA;IACA;AACA;AACA;IACAC,SAAAC,CAAA;MAAA,MAAAC,CAAA,QAAAC,cAAA;MACA,KAAApB,OAAA;MACA,KAAAqB,KAAA,CAAAC,QAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA;YACAC,KAAA;YACAC,OAAA,EAAAR,CAAA,IAAAA,CAAA;cAAA;YAAA;YACAS,MAAA;YACAC,UAAA;YACAC,IAAA,EAAAA,CAAA;cACA,IAAAC,KAAA;gBACAhC,IAAA,OAAAI;cACA;cACA,KAAA6B,QAAA,CAAAC,eAAA,CAAAF,KAAA,EAAAG,IAAA,CAAAC,GAAA;gBACA,IAAAA,GAAA,CAAAC,MAAA;kBACA,KAAAC,KAAA,eAAAF,GAAA,CAAApC,IAAA,CAAAA,IAAA;kBACA,KAAAuC,QAAA,CAAAC,OAAA;gBACA;kBACA,KAAAD,QAAA,CAAAE,KAAA;gBACA;cACA;cACAC,UAAA;gBACA,KAAAJ,KAAA;gBACA,KAAArC,OAAA;gBACA,KAAA0C,YAAA;cACA;YACA;YACAC,QAAA,EAAAA,CAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;UACA;QAEA;UACA,KAAA7C,OAAA;UACA;QACA;MACA;IACA;IACA8C,aAAA5B,CAAA;MACA,KAAAmB,KAAA;IACA;IACAU,WAAA7B,CAAA;MACA,KAAAmB,KAAA;IACA;IACA;IACAK,aAAA;MACA,KAAArB,KAAA,CAAAC,QAAA,CAAA0B,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}