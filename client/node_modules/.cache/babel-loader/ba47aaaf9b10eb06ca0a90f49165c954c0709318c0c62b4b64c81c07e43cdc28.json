{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport TimeHeader from './TimeHeader';\nimport TimeBody from './TimeBody';\nimport { createKeydownHandler } from '../../utils/uiUtil';\nimport classNames from '../../../_util/classNames';\nimport { ref } from 'vue';\nimport useMergeProps from '../../hooks/useMergeProps';\nconst countBoolean = boolList => boolList.filter(bool => bool !== false).length;\nfunction TimePanel(_props) {\n  const props = useMergeProps(_props);\n  const {\n    generateConfig,\n    format = 'HH:mm:ss',\n    prefixCls,\n    active,\n    operationRef,\n    showHour,\n    showMinute,\n    showSecond,\n    use12Hours = false,\n    onSelect,\n    value\n  } = props;\n  const panelPrefixCls = `${prefixCls}-time-panel`;\n  const bodyOperationRef = ref();\n  // ======================= Keyboard =======================\n  const activeColumnIndex = ref(-1);\n  const columnsCount = countBoolean([showHour, showMinute, showSecond, use12Hours]);\n  operationRef.value = {\n    onKeydown: event => createKeydownHandler(event, {\n      onLeftRight: diff => {\n        activeColumnIndex.value = (activeColumnIndex.value + diff + columnsCount) % columnsCount;\n      },\n      onUpDown: diff => {\n        if (activeColumnIndex.value === -1) {\n          activeColumnIndex.value = 0;\n        } else if (bodyOperationRef.value) {\n          bodyOperationRef.value.onUpDown(diff);\n        }\n      },\n      onEnter: () => {\n        onSelect(value || generateConfig.getNow(), 'key');\n        activeColumnIndex.value = -1;\n      }\n    }),\n    onBlur: () => {\n      activeColumnIndex.value = -1;\n    }\n  };\n  return _createVNode(\"div\", {\n    \"class\": classNames(panelPrefixCls, {\n      [`${panelPrefixCls}-active`]: active\n    })\n  }, [_createVNode(TimeHeader, _objectSpread(_objectSpread({}, props), {}, {\n    \"format\": format,\n    \"prefixCls\": prefixCls\n  }), null), _createVNode(TimeBody, _objectSpread(_objectSpread({}, props), {}, {\n    \"prefixCls\": prefixCls,\n    \"activeColumnIndex\": activeColumnIndex.value,\n    \"operationRef\": bodyOperationRef\n  }), null)]);\n}\nTimePanel.displayName = 'TimePanel';\nTimePanel.inheritAttrs = false;\nexport default TimePanel;","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","TimeHeader","TimeBody","createKeydownHandler","classNames","ref","useMergeProps","countBoolean","boolList","filter","bool","length","TimePanel","_props","props","generateConfig","format","prefixCls","active","operationRef","showHour","showMinute","showSecond","use12Hours","onSelect","value","panelPrefixCls","bodyOperationRef","activeColumnIndex","columnsCount","onKeydown","event","onLeftRight","diff","onUpDown","onEnter","getNow","onBlur","displayName","inheritAttrs"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-picker/panels/TimePanel/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport TimeHeader from './TimeHeader';\nimport TimeBody from './TimeBody';\nimport { createKeydownHandler } from '../../utils/uiUtil';\nimport classNames from '../../../_util/classNames';\nimport { ref } from 'vue';\nimport useMergeProps from '../../hooks/useMergeProps';\nconst countBoolean = boolList => boolList.filter(bool => bool !== false).length;\nfunction TimePanel(_props) {\n  const props = useMergeProps(_props);\n  const {\n    generateConfig,\n    format = 'HH:mm:ss',\n    prefixCls,\n    active,\n    operationRef,\n    showHour,\n    showMinute,\n    showSecond,\n    use12Hours = false,\n    onSelect,\n    value\n  } = props;\n  const panelPrefixCls = `${prefixCls}-time-panel`;\n  const bodyOperationRef = ref();\n  // ======================= Keyboard =======================\n  const activeColumnIndex = ref(-1);\n  const columnsCount = countBoolean([showHour, showMinute, showSecond, use12Hours]);\n  operationRef.value = {\n    onKeydown: event => createKeydownHandler(event, {\n      onLeftRight: diff => {\n        activeColumnIndex.value = (activeColumnIndex.value + diff + columnsCount) % columnsCount;\n      },\n      onUpDown: diff => {\n        if (activeColumnIndex.value === -1) {\n          activeColumnIndex.value = 0;\n        } else if (bodyOperationRef.value) {\n          bodyOperationRef.value.onUpDown(diff);\n        }\n      },\n      onEnter: () => {\n        onSelect(value || generateConfig.getNow(), 'key');\n        activeColumnIndex.value = -1;\n      }\n    }),\n    onBlur: () => {\n      activeColumnIndex.value = -1;\n    }\n  };\n  return _createVNode(\"div\", {\n    \"class\": classNames(panelPrefixCls, {\n      [`${panelPrefixCls}-active`]: active\n    })\n  }, [_createVNode(TimeHeader, _objectSpread(_objectSpread({}, props), {}, {\n    \"format\": format,\n    \"prefixCls\": prefixCls\n  }), null), _createVNode(TimeBody, _objectSpread(_objectSpread({}, props), {}, {\n    \"prefixCls\": prefixCls,\n    \"activeColumnIndex\": activeColumnIndex.value,\n    \"operationRef\": bodyOperationRef\n  }), null)]);\n}\nTimePanel.displayName = 'TimePanel';\nTimePanel.inheritAttrs = false;\nexport default TimePanel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}