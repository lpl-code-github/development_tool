{"ast":null,"code":"import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport PropTypes from '../_util/vue-types';\nimport Button from '../button';\nimport BaseMixin from '../_util/BaseMixin';\nimport buttonTypes from '../button/buttonTypes';\nvar ButtonType = buttonTypes().type;\nvar ActionButtonProps = {\n  type: ButtonType,\n  actionFn: PropTypes.func,\n  closeModal: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  buttonProps: PropTypes.object\n};\nexport default {\n  mixins: [BaseMixin],\n  props: ActionButtonProps,\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    if (this.autoFocus) {\n      this.timeoutId = setTimeout(function () {\n        return _this.$el.focus();\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.timeoutId);\n  },\n  methods: {\n    onClick: function onClick() {\n      var _this2 = this;\n      var actionFn = this.actionFn,\n        closeModal = this.closeModal;\n      if (actionFn) {\n        var ret = void 0;\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n          if (!ret) {\n            closeModal();\n          }\n        }\n        if (ret && ret.then) {\n          this.setState({\n            loading: true\n          });\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(undefined, arguments);\n          }, function (e) {\n            // Emit error when catch promise reject\n            // eslint-disable-next-line no-console\n            console.error(e);\n            // See: https://github.com/ant-design/ant-design/issues/6183\n            _this2.setState({\n              loading: false\n            });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var type = this.type,\n      $slots = this.$slots,\n      loading = this.loading,\n      buttonProps = this.buttonProps;\n    return h(Button, _mergeJSXProps([{\n      attrs: {\n        type: type,\n        loading: loading\n      },\n      on: {\n        'click': this.onClick\n      }\n    }, buttonProps]), [$slots['default']]);\n  }\n};","map":{"version":3,"names":["_mergeJSXProps","PropTypes","Button","BaseMixin","buttonTypes","ButtonType","type","ActionButtonProps","actionFn","func","closeModal","autoFocus","bool","buttonProps","object","mixins","props","data","loading","mounted","_this","timeoutId","setTimeout","$el","focus","beforeDestroy","clearTimeout","methods","onClick","_this2","ret","length","then","setState","apply","undefined","arguments","e","console","error","render","h","$slots","attrs","on"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/modal/ActionButton.js"],"sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport PropTypes from '../_util/vue-types';\nimport Button from '../button';\nimport BaseMixin from '../_util/BaseMixin';\nimport buttonTypes from '../button/buttonTypes';\nvar ButtonType = buttonTypes().type;\nvar ActionButtonProps = {\n  type: ButtonType,\n  actionFn: PropTypes.func,\n  closeModal: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  buttonProps: PropTypes.object\n};\n\nexport default {\n  mixins: [BaseMixin],\n  props: ActionButtonProps,\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.autoFocus) {\n      this.timeoutId = setTimeout(function () {\n        return _this.$el.focus();\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.timeoutId);\n  },\n\n  methods: {\n    onClick: function onClick() {\n      var _this2 = this;\n\n      var actionFn = this.actionFn,\n          closeModal = this.closeModal;\n\n      if (actionFn) {\n        var ret = void 0;\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n          if (!ret) {\n            closeModal();\n          }\n        }\n        if (ret && ret.then) {\n          this.setState({ loading: true });\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(undefined, arguments);\n          }, function (e) {\n            // Emit error when catch promise reject\n            // eslint-disable-next-line no-console\n            console.error(e);\n            // See: https://github.com/ant-design/ant-design/issues/6183\n            _this2.setState({ loading: false });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var type = this.type,\n        $slots = this.$slots,\n        loading = this.loading,\n        buttonProps = this.buttonProps;\n\n    return h(\n      Button,\n      _mergeJSXProps([{\n        attrs: { type: type, loading: loading },\n        on: {\n          'click': this.onClick\n        }\n      }, buttonProps]),\n      [$slots['default']]\n    );\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}