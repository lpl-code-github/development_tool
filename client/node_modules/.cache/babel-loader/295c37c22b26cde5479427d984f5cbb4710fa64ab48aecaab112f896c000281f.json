{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport zhCN from 'ant-design-vue/es/locale/zh_CN'; //引入antd中文包\nimport moment from 'moment';\nimport OneLog from \"@/components/log/OneLog\";\n//引入moment\nmoment.locale('zh-cn');\nexport default {\n  name: \"Index\",\n  components: {\n    OneLog\n  },\n  data() {\n    return {\n      locale: zhCN,\n      //传值给a-config-provider组件\n      logData: [],\n      oneLog: [],\n      calendarData: null,\n      calendarComponentKey: 0,\n      oneLogComponentKey: 0,\n      openLogModelFlag: false,\n      currentDate: \"\"\n    };\n  },\n  watch: {\n    calendarData: {\n      handler: function (newVal, oldVal) {\n        console.log(newVal);\n        this.getLogs(newVal);\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  async created() {\n    await this.getLogs(new moment());\n    // 监听自定义事件\n    this.$bus.$on('requestCompleted', () => {\n      console.log('reloadComponent called');\n      this.getLogs(new moment());\n      this.calendarComponentKey += 1;\n    });\n  },\n  methods: {\n    getListData(value) {\n      var temp = value;\n      let listData = [];\n      this.logData.forEach(item => {\n        if (item.created_at.split(\" \")[0] === temp.format('YYYY-MM-DD')) {\n          listData.push({\n            type: item.status === 'failure' ? 'warning' : \"success\",\n            content: item.type + \": \" + item.name\n          });\n        }\n      });\n      return listData || [];\n    },\n    getPanelChange(moment) {\n      console.log(moment);\n      this.getLogs(moment);\n    },\n    updateLogModelStatus(status) {\n      this.openLogModelFlag = status;\n      if (!status) {\n        this.oneLogComponentKey += 1;\n      }\n    },\n    getLogs(moment) {\n      const temp = moment.clone();\n      var startDate = temp.startOf('month').subtract(1, 'month').format('YYYY-MM-DD');\n      var endDate = temp.endOf('month').add(2, 'month').format('YYYY-MM-DD');\n      var param = \"?start=\" + startDate + \"&target=\" + endDate;\n      this.$request.getLog(param).then(res => {\n        this.logData = res.data.data;\n      });\n    },\n    onSelect(value) {\n      const date = moment(value);\n      const formattedDate = date.format('YYYY-MM-DD');\n      this.currentDate = formattedDate;\n      var param = \"?created_at=\" + formattedDate;\n      this.$request.getLog(param).then(res => {\n        if (res.status === 200) {\n          this.oneLog = res.data.data;\n          this.openLogModelFlag = true;\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}