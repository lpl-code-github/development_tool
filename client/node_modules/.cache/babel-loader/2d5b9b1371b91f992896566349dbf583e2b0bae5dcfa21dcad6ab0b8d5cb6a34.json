{"ast":null,"code":"// 引入axios\nimport axios from 'axios';\n\n// 顶部loading\nimport NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\n//axios打开允许跨域携带cookie信息\naxios.defaults.withCredentials = true;\n\n// ant design的notification组件\nimport notification from 'ant-design-vue/lib/notification';\n// 引入封装好的接口模块\nimport * as request from './request.js';\n\n// 请求超时时间\naxios.defaults.timeout = 100000;\n\n// 代理接口 部署时应该换为后台实际地址\nconst service = axios.create({\n  // baseURL: '/apis' // 开发环境的url\n  baseURL: 'http://localhost:8081/tool_server/public'\n});\n\n// 请求拦截器(在请求之前进行一些配置)\nservice.interceptors.request.use(config => {\n  var url = config.url;\n  if (url !== '/functional/getSystemStatus' && url !== '/functional/getPs') {\n    // 加载顶部loading\n    NProgress.start();\n  }\n  return config;\n}, err => {\n  // Promise.reject()方法返回一个带有拒绝原因的Promise对象\n  return Promise.reject(err);\n});\n\n// 响应拦截器(响应之后对数据做一些处理)\nservice.interceptors.response.use(response => {\n  // 关闭顶部loading\n  NProgress.done();\n\n  // 返回响应体\n  return response;\n}, error => {\n  const {\n    data\n  } = error.response;\n  // duration代表notification设置了不关闭，因为有些报错信息内容中可能存在需要复制的场景\n  if (data.code === 404) {\n    notification.error({\n      message: '未找到',\n      description: error.response.data.message,\n      duration: null\n    });\n  } else {\n    notification.error({\n      message: '错误的请求',\n      description: error.response.data.message,\n      duration: null\n    });\n  }\n\n  // 关闭顶部loading\n  NProgress.done();\n  // 请求超时\n  if (error.message.indexOf('timeout') !== -1) {\n    notification.error({\n      message: '请求超时，请稍后再试'\n    });\n  }\n  return error;\n});\nexport { request, service };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}