{"ast":null,"code":"function loopFiles(item, callback) {\n  const dirReader = item.createReader();\n  let fileList = [];\n  function sequence() {\n    dirReader.readEntries(entries => {\n      const entryList = Array.prototype.slice.apply(entries);\n      fileList = fileList.concat(entryList);\n      // Check if all the file has been viewed\n      const isFinished = !entryList.length;\n      if (isFinished) {\n        callback(fileList);\n      } else {\n        sequence();\n      }\n    });\n  }\n  sequence();\n}\nconst traverseFileTree = (files, callback, isAccepted) => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const _traverseFileTree = (item, path) => {\n    // eslint-disable-next-line no-param-reassign\n    item.path = path || '';\n    if (item.isFile) {\n      item.file(file => {\n        if (isAccepted(file)) {\n          // https://github.com/ant-design/ant-design/issues/16426\n          if (item.fullPath && !file.webkitRelativePath) {\n            Object.defineProperties(file, {\n              webkitRelativePath: {\n                writable: true\n              }\n            });\n            // eslint-disable-next-line no-param-reassign\n            file.webkitRelativePath = item.fullPath.replace(/^\\//, '');\n            Object.defineProperties(file, {\n              webkitRelativePath: {\n                writable: false\n              }\n            });\n          }\n          callback([file]);\n        }\n      });\n    } else if (item.isDirectory) {\n      loopFiles(item, entries => {\n        entries.forEach(entryItem => {\n          _traverseFileTree(entryItem, `${path}${item.name}/`);\n        });\n      });\n    }\n  };\n  files.forEach(file => {\n    _traverseFileTree(file.webkitGetAsEntry());\n  });\n};\nexport default traverseFileTree;","map":{"version":3,"names":["loopFiles","item","callback","dirReader","createReader","fileList","sequence","readEntries","entries","entryList","Array","prototype","slice","apply","concat","isFinished","length","traverseFileTree","files","isAccepted","_traverseFileTree","path","isFile","file","fullPath","webkitRelativePath","Object","defineProperties","writable","replace","isDirectory","forEach","entryItem","name","webkitGetAsEntry"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-upload/traverseFileTree.js"],"sourcesContent":["function loopFiles(item, callback) {\n  const dirReader = item.createReader();\n  let fileList = [];\n  function sequence() {\n    dirReader.readEntries(entries => {\n      const entryList = Array.prototype.slice.apply(entries);\n      fileList = fileList.concat(entryList);\n      // Check if all the file has been viewed\n      const isFinished = !entryList.length;\n      if (isFinished) {\n        callback(fileList);\n      } else {\n        sequence();\n      }\n    });\n  }\n  sequence();\n}\nconst traverseFileTree = (files, callback, isAccepted) => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const _traverseFileTree = (item, path) => {\n    // eslint-disable-next-line no-param-reassign\n    item.path = path || '';\n    if (item.isFile) {\n      item.file(file => {\n        if (isAccepted(file)) {\n          // https://github.com/ant-design/ant-design/issues/16426\n          if (item.fullPath && !file.webkitRelativePath) {\n            Object.defineProperties(file, {\n              webkitRelativePath: {\n                writable: true\n              }\n            });\n            // eslint-disable-next-line no-param-reassign\n            file.webkitRelativePath = item.fullPath.replace(/^\\//, '');\n            Object.defineProperties(file, {\n              webkitRelativePath: {\n                writable: false\n              }\n            });\n          }\n          callback([file]);\n        }\n      });\n    } else if (item.isDirectory) {\n      loopFiles(item, entries => {\n        entries.forEach(entryItem => {\n          _traverseFileTree(entryItem, `${path}${item.name}/`);\n        });\n      });\n    }\n  };\n  files.forEach(file => {\n    _traverseFileTree(file.webkitGetAsEntry());\n  });\n};\nexport default traverseFileTree;"],"mappings":"AAAA,SAASA,SAASA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACjC,MAAMC,SAAS,GAAGF,IAAI,CAACG,YAAY,CAAC,CAAC;EACrC,IAAIC,QAAQ,GAAG,EAAE;EACjB,SAASC,QAAQA,CAAA,EAAG;IAClBH,SAAS,CAACI,WAAW,CAACC,OAAO,IAAI;MAC/B,MAAMC,SAAS,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,KAAK,CAACL,OAAO,CAAC;MACtDH,QAAQ,GAAGA,QAAQ,CAACS,MAAM,CAACL,SAAS,CAAC;MACrC;MACA,MAAMM,UAAU,GAAG,CAACN,SAAS,CAACO,MAAM;MACpC,IAAID,UAAU,EAAE;QACdb,QAAQ,CAACG,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLC,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,CAAC;EACJ;EACAA,QAAQ,CAAC,CAAC;AACZ;AACA,MAAMW,gBAAgB,GAAGA,CAACC,KAAK,EAAEhB,QAAQ,EAAEiB,UAAU,KAAK;EACxD;EACA,MAAMC,iBAAiB,GAAGA,CAACnB,IAAI,EAAEoB,IAAI,KAAK;IACxC;IACApB,IAAI,CAACoB,IAAI,GAAGA,IAAI,IAAI,EAAE;IACtB,IAAIpB,IAAI,CAACqB,MAAM,EAAE;MACfrB,IAAI,CAACsB,IAAI,CAACA,IAAI,IAAI;QAChB,IAAIJ,UAAU,CAACI,IAAI,CAAC,EAAE;UACpB;UACA,IAAItB,IAAI,CAACuB,QAAQ,IAAI,CAACD,IAAI,CAACE,kBAAkB,EAAE;YAC7CC,MAAM,CAACC,gBAAgB,CAACJ,IAAI,EAAE;cAC5BE,kBAAkB,EAAE;gBAClBG,QAAQ,EAAE;cACZ;YACF,CAAC,CAAC;YACF;YACAL,IAAI,CAACE,kBAAkB,GAAGxB,IAAI,CAACuB,QAAQ,CAACK,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;YAC1DH,MAAM,CAACC,gBAAgB,CAACJ,IAAI,EAAE;cAC5BE,kBAAkB,EAAE;gBAClBG,QAAQ,EAAE;cACZ;YACF,CAAC,CAAC;UACJ;UACA1B,QAAQ,CAAC,CAACqB,IAAI,CAAC,CAAC;QAClB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAItB,IAAI,CAAC6B,WAAW,EAAE;MAC3B9B,SAAS,CAACC,IAAI,EAAEO,OAAO,IAAI;QACzBA,OAAO,CAACuB,OAAO,CAACC,SAAS,IAAI;UAC3BZ,iBAAiB,CAACY,SAAS,EAAG,GAAEX,IAAK,GAAEpB,IAAI,CAACgC,IAAK,GAAE,CAAC;QACtD,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACDf,KAAK,CAACa,OAAO,CAACR,IAAI,IAAI;IACpBH,iBAAiB,CAACG,IAAI,CAACW,gBAAgB,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC;AACJ,CAAC;AACD,eAAejB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}