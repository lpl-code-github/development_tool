{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport devWarning from '../../vc-util/devWarning';\nimport { renderSlot } from 'vue';\nimport { SELECTION_COLUMN } from './useSelection';\nimport { EXPAND_COLUMN } from '../../vc-table';\nfunction fillSlots(columns, contextSlots) {\n  const $slots = contextSlots.value;\n  return columns.map(column => {\n    var _a;\n    if (column === SELECTION_COLUMN || column === EXPAND_COLUMN) return column;\n    const cloneColumn = _extends({}, column);\n    const {\n      slots = {}\n    } = cloneColumn;\n    cloneColumn.__originColumn__ = column;\n    devWarning(!('slots' in cloneColumn), 'Table', '`column.slots` is deprecated. Please use `v-slot:headerCell` `v-slot:bodyCell` instead.');\n    Object.keys(slots).forEach(key => {\n      const name = slots[key];\n      if (cloneColumn[key] === undefined && $slots[name]) {\n        cloneColumn[key] = $slots[name];\n      }\n    });\n    if (contextSlots.value.headerCell && !((_a = column.slots) === null || _a === void 0 ? void 0 : _a.title)) {\n      cloneColumn.title = renderSlot(contextSlots.value, 'headerCell', {\n        title: column.title,\n        column\n      }, () => [column.title]);\n    }\n    if ('children' in cloneColumn && Array.isArray(cloneColumn.children)) {\n      cloneColumn.children = fillSlots(cloneColumn.children, contextSlots);\n    }\n    return cloneColumn;\n  });\n}\nexport default function useColumns(contextSlots) {\n  const filledColumns = columns => fillSlots(columns, contextSlots);\n  return [filledColumns];\n}","map":{"version":3,"names":["_extends","devWarning","renderSlot","SELECTION_COLUMN","EXPAND_COLUMN","fillSlots","columns","contextSlots","$slots","value","map","column","_a","cloneColumn","slots","__originColumn__","Object","keys","forEach","key","name","undefined","headerCell","title","Array","isArray","children","useColumns","filledColumns"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/table/hooks/useColumns.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport devWarning from '../../vc-util/devWarning';\nimport { renderSlot } from 'vue';\nimport { SELECTION_COLUMN } from './useSelection';\nimport { EXPAND_COLUMN } from '../../vc-table';\nfunction fillSlots(columns, contextSlots) {\n  const $slots = contextSlots.value;\n  return columns.map(column => {\n    var _a;\n    if (column === SELECTION_COLUMN || column === EXPAND_COLUMN) return column;\n    const cloneColumn = _extends({}, column);\n    const {\n      slots = {}\n    } = cloneColumn;\n    cloneColumn.__originColumn__ = column;\n    devWarning(!('slots' in cloneColumn), 'Table', '`column.slots` is deprecated. Please use `v-slot:headerCell` `v-slot:bodyCell` instead.');\n    Object.keys(slots).forEach(key => {\n      const name = slots[key];\n      if (cloneColumn[key] === undefined && $slots[name]) {\n        cloneColumn[key] = $slots[name];\n      }\n    });\n    if (contextSlots.value.headerCell && !((_a = column.slots) === null || _a === void 0 ? void 0 : _a.title)) {\n      cloneColumn.title = renderSlot(contextSlots.value, 'headerCell', {\n        title: column.title,\n        column\n      }, () => [column.title]);\n    }\n    if ('children' in cloneColumn && Array.isArray(cloneColumn.children)) {\n      cloneColumn.children = fillSlots(cloneColumn.children, contextSlots);\n    }\n    return cloneColumn;\n  });\n}\nexport default function useColumns(contextSlots) {\n  const filledColumns = columns => fillSlots(columns, contextSlots);\n  return [filledColumns];\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,UAAU,QAAQ,KAAK;AAChC,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,SAASA,CAACC,OAAO,EAAEC,YAAY,EAAE;EACxC,MAAMC,MAAM,GAAGD,YAAY,CAACE,KAAK;EACjC,OAAOH,OAAO,CAACI,GAAG,CAACC,MAAM,IAAI;IAC3B,IAAIC,EAAE;IACN,IAAID,MAAM,KAAKR,gBAAgB,IAAIQ,MAAM,KAAKP,aAAa,EAAE,OAAOO,MAAM;IAC1E,MAAME,WAAW,GAAGb,QAAQ,CAAC,CAAC,CAAC,EAAEW,MAAM,CAAC;IACxC,MAAM;MACJG,KAAK,GAAG,CAAC;IACX,CAAC,GAAGD,WAAW;IACfA,WAAW,CAACE,gBAAgB,GAAGJ,MAAM;IACrCV,UAAU,CAAC,EAAE,OAAO,IAAIY,WAAW,CAAC,EAAE,OAAO,EAAE,yFAAyF,CAAC;IACzIG,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;MAChC,MAAMC,IAAI,GAAGN,KAAK,CAACK,GAAG,CAAC;MACvB,IAAIN,WAAW,CAACM,GAAG,CAAC,KAAKE,SAAS,IAAIb,MAAM,CAACY,IAAI,CAAC,EAAE;QAClDP,WAAW,CAACM,GAAG,CAAC,GAAGX,MAAM,CAACY,IAAI,CAAC;MACjC;IACF,CAAC,CAAC;IACF,IAAIb,YAAY,CAACE,KAAK,CAACa,UAAU,IAAI,EAAE,CAACV,EAAE,GAAGD,MAAM,CAACG,KAAK,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACW,KAAK,CAAC,EAAE;MACzGV,WAAW,CAACU,KAAK,GAAGrB,UAAU,CAACK,YAAY,CAACE,KAAK,EAAE,YAAY,EAAE;QAC/Dc,KAAK,EAAEZ,MAAM,CAACY,KAAK;QACnBZ;MACF,CAAC,EAAE,MAAM,CAACA,MAAM,CAACY,KAAK,CAAC,CAAC;IAC1B;IACA,IAAI,UAAU,IAAIV,WAAW,IAAIW,KAAK,CAACC,OAAO,CAACZ,WAAW,CAACa,QAAQ,CAAC,EAAE;MACpEb,WAAW,CAACa,QAAQ,GAAGrB,SAAS,CAACQ,WAAW,CAACa,QAAQ,EAAEnB,YAAY,CAAC;IACtE;IACA,OAAOM,WAAW;EACpB,CAAC,CAAC;AACJ;AACA,eAAe,SAASc,UAAUA,CAACpB,YAAY,EAAE;EAC/C,MAAMqB,aAAa,GAAGtB,OAAO,IAAID,SAAS,CAACC,OAAO,EAAEC,YAAY,CAAC;EACjE,OAAO,CAACqB,aAAa,CAAC;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}