{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nexport const skeletonParagraphProps = () => ({\n  prefixCls: String,\n  width: {\n    type: [Number, String, Array]\n  },\n  rows: Number\n});\nconst SkeletonParagraph = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'SkeletonParagraph',\n  props: skeletonParagraphProps(),\n  setup(props) {\n    const getWidth = index => {\n      const {\n        width,\n        rows = 2\n      } = props;\n      if (Array.isArray(width)) {\n        return width[index];\n      }\n      // last paragraph\n      if (rows - 1 === index) {\n        return width;\n      }\n      return undefined;\n    };\n    return () => {\n      const {\n        prefixCls,\n        rows\n      } = props;\n      const rowList = [...Array(rows)].map((_, index) => {\n        const width = getWidth(index);\n        return _createVNode(\"li\", {\n          \"key\": index,\n          \"style\": {\n            width: typeof width === 'number' ? `${width}px` : width\n          }\n        }, null);\n      });\n      return _createVNode(\"ul\", {\n        \"class\": prefixCls\n      }, [rowList]);\n    };\n  }\n});\nexport default SkeletonParagraph;","map":{"version":3,"names":["createVNode","_createVNode","defineComponent","skeletonParagraphProps","prefixCls","String","width","type","Number","Array","rows","SkeletonParagraph","compatConfig","MODE","name","props","setup","getWidth","index","isArray","undefined","rowList","map","_"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/skeleton/Paragraph.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nexport const skeletonParagraphProps = () => ({\n  prefixCls: String,\n  width: {\n    type: [Number, String, Array]\n  },\n  rows: Number\n});\nconst SkeletonParagraph = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'SkeletonParagraph',\n  props: skeletonParagraphProps(),\n  setup(props) {\n    const getWidth = index => {\n      const {\n        width,\n        rows = 2\n      } = props;\n      if (Array.isArray(width)) {\n        return width[index];\n      }\n      // last paragraph\n      if (rows - 1 === index) {\n        return width;\n      }\n      return undefined;\n    };\n    return () => {\n      const {\n        prefixCls,\n        rows\n      } = props;\n      const rowList = [...Array(rows)].map((_, index) => {\n        const width = getWidth(index);\n        return _createVNode(\"li\", {\n          \"key\": index,\n          \"style\": {\n            width: typeof width === 'number' ? `${width}px` : width\n          }\n        }, null);\n      });\n      return _createVNode(\"ul\", {\n        \"class\": prefixCls\n      }, [rowList]);\n    };\n  }\n});\nexport default SkeletonParagraph;"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,SAASC,eAAe,QAAQ,KAAK;AACrC,OAAO,MAAMC,sBAAsB,GAAGA,CAAA,MAAO;EAC3CC,SAAS,EAAEC,MAAM;EACjBC,KAAK,EAAE;IACLC,IAAI,EAAE,CAACC,MAAM,EAAEH,MAAM,EAAEI,KAAK;EAC9B,CAAC;EACDC,IAAI,EAAEF;AACR,CAAC,CAAC;AACF,MAAMG,iBAAiB,GAAGT,eAAe,CAAC;EACxCU,YAAY,EAAE;IACZC,IAAI,EAAE;EACR,CAAC;EACDC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAEZ,sBAAsB,CAAC,CAAC;EAC/Ba,KAAKA,CAACD,KAAK,EAAE;IACX,MAAME,QAAQ,GAAGC,KAAK,IAAI;MACxB,MAAM;QACJZ,KAAK;QACLI,IAAI,GAAG;MACT,CAAC,GAAGK,KAAK;MACT,IAAIN,KAAK,CAACU,OAAO,CAACb,KAAK,CAAC,EAAE;QACxB,OAAOA,KAAK,CAACY,KAAK,CAAC;MACrB;MACA;MACA,IAAIR,IAAI,GAAG,CAAC,KAAKQ,KAAK,EAAE;QACtB,OAAOZ,KAAK;MACd;MACA,OAAOc,SAAS;IAClB,CAAC;IACD,OAAO,MAAM;MACX,MAAM;QACJhB,SAAS;QACTM;MACF,CAAC,GAAGK,KAAK;MACT,MAAMM,OAAO,GAAG,CAAC,GAAGZ,KAAK,CAACC,IAAI,CAAC,CAAC,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEL,KAAK,KAAK;QACjD,MAAMZ,KAAK,GAAGW,QAAQ,CAACC,KAAK,CAAC;QAC7B,OAAOjB,YAAY,CAAC,IAAI,EAAE;UACxB,KAAK,EAAEiB,KAAK;UACZ,OAAO,EAAE;YACPZ,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAI,GAAEA,KAAM,IAAG,GAAGA;UACpD;QACF,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;MACF,OAAOL,YAAY,CAAC,IAAI,EAAE;QACxB,OAAO,EAAEG;MACX,CAAC,EAAE,CAACiB,OAAO,CAAC,CAAC;IACf,CAAC;EACH;AACF,CAAC,CAAC;AACF,eAAeV,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}