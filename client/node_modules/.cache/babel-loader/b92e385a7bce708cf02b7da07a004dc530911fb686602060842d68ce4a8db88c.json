{"ast":null,"code":"import SwitchComponent from \"@/components/switch/SwitchComponent\";\nimport Statistics from \"@/components/preview/Statistics\";\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'MyHeader',\n  components: {\n    Statistics,\n    SwitchComponent\n  },\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      openDrawer: false,\n      buttonSize: \"small\",\n      loadingUpdateSystem: false,\n      popoverIsShow: false,\n      switchComponentData: [{\n        tooltipText: \"此开关打开，后端API将返回Symfony的报错信息，否则返回json的报错信息\",\n        switchText: \"后台报错信息\",\n        type: \"error_message\",\n        checked: false\n      }, {\n        tooltipText: \"此开关打开，后端代码的.env文件中将修改环境遍历APP_ENV=test，否则为dev\",\n        switchText: \"切换测试模式\",\n        type: \"evn\",\n        checked: false\n      }, {\n        tooltipText: \"此开关打开，后端将增加供postman使用的/backup和/reduction端点\",\n        switchText: \"导入备份端点\",\n        type: \"back_api\",\n        checked: false\n      }]\n    };\n  },\n  methods: {\n    async handleQuickSwitch() {\n      await this.$request.switchStatus().then(res => {\n        // if (res.status !== 200) {\n        //   this.popoverIsShow = false\n        // }else {\n        //   this.popoverIsShow = true\n        // }\n\n        var response = {\n          data: [{\n            type: \"error_message\",\n            checked: false\n          }, {\n            type: \"evn\",\n            checked: true\n          }, {\n            type: \"back_api\",\n            checked: true\n          }]\n        };\n        this.switchComponentData.forEach(componentDataItem => {\n          const responseItem = response.data.find(item => item.type === componentDataItem.type);\n          if (responseItem) {\n            componentDataItem.checked = responseItem.checked;\n          }\n        });\n      });\n    },\n    handleOpenDrawer() {\n      this.openDrawer = true;\n    },\n    getDrawerStatus(status) {\n      this.openDrawer = status;\n    }\n  }\n};","map":{"version":3,"names":["SwitchComponent","Statistics","name","components","props","msg","String","data","openDrawer","buttonSize","loadingUpdateSystem","popoverIsShow","switchComponentData","tooltipText","switchText","type","checked","methods","handleQuickSwitch","$request","switchStatus","then","res","response","forEach","componentDataItem","responseItem","find","item","handleOpenDrawer","getDrawerStatus","status"],"sources":["src/components/common/MyHeader.vue"],"sourcesContent":["<template>\n  <div class=\"header\">\n    <a-layout-header style=\"background: #fff; padding: 0;display: flex;justify-content: space-between;align-items: center;padding: 0 20px\">\n      <div style=\"float: right\">\n        <span style=\"font-size: medium;font-weight: bolder\">RISKID开发者工具</span>\n      </div>\n      <div style=\"float: left\">\n        <a-button icon=\"setting\" :size=\"buttonSize\" style=\"margin-right: 20px\" :loading=\"loadingUpdateSystem\" @click=\"handleOpenDrawer\">\n          R1概览\n        </a-button>\n\n        <!--快捷开关-->\n        <a-popover title=\"开关\" placement=\"topLeft\" trigger=\"click\" @click=\"handleQuickSwitch\" :visible=\"popoverIsShow\">\n          <template slot=\"content\">\n            <SwitchComponent\n                v-for=\"(item,index) in switchComponentData\"\n                :key=\"index\"\n                :type=\"item.type\"\n                :switch-text=\"item.switchText\"\n                :tooltip-text=\"item.tooltipText\"\n                :flag = \"item.checked\"\n            />\n          </template>\n          <a-button icon=\"setting\" :size=\"buttonSize\">\n            快捷开关\n          </a-button>\n        </a-popover>\n      </div>\n\n    </a-layout-header>\n\n    <Statistics @updateDrawerStatus=\"getDrawerStatus\" :open-flag=\"openDrawer\"></Statistics>\n  </div>\n</template>\n\n<script>\nimport SwitchComponent from \"@/components/switch/SwitchComponent\";\nimport Statistics from \"@/components/preview/Statistics\";\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'MyHeader',\n  components: {Statistics, SwitchComponent},\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      openDrawer: false,\n      buttonSize: \"small\",\n      loadingUpdateSystem: false,\n      popoverIsShow: false,\n      switchComponentData: [\n        {\n          tooltipText: \"此开关打开，后端API将返回Symfony的报错信息，否则返回json的报错信息\",\n          switchText: \"后台报错信息\",\n          type: \"error_message\",\n          checked: false\n        },\n        {\n          tooltipText: \"此开关打开，后端代码的.env文件中将修改环境遍历APP_ENV=test，否则为dev\",\n          switchText: \"切换测试模式\",\n          type: \"evn\",\n          checked: false\n        },\n        {\n          tooltipText: \"此开关打开，后端将增加供postman使用的/backup和/reduction端点\",\n          switchText: \"导入备份端点\",\n          type: \"back_api\",\n          checked: false\n        }\n      ]\n    }\n  },\n  methods: {\n    async handleQuickSwitch() {\n      await this.$request.switchStatus().then(res => {\n        // if (res.status !== 200) {\n        //   this.popoverIsShow = false\n        // }else {\n        //   this.popoverIsShow = true\n        // }\n\n        var response = {\n          data:[\n            {\n              type: \"error_message\",\n              checked: false\n            },\n            {\n              type: \"evn\",\n              checked: true\n            },\n            {\n              type: \"back_api\",\n              checked: true\n            }\n          ]\n        }\n        this.switchComponentData.forEach(componentDataItem => {\n          const responseItem = response.data.find(item => item.type === componentDataItem.type);\n          if (responseItem) {\n            componentDataItem.checked = responseItem.checked;\n          }\n        });\n      })\n    },\n    handleOpenDrawer(){\n      this.openDrawer = true\n    },\n    getDrawerStatus(status){\n      this.openDrawer = status\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AAoCA,OAAAA,eAAA;AACA,OAAAC,UAAA;AAEA;EACA;EACAC,IAAA;EACAC,UAAA;IAAAF,UAAA;IAAAD;EAAA;EACAI,KAAA;IACAC,GAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,UAAA;MACAC,mBAAA;MACAC,aAAA;MACAC,mBAAA,GACA;QACAC,WAAA;QACAC,UAAA;QACAC,IAAA;QACAC,OAAA;MACA,GACA;QACAH,WAAA;QACAC,UAAA;QACAC,IAAA;QACAC,OAAA;MACA,GACA;QACAH,WAAA;QACAC,UAAA;QACAC,IAAA;QACAC,OAAA;MACA;IAEA;EACA;EACAC,OAAA;IACA,MAAAC,kBAAA;MACA,WAAAC,QAAA,CAAAC,YAAA,GAAAC,IAAA,CAAAC,GAAA;QACA;QACA;QACA;QACA;QACA;;QAEA,IAAAC,QAAA;UACAhB,IAAA,GACA;YACAQ,IAAA;YACAC,OAAA;UACA,GACA;YACAD,IAAA;YACAC,OAAA;UACA,GACA;YACAD,IAAA;YACAC,OAAA;UACA;QAEA;QACA,KAAAJ,mBAAA,CAAAY,OAAA,CAAAC,iBAAA;UACA,MAAAC,YAAA,GAAAH,QAAA,CAAAhB,IAAA,CAAAoB,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAb,IAAA,KAAAU,iBAAA,CAAAV,IAAA;UACA,IAAAW,YAAA;YACAD,iBAAA,CAAAT,OAAA,GAAAU,YAAA,CAAAV,OAAA;UACA;QACA;MACA;IACA;IACAa,iBAAA;MACA,KAAArB,UAAA;IACA;IACAsB,gBAAAC,MAAA;MACA,KAAAvB,UAAA,GAAAuB,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}