{"ast":null,"code":"export default {\n  name: \"AddScript\",\n  components: {\n    VNodes: {\n      functional: true,\n      render: (h, ctx) => ctx.props.vnodes\n    }\n  },\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    filterOption: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      childrenModelVisible: false,\n      // 子modal的可见\n      formLayout: 'horizontal',\n      form: this.$form.createForm(this, {\n        name: 'coordinated'\n      }),\n      tagForm: this.$form.createForm(this, {\n        name: 'coordinated'\n      }),\n      tags: [],\n      selectedItems: [],\n      // 被选中的\n      newTag: {\n        name: \"\",\n        color: '#61afd1'\n      }\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        this.visible = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    },\n    filterOption: {\n      handler: function (newVal, oldVal) {\n        this.tags = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    },\n    newTag: {\n      handler: function (newVal, oldVal) {\n        console.log(newVal);\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  computed: {\n    filteredSelectedOptions() {\n      return this.tags.filter(o => !this.selectedItems.includes(o));\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n    this.tags = this.filterOption;\n  },\n  methods: {\n    /*\n      选择器\n     */\n    handleSelect(selectedItems) {\n      this.selectedItems = selectedItems;\n    },\n    addItemClick() {\n      this.childrenModelVisible = true;\n    },\n    addTag(e) {\n      e.preventDefault();\n      this.tagForm.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n      this.childrenModelVisible = false;\n    },\n    initTagFormData() {\n      this.$refs.tagForm.resetFields();\n    },\n    handleOk(e) {\n      this.loading = true;\n      e.preventDefault();\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        } else {\n          this.loading = false;\n        }\n      });\n      setTimeout(() => {\n        this.$emit('updateModelStatus', false);\n        this.loading = false;\n      }, 3000);\n    },\n    handleCancel(e) {\n      this.$emit('updateModelStatus', false);\n    },\n    afterClose(e) {\n      this.$emit('updateModelStatus', false);\n    },\n    handleChange(info) {\n      const status = info.file.status;\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (status === 'done') {\n        this.$message.success(`${info.file.name} file uploaded successfully.`);\n      } else if (status === 'error') {\n        this.$message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","components","VNodes","functional","render","h","ctx","props","vnodes","openFlag","type","Boolean","required","filterOption","Array","data","loading","visible","childrenModelVisible","formLayout","form","$form","createForm","tagForm","tags","selectedItems","newTag","color","watch","handler","newVal","oldVal","deep","console","log","computed","filteredSelectedOptions","filter","o","includes","mounted","methods","handleSelect","addItemClick","addTag","e","preventDefault","validateFields","err","values","initTagFormData","$refs","resetFields","handleOk","setTimeout","$emit","handleCancel","afterClose","handleChange","info","status","file","fileList","$message","success","error"],"sources":["src/components/Script/AddScript.vue"],"sourcesContent":["<template>\n  <div>\n    <a-modal v-model=\"visible\" title=\"Title\" on-ok=\"handleOk\" :afterClose=\"afterClose\" :maskClosable=\"false\">\n      <template slot=\"footer\">\n        <a-button key=\"back\" @click=\"handleCancel\">\n          取消\n        </a-button>\n        <a-button key=\"submit\" type=\"primary\" :loading=\"loading\" @click=\"handleOk\">\n          添加\n        </a-button>\n      </template>\n      <a-form :form=\"form\" :label-col=\"{ span: 3 }\" :wrapper-col=\"{ span: 20}\" style=\"width: 100%\">\n        <a-form-item label=\"名称\">\n          <a-input\n              v-decorator=\"['name', { rules: [{ required: true, message: 'Please input your name!' }] }]\"\n          />\n        </a-form-item>\n        <a-form-model-item label=\"描述\" prop=\"desc\">\n          <a-input v-model=\"form.desc\" type=\"textarea\"/>\n        </a-form-model-item>\n        <a-form-model-item label=\"标签\" prop=\"tags\">\n          <a-select\n              show-search\n              placeholder=\"请选择标签\"\n              mode=\"multiple\"\n              @change=\"handleSelect\"\n          >\n            <div slot=\"dropdownRender\" slot-scope=\"menu\">\n              <v-nodes :vnodes=\"menu\"/>\n              <a-divider style=\"margin: 4px 0;\"/>\n              <div\n                  style=\"padding: 4px 8px; cursor: pointer;\"\n                  @mousedown=\"e => e.preventDefault()\"\n                  @click=\"addItemClick\"\n              >\n                <a-icon type=\"plus\"/>\n                添加新的标签\n              </div>\n            </div>\n\n            <a-select-option v-for=\"(item,index) in filteredSelectedOptions\" :key=\"index\" :value=\"item.name\">\n              <div class=\"color-box\" :style=\"{ 'background-color': item.color}\"></div>\n              <span>{{ item.name }}</span>\n            </a-select-option>\n          </a-select>\n        </a-form-model-item>\n\n      </a-form>\n      <div style=\"margin: auto;width: 93%\">\n        <a-upload-dragger\n            :directory=\"false\"\n            name=\"file\"\n            :multiple=\"false\"\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            @change=\"handleChange\"\n        >\n          <p class=\"ant-upload-drag-icon\">\n            <a-icon type=\"inbox\"/>\n          </p>\n          <p class=\"ant-upload-text\">\n            单击或拖动文件到此区域进行上传\n          </p>\n          <p class=\"ant-upload-hint\">\n            只接受一个脚本文件\n          </p>\n        </a-upload-dragger>\n      </div>\n    </a-modal>\n\n    <a-modal v-model=\"childrenModelVisible\"\n             ref=\"tagForm\"\n             title=\"添加一个新的标签\"\n             ok-text=\"确认\"\n             cancel-text=\"取消\"\n             :maskClosable=\"false\"\n             :afterClose=\"afterCloseChild\"\n             @ok=\"addTag\"\n    >\n      <a-form :form=\"tagForm\" :label-col=\"{ span: 3 }\" :wrapper-col=\"{ span: 20 }\" @submi=\"addTag\">\n        <a-form-item label=\"内容\">\n          <a-input\n              v-decorator=\"['note', { rules: [{ required: true, message: '请输入标签内容' }] }]\"\n              v-model=\"newTag.name\"\n          />\n        </a-form-item>\n        <a-form-item label=\"颜色\">\n          <a-input type=\"color\" v-model=\"newTag.color\"/>\n        </a-form-item>\n      </a-form>\n    </a-modal>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"AddScript\",\n  components: {\n    VNodes: {\n      functional: true,\n      render: (h, ctx) => ctx.props.vnodes,\n    },\n  },\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    },\n    filterOption: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      childrenModelVisible:false,// 子modal的可见\n      formLayout: 'horizontal',\n      form: this.$form.createForm(this, {name: 'coordinated'}),\n      tagForm: this.$form.createForm(this, { name: 'coordinated' }),\n      tags: [],\n      selectedItems: [], // 被选中的\n      newTag:{\n        name:\"\",\n        color:'#61afd1'\n      }\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        this.visible = newVal\n      },\n      // 深度观察监听\n      deep: true\n    },\n    filterOption: {\n      handler: function (newVal, oldVal) {\n        this.tags = newVal\n      },\n      // 深度观察监听\n      deep: true\n    },\n    newTag: {\n      handler: function (newVal, oldVal) {\n        console.log(newVal)\n      },\n      // 深度观察监听\n      deep: true\n    },\n  },\n  computed: {\n    filteredSelectedOptions() {\n      return this.tags.filter(o => !this.selectedItems.includes(o));\n    },\n  },\n  mounted() {\n    this.visible = this.openFlag\n    this.tags = this.filterOption\n  },\n\n  methods: {\n    /*\n      选择器\n     */\n    handleSelect(selectedItems) {\n      this.selectedItems = selectedItems;\n    },\n    addItemClick(){\n      this.childrenModelVisible = true\n    },\n    addTag(e) {\n      e.preventDefault();\n      this.tagForm.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n      this.childrenModelVisible = false;\n    },\n    initTagFormData() {\n      this.$refs.tagForm.resetFields();\n    },\n\n\n    handleOk(e) {\n      this.loading = true;\n      e.preventDefault();\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        } else {\n          this.loading = false;\n        }\n      });\n\n      setTimeout(() => {\n        this.$emit('updateModelStatus', false)\n        this.loading = false;\n      }, 3000);\n    },\n    handleCancel(e) {\n      this.$emit('updateModelStatus', false)\n    },\n    afterClose(e) {\n      this.$emit('updateModelStatus', false)\n    },\n    handleChange(info) {\n      const status = info.file.status;\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (status === 'done') {\n        this.$message.success(`${info.file.name} file uploaded successfully.`);\n      } else if (status === 'error') {\n        this.$message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.color-box {\n  width: 12px;\n  height: 12px;\n  align-items: center;\n  margin: 0 5px 0 0;\n  display: inline-block;\n}\n\n/deep/ .anticon .anticon-exclamation-circle {\n  display: none !important;\n}\n\n</style>\n"],"mappings":"AA6FA;EACAA,IAAA;EACAC,UAAA;IACAC,MAAA;MACAC,UAAA;MACAC,MAAA,EAAAA,CAAAC,CAAA,EAAAC,GAAA,KAAAA,GAAA,CAAAC,KAAA,CAAAC;IACA;EACA;EACAD,KAAA;IACAE,QAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,QAAA;IACA;IACAC,YAAA;MACAH,IAAA,EAAAI,KAAA;MACAF,QAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;MACAC,oBAAA;MAAA;MACAC,UAAA;MACAC,IAAA,OAAAC,KAAA,CAAAC,UAAA;QAAAtB,IAAA;MAAA;MACAuB,OAAA,OAAAF,KAAA,CAAAC,UAAA;QAAAtB,IAAA;MAAA;MACAwB,IAAA;MACAC,aAAA;MAAA;MACAC,MAAA;QACA1B,IAAA;QACA2B,KAAA;MACA;IACA;EACA;EACAC,KAAA;IACAnB,QAAA;MACAoB,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACA,KAAAd,OAAA,GAAAa,MAAA;MACA;MACA;MACAE,IAAA;IACA;IACAnB,YAAA;MACAgB,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACA,KAAAP,IAAA,GAAAM,MAAA;MACA;MACA;MACAE,IAAA;IACA;IACAN,MAAA;MACAG,OAAA,WAAAA,CAAAC,MAAA,EAAAC,MAAA;QACAE,OAAA,CAAAC,GAAA,CAAAJ,MAAA;MACA;MACA;MACAE,IAAA;IACA;EACA;EACAG,QAAA;IACAC,wBAAA;MACA,YAAAZ,IAAA,CAAAa,MAAA,CAAAC,CAAA,UAAAb,aAAA,CAAAc,QAAA,CAAAD,CAAA;IACA;EACA;EACAE,QAAA;IACA,KAAAvB,OAAA,QAAAR,QAAA;IACA,KAAAe,IAAA,QAAAX,YAAA;EACA;EAEA4B,OAAA;IACA;AACA;AACA;IACAC,aAAAjB,aAAA;MACA,KAAAA,aAAA,GAAAA,aAAA;IACA;IACAkB,aAAA;MACA,KAAAzB,oBAAA;IACA;IACA0B,OAAAC,CAAA;MACAA,CAAA,CAAAC,cAAA;MACA,KAAAvB,OAAA,CAAAwB,cAAA,EAAAC,GAAA,EAAAC,MAAA;QACA,KAAAD,GAAA;UACAf,OAAA,CAAAC,GAAA,8BAAAe,MAAA;QACA;MACA;MACA,KAAA/B,oBAAA;IACA;IACAgC,gBAAA;MACA,KAAAC,KAAA,CAAA5B,OAAA,CAAA6B,WAAA;IACA;IAGAC,SAAAR,CAAA;MACA,KAAA7B,OAAA;MACA6B,CAAA,CAAAC,cAAA;MACA,KAAA1B,IAAA,CAAA2B,cAAA,EAAAC,GAAA,EAAAC,MAAA;QACA,KAAAD,GAAA;UACAf,OAAA,CAAAC,GAAA,8BAAAe,MAAA;QACA;UACA,KAAAjC,OAAA;QACA;MACA;MAEAsC,UAAA;QACA,KAAAC,KAAA;QACA,KAAAvC,OAAA;MACA;IACA;IACAwC,aAAAX,CAAA;MACA,KAAAU,KAAA;IACA;IACAE,WAAAZ,CAAA;MACA,KAAAU,KAAA;IACA;IACAG,aAAAC,IAAA;MACA,MAAAC,MAAA,GAAAD,IAAA,CAAAE,IAAA,CAAAD,MAAA;MACA,IAAAA,MAAA;QACA3B,OAAA,CAAAC,GAAA,CAAAyB,IAAA,CAAAE,IAAA,EAAAF,IAAA,CAAAG,QAAA;MACA;MACA,IAAAF,MAAA;QACA,KAAAG,QAAA,CAAAC,OAAA,IAAAL,IAAA,CAAAE,IAAA,CAAA7D,IAAA;MACA,WAAA4D,MAAA;QACA,KAAAG,QAAA,CAAAE,KAAA,IAAAN,IAAA,CAAAE,IAAA,CAAA7D,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}