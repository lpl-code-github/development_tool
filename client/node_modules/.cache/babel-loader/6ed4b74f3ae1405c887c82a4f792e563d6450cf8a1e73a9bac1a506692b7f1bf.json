{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { defineComponent, getCurrentInstance, onMounted, onUnmounted, onUpdated, reactive, watch } from 'vue';\nimport { findDOMNode } from '../_util/props-util';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ResizeObserver',\n  props: {\n    disabled: Boolean,\n    onResize: Function\n  },\n  emits: ['resize'],\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const state = reactive({\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    });\n    let currentElement = null;\n    let resizeObserver = null;\n    const destroyObserver = () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n        resizeObserver = null;\n      }\n    };\n    const onResize = entries => {\n      const {\n        onResize\n      } = props;\n      const target = entries[0].target;\n      const {\n        width,\n        height\n      } = target.getBoundingClientRect();\n      const {\n        offsetWidth,\n        offsetHeight\n      } = target;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n      const fixedWidth = Math.floor(width);\n      const fixedHeight = Math.floor(height);\n      if (state.width !== fixedWidth || state.height !== fixedHeight || state.offsetWidth !== offsetWidth || state.offsetHeight !== offsetHeight) {\n        const size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth,\n          offsetHeight\n        };\n        _extends(state, size);\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(() => {\n            onResize(_extends(_extends({}, size), {\n              offsetWidth,\n              offsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n    const instance = getCurrentInstance();\n    const registerObserver = () => {\n      const {\n        disabled\n      } = props;\n      // Unregister if disabled\n      if (disabled) {\n        destroyObserver();\n        return;\n      }\n      // Unregister if element changed\n      const element = findDOMNode(instance);\n      const elementChanged = element !== currentElement;\n      if (elementChanged) {\n        destroyObserver();\n        currentElement = element;\n      }\n      if (!resizeObserver && element) {\n        resizeObserver = new ResizeObserver(onResize);\n        resizeObserver.observe(element);\n      }\n    };\n    onMounted(() => {\n      registerObserver();\n    });\n    onUpdated(() => {\n      registerObserver();\n    });\n    onUnmounted(() => {\n      destroyObserver();\n    });\n    watch(() => props.disabled, () => {\n      registerObserver();\n    }, {\n      flush: 'post'\n    });\n    return () => {\n      var _a;\n      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)[0];\n    };\n  }\n});","map":{"version":3,"names":["_extends","ResizeObserver","defineComponent","getCurrentInstance","onMounted","onUnmounted","onUpdated","reactive","watch","findDOMNode","compatConfig","MODE","name","props","disabled","Boolean","onResize","Function","emits","setup","_ref","slots","state","width","height","offsetHeight","offsetWidth","currentElement","resizeObserver","destroyObserver","disconnect","entries","target","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","Promise","resolve","then","instance","registerObserver","element","elementChanged","observe","flush","_a","default","call"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-resize-observer/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { defineComponent, getCurrentInstance, onMounted, onUnmounted, onUpdated, reactive, watch } from 'vue';\nimport { findDOMNode } from '../_util/props-util';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ResizeObserver',\n  props: {\n    disabled: Boolean,\n    onResize: Function\n  },\n  emits: ['resize'],\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const state = reactive({\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    });\n    let currentElement = null;\n    let resizeObserver = null;\n    const destroyObserver = () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n        resizeObserver = null;\n      }\n    };\n    const onResize = entries => {\n      const {\n        onResize\n      } = props;\n      const target = entries[0].target;\n      const {\n        width,\n        height\n      } = target.getBoundingClientRect();\n      const {\n        offsetWidth,\n        offsetHeight\n      } = target;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n      const fixedWidth = Math.floor(width);\n      const fixedHeight = Math.floor(height);\n      if (state.width !== fixedWidth || state.height !== fixedHeight || state.offsetWidth !== offsetWidth || state.offsetHeight !== offsetHeight) {\n        const size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth,\n          offsetHeight\n        };\n        _extends(state, size);\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(() => {\n            onResize(_extends(_extends({}, size), {\n              offsetWidth,\n              offsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n    const instance = getCurrentInstance();\n    const registerObserver = () => {\n      const {\n        disabled\n      } = props;\n      // Unregister if disabled\n      if (disabled) {\n        destroyObserver();\n        return;\n      }\n      // Unregister if element changed\n      const element = findDOMNode(instance);\n      const elementChanged = element !== currentElement;\n      if (elementChanged) {\n        destroyObserver();\n        currentElement = element;\n      }\n      if (!resizeObserver && element) {\n        resizeObserver = new ResizeObserver(onResize);\n        resizeObserver.observe(element);\n      }\n    };\n    onMounted(() => {\n      registerObserver();\n    });\n    onUpdated(() => {\n      registerObserver();\n    });\n    onUnmounted(() => {\n      destroyObserver();\n    });\n    watch(() => props.disabled, () => {\n      registerObserver();\n    }, {\n      flush: 'post'\n    });\n    return () => {\n      var _a;\n      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)[0];\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}