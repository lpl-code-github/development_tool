{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport ExpandedRow from './ExpandedRow';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport MeasureCell from './MeasureCell';\nimport BodyRow from './BodyRow';\nimport useFlattenRecords from '../hooks/useFlattenRecords';\nimport { defineComponent, shallowRef, toRef } from 'vue';\nimport { useInjectResize } from '../context/ResizeContext';\nimport { useInjectTable } from '../context/TableContext';\nimport { useInjectBody } from '../context/BodyContext';\nimport { useProvideHover } from '../context/HoverContext';\nexport default defineComponent({\n  name: 'Body',\n  props: ['data', 'getRowKey', 'measureColumnWidth', 'expandedKeys', 'customRow', 'rowExpandable', 'childrenColumnName'],\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const resizeContext = useInjectResize();\n    const tableContext = useInjectTable();\n    const bodyContext = useInjectBody();\n    const flattenData = useFlattenRecords(toRef(props, 'data'), toRef(props, 'childrenColumnName'), toRef(props, 'expandedKeys'), toRef(props, 'getRowKey'));\n    const startRow = shallowRef(-1);\n    const endRow = shallowRef(-1);\n    let timeoutId;\n    useProvideHover({\n      startRow,\n      endRow,\n      onHover: (start, end) => {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => {\n          startRow.value = start;\n          endRow.value = end;\n        }, 100);\n      }\n    });\n    return () => {\n      var _a;\n      const {\n        data,\n        getRowKey,\n        measureColumnWidth,\n        expandedKeys,\n        customRow,\n        rowExpandable,\n        childrenColumnName\n      } = props;\n      const {\n        onColumnResize\n      } = resizeContext;\n      const {\n        prefixCls,\n        getComponent\n      } = tableContext;\n      const {\n        flattenColumns\n      } = bodyContext;\n      const WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n      const trComponent = getComponent(['body', 'row'], 'tr');\n      const tdComponent = getComponent(['body', 'cell'], 'td');\n      let rows;\n      if (data.length) {\n        rows = flattenData.value.map((item, idx) => {\n          const {\n            record,\n            indent,\n            index: renderIndex\n          } = item;\n          const key = getRowKey(record, idx);\n          return _createVNode(BodyRow, {\n            \"key\": key,\n            \"rowKey\": key,\n            \"record\": record,\n            \"recordKey\": key,\n            \"index\": idx,\n            \"renderIndex\": renderIndex,\n            \"rowComponent\": trComponent,\n            \"cellComponent\": tdComponent,\n            \"expandedKeys\": expandedKeys,\n            \"customRow\": customRow,\n            \"getRowKey\": getRowKey,\n            \"rowExpandable\": rowExpandable,\n            \"childrenColumnName\": childrenColumnName,\n            \"indent\": indent\n          }, null);\n        });\n      } else {\n        rows = _createVNode(ExpandedRow, {\n          \"expanded\": true,\n          \"class\": `${prefixCls}-placeholder`,\n          \"prefixCls\": prefixCls,\n          \"component\": trComponent,\n          \"cellComponent\": tdComponent,\n          \"colSpan\": flattenColumns.length,\n          \"isEmpty\": true\n        }, {\n          default: () => [(_a = slots.emptyNode) === null || _a === void 0 ? void 0 : _a.call(slots)]\n        });\n      }\n      const columnsKey = getColumnsKey(flattenColumns);\n      return _createVNode(WrapperComponent, {\n        \"class\": `${prefixCls}-tbody`\n      }, {\n        default: () => [measureColumnWidth && _createVNode(\"tr\", {\n          \"aria-hidden\": \"true\",\n          \"class\": `${prefixCls}-measure-row`,\n          \"style\": {\n            height: 0,\n            fontSize: 0\n          }\n        }, [columnsKey.map(columnKey => _createVNode(MeasureCell, {\n          \"key\": columnKey,\n          \"columnKey\": columnKey,\n          \"onColumnResize\": onColumnResize\n        }, null))]), rows]\n      });\n    };\n  }\n});","map":{"version":3,"names":["createVNode","_createVNode","ExpandedRow","getColumnsKey","MeasureCell","BodyRow","useFlattenRecords","defineComponent","shallowRef","toRef","useInjectResize","useInjectTable","useInjectBody","useProvideHover","name","props","setup","_ref","slots","resizeContext","tableContext","bodyContext","flattenData","startRow","endRow","timeoutId","onHover","start","end","clearTimeout","setTimeout","value","_a","data","getRowKey","measureColumnWidth","expandedKeys","customRow","rowExpandable","childrenColumnName","onColumnResize","prefixCls","getComponent","flattenColumns","WrapperComponent","trComponent","tdComponent","rows","length","map","item","idx","record","indent","index","renderIndex","key","default","emptyNode","call","columnsKey","height","fontSize","columnKey"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/vc-table/Body/index.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport ExpandedRow from './ExpandedRow';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport MeasureCell from './MeasureCell';\nimport BodyRow from './BodyRow';\nimport useFlattenRecords from '../hooks/useFlattenRecords';\nimport { defineComponent, shallowRef, toRef } from 'vue';\nimport { useInjectResize } from '../context/ResizeContext';\nimport { useInjectTable } from '../context/TableContext';\nimport { useInjectBody } from '../context/BodyContext';\nimport { useProvideHover } from '../context/HoverContext';\nexport default defineComponent({\n  name: 'Body',\n  props: ['data', 'getRowKey', 'measureColumnWidth', 'expandedKeys', 'customRow', 'rowExpandable', 'childrenColumnName'],\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const resizeContext = useInjectResize();\n    const tableContext = useInjectTable();\n    const bodyContext = useInjectBody();\n    const flattenData = useFlattenRecords(toRef(props, 'data'), toRef(props, 'childrenColumnName'), toRef(props, 'expandedKeys'), toRef(props, 'getRowKey'));\n    const startRow = shallowRef(-1);\n    const endRow = shallowRef(-1);\n    let timeoutId;\n    useProvideHover({\n      startRow,\n      endRow,\n      onHover: (start, end) => {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => {\n          startRow.value = start;\n          endRow.value = end;\n        }, 100);\n      }\n    });\n    return () => {\n      var _a;\n      const {\n        data,\n        getRowKey,\n        measureColumnWidth,\n        expandedKeys,\n        customRow,\n        rowExpandable,\n        childrenColumnName\n      } = props;\n      const {\n        onColumnResize\n      } = resizeContext;\n      const {\n        prefixCls,\n        getComponent\n      } = tableContext;\n      const {\n        flattenColumns\n      } = bodyContext;\n      const WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n      const trComponent = getComponent(['body', 'row'], 'tr');\n      const tdComponent = getComponent(['body', 'cell'], 'td');\n      let rows;\n      if (data.length) {\n        rows = flattenData.value.map((item, idx) => {\n          const {\n            record,\n            indent,\n            index: renderIndex\n          } = item;\n          const key = getRowKey(record, idx);\n          return _createVNode(BodyRow, {\n            \"key\": key,\n            \"rowKey\": key,\n            \"record\": record,\n            \"recordKey\": key,\n            \"index\": idx,\n            \"renderIndex\": renderIndex,\n            \"rowComponent\": trComponent,\n            \"cellComponent\": tdComponent,\n            \"expandedKeys\": expandedKeys,\n            \"customRow\": customRow,\n            \"getRowKey\": getRowKey,\n            \"rowExpandable\": rowExpandable,\n            \"childrenColumnName\": childrenColumnName,\n            \"indent\": indent\n          }, null);\n        });\n      } else {\n        rows = _createVNode(ExpandedRow, {\n          \"expanded\": true,\n          \"class\": `${prefixCls}-placeholder`,\n          \"prefixCls\": prefixCls,\n          \"component\": trComponent,\n          \"cellComponent\": tdComponent,\n          \"colSpan\": flattenColumns.length,\n          \"isEmpty\": true\n        }, {\n          default: () => [(_a = slots.emptyNode) === null || _a === void 0 ? void 0 : _a.call(slots)]\n        });\n      }\n      const columnsKey = getColumnsKey(flattenColumns);\n      return _createVNode(WrapperComponent, {\n        \"class\": `${prefixCls}-tbody`\n      }, {\n        default: () => [measureColumnWidth && _createVNode(\"tr\", {\n          \"aria-hidden\": \"true\",\n          \"class\": `${prefixCls}-measure-row`,\n          \"style\": {\n            height: 0,\n            fontSize: 0\n          }\n        }, [columnsKey.map(columnKey => _createVNode(MeasureCell, {\n          \"key\": columnKey,\n          \"columnKey\": columnKey,\n          \"onColumnResize\": onColumnResize\n        }, null))]), rows]\n      });\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}