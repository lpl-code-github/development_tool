{"ast":null,"code":"import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport omit from 'omit.js';\nimport VcMenu, { Divider, ItemGroup } from '../vc-menu';\nimport SubMenu from './SubMenu';\nimport PropTypes from '../_util/vue-types';\nimport animation from '../_util/openAnimation';\nimport warning from '../_util/warning';\nimport Item from './MenuItem';\nimport { hasProp, getListeners, getOptionProps } from '../_util/props-util';\nimport BaseMixin from '../_util/BaseMixin';\nimport commonPropsType from '../vc-menu/commonPropsType';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport Base from '../base';\n// import raf from '../_util/raf';\n\nexport var MenuMode = PropTypes.oneOf(['vertical', 'vertical-left', 'vertical-right', 'horizontal', 'inline']);\nexport var menuProps = _extends({}, commonPropsType, {\n  theme: PropTypes.oneOf(['light', 'dark']).def('light'),\n  mode: MenuMode.def('vertical'),\n  selectable: PropTypes.bool,\n  selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  defaultSelectedKeys: PropTypes.array,\n  openKeys: PropTypes.array,\n  defaultOpenKeys: PropTypes.array,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  openTransitionName: PropTypes.string,\n  prefixCls: PropTypes.string,\n  multiple: PropTypes.bool,\n  inlineIndent: PropTypes.number.def(24),\n  inlineCollapsed: PropTypes.bool,\n  isRootMenu: PropTypes.bool.def(true),\n  focusable: PropTypes.bool.def(false)\n});\nvar Menu = {\n  name: 'AMenu',\n  props: menuProps,\n  Divider: _extends({}, Divider, {\n    name: 'AMenuDivider'\n  }),\n  Item: _extends({}, Item, {\n    name: 'AMenuItem'\n  }),\n  SubMenu: _extends({}, SubMenu, {\n    name: 'ASubMenu'\n  }),\n  ItemGroup: _extends({}, ItemGroup, {\n    name: 'AMenuItemGroup'\n  }),\n  provide: function provide() {\n    return {\n      getInlineCollapsed: this.getInlineCollapsed,\n      menuPropsContext: this.$props\n    };\n  },\n  mixins: [BaseMixin],\n  inject: {\n    layoutSiderContext: {\n      'default': function _default() {\n        return {};\n      }\n    },\n    configProvider: {\n      'default': function _default() {\n        return ConfigConsumerProps;\n      }\n    }\n  },\n  model: {\n    prop: 'selectedKeys',\n    event: 'selectChange'\n  },\n  updated: function updated() {\n    this.propsUpdating = false;\n  },\n  // beforeDestroy() {\n  //   raf.cancel(this.mountRafId);\n  // },\n  watch: {\n    mode: function mode(val, oldVal) {\n      if (oldVal === 'inline' && val !== 'inline') {\n        this.switchingModeFromInline = true;\n      }\n    },\n    openKeys: function openKeys(val) {\n      this.setState({\n        sOpenKeys: val\n      });\n    },\n    inlineCollapsed: function inlineCollapsed(val) {\n      this.collapsedChange(val);\n    },\n    'layoutSiderContext.sCollapsed': function layoutSiderContextSCollapsed(val) {\n      this.collapsedChange(val);\n    }\n  },\n  data: function data() {\n    var props = getOptionProps(this);\n    warning(!('inlineCollapsed' in props && props.mode !== 'inline'), 'Menu', \"`inlineCollapsed` should only be used when Menu's `mode` is inline.\");\n    this.switchingModeFromInline = false;\n    this.leaveAnimationExecutedWhenInlineCollapsed = false;\n    this.inlineOpenKeys = [];\n    var sOpenKeys = void 0;\n    if ('openKeys' in props) {\n      sOpenKeys = props.openKeys;\n    } else if ('defaultOpenKeys' in props) {\n      sOpenKeys = props.defaultOpenKeys;\n    }\n    return {\n      sOpenKeys: sOpenKeys\n    };\n  },\n  methods: {\n    collapsedChange: function collapsedChange(val) {\n      if (this.propsUpdating) {\n        return;\n      }\n      this.propsUpdating = true;\n      if (!hasProp(this, 'openKeys')) {\n        if (val) {\n          this.switchingModeFromInline = true;\n          this.inlineOpenKeys = this.sOpenKeys;\n          this.setState({\n            sOpenKeys: []\n          });\n        } else {\n          this.setState({\n            sOpenKeys: this.inlineOpenKeys\n          });\n          this.inlineOpenKeys = [];\n        }\n      } else if (val) {\n        // 缩起时，openKeys置为空的动画会闪动，react可以通过是否传递openKeys避免闪动，vue不是很方便动态传递openKeys\n        this.switchingModeFromInline = true;\n      }\n    },\n    restoreModeVerticalFromInline: function restoreModeVerticalFromInline() {\n      if (this.switchingModeFromInline) {\n        this.switchingModeFromInline = false;\n        this.$forceUpdate();\n      }\n    },\n    // Restore vertical mode when menu is collapsed responsively when mounted\n    // https://github.com/ant-design/ant-design/issues/13104\n    // TODO: not a perfect solution, looking a new way to avoid setting switchingModeFromInline in this situation\n    handleMouseEnter: function handleMouseEnter(e) {\n      this.restoreModeVerticalFromInline();\n      this.$emit('mouseenter', e);\n    },\n    handleTransitionEnd: function handleTransitionEnd(e) {\n      // when inlineCollapsed menu width animation finished\n      // https://github.com/ant-design/ant-design/issues/12864\n      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget;\n\n      // Fix SVGElement e.target.className.indexOf is not a function\n      // https://github.com/ant-design/ant-design/issues/15699\n      var className = e.target.className;\n      // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during an animation.\n\n      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className;\n\n      // Fix for <Menu style={{ width: '100%' }} />, the width transition won't trigger when menu is collapsed\n      // https://github.com/ant-design/ant-design-pro/issues/2783\n      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n      if (widthCollapsed || iconScaled) {\n        this.restoreModeVerticalFromInline();\n      }\n    },\n    handleClick: function handleClick(e) {\n      this.handleOpenChange([]);\n      this.$emit('click', e);\n    },\n    handleSelect: function handleSelect(info) {\n      this.$emit('select', info);\n      this.$emit('selectChange', info.selectedKeys);\n    },\n    handleDeselect: function handleDeselect(info) {\n      this.$emit('deselect', info);\n      this.$emit('selectChange', info.selectedKeys);\n    },\n    handleOpenChange: function handleOpenChange(openKeys) {\n      this.setOpenKeys(openKeys);\n      this.$emit('openChange', openKeys);\n      this.$emit('update:openKeys', openKeys);\n    },\n    setOpenKeys: function setOpenKeys(openKeys) {\n      if (!hasProp(this, 'openKeys')) {\n        this.setState({\n          sOpenKeys: openKeys\n        });\n      }\n    },\n    getRealMenuMode: function getRealMenuMode() {\n      var inlineCollapsed = this.getInlineCollapsed();\n      if (this.switchingModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n      var mode = this.$props.mode;\n      return inlineCollapsed ? 'vertical' : mode;\n    },\n    getInlineCollapsed: function getInlineCollapsed() {\n      var inlineCollapsed = this.$props.inlineCollapsed;\n      if (this.layoutSiderContext.sCollapsed !== undefined) {\n        return this.layoutSiderContext.sCollapsed;\n      }\n      return inlineCollapsed;\n    },\n    getMenuOpenAnimation: function getMenuOpenAnimation(menuMode) {\n      var _$props = this.$props,\n        openAnimation = _$props.openAnimation,\n        openTransitionName = _$props.openTransitionName;\n      var menuOpenAnimation = openAnimation || openTransitionName;\n      if (openAnimation === undefined && openTransitionName === undefined) {\n        if (menuMode === 'horizontal') {\n          menuOpenAnimation = 'slide-up';\n        } else if (menuMode === 'inline') {\n          menuOpenAnimation = {\n            on: animation\n          };\n        } else {\n          // When mode switch from inline\n          // submenu should hide without animation\n          if (this.switchingModeFromInline) {\n            menuOpenAnimation = '';\n            this.switchingModeFromInline = false;\n          } else {\n            menuOpenAnimation = 'zoom-big';\n          }\n        }\n      }\n      return menuOpenAnimation;\n    }\n  },\n  render: function render() {\n    var _menuClassName,\n      _this = this;\n    var h = arguments[0];\n    var layoutSiderContext = this.layoutSiderContext,\n      $slots = this.$slots;\n    var collapsedWidth = layoutSiderContext.collapsedWidth;\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n    var props = getOptionProps(this);\n    var customizePrefixCls = props.prefixCls,\n      theme = props.theme,\n      getPopupContainer = props.getPopupContainer;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('menu', customizePrefixCls);\n    var menuMode = this.getRealMenuMode();\n    var menuOpenAnimation = this.getMenuOpenAnimation(menuMode);\n    var menuClassName = (_menuClassName = {}, _defineProperty(_menuClassName, prefixCls + '-' + theme, true), _defineProperty(_menuClassName, prefixCls + '-inline-collapsed', this.getInlineCollapsed()), _menuClassName);\n    var menuProps = {\n      props: _extends({}, omit(props, ['inlineCollapsed']), {\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        openKeys: this.sOpenKeys,\n        mode: menuMode,\n        prefixCls: prefixCls\n      }),\n      on: _extends({}, getListeners(this), {\n        select: this.handleSelect,\n        deselect: this.handleDeselect,\n        openChange: this.handleOpenChange,\n        mouseenter: this.handleMouseEnter\n      }),\n      nativeOn: {\n        transitionend: this.handleTransitionEnd\n      }\n    };\n    if (!hasProp(this, 'selectedKeys')) {\n      delete menuProps.props.selectedKeys;\n    }\n    if (menuMode !== 'inline') {\n      // closing vertical popup submenu after click it\n      menuProps.on.click = this.handleClick;\n      menuProps.props.openTransitionName = menuOpenAnimation;\n    } else {\n      menuProps.on.click = function (e) {\n        _this.$emit('click', e);\n      };\n      menuProps.props.openAnimation = menuOpenAnimation;\n    }\n\n    // https://github.com/ant-design/ant-design/issues/8587\n    var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');\n    if (hideMenu) {\n      menuProps.props.openKeys = [];\n    }\n    return h(VcMenu, _mergeJSXProps([menuProps, {\n      'class': menuClassName\n    }]), [$slots['default']]);\n  }\n};\n\n/* istanbul ignore next */\nMenu.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(Menu.name, Menu);\n  Vue.component(Menu.Item.name, Menu.Item);\n  Vue.component(Menu.SubMenu.name, Menu.SubMenu);\n  Vue.component(Menu.Divider.name, Menu.Divider);\n  Vue.component(Menu.ItemGroup.name, Menu.ItemGroup);\n};\nexport default Menu;","map":{"version":3,"names":["_mergeJSXProps","_defineProperty","_extends","omit","VcMenu","Divider","ItemGroup","SubMenu","PropTypes","animation","warning","Item","hasProp","getListeners","getOptionProps","BaseMixin","commonPropsType","ConfigConsumerProps","Base","MenuMode","oneOf","menuProps","theme","def","mode","selectable","bool","selectedKeys","arrayOf","oneOfType","string","number","defaultSelectedKeys","array","openKeys","defaultOpenKeys","openAnimation","object","openTransitionName","prefixCls","multiple","inlineIndent","inlineCollapsed","isRootMenu","focusable","Menu","name","props","provide","getInlineCollapsed","menuPropsContext","$props","mixins","inject","layoutSiderContext","_default","configProvider","model","prop","event","updated","propsUpdating","watch","val","oldVal","switchingModeFromInline","setState","sOpenKeys","collapsedChange","layoutSiderContextSCollapsed","data","leaveAnimationExecutedWhenInlineCollapsed","inlineOpenKeys","methods","restoreModeVerticalFromInline","$forceUpdate","handleMouseEnter","e","$emit","handleTransitionEnd","widthCollapsed","propertyName","target","currentTarget","className","classNameValue","Object","prototype","toString","call","animVal","iconScaled","indexOf","handleClick","handleOpenChange","handleSelect","info","handleDeselect","setOpenKeys","getRealMenuMode","sCollapsed","undefined","getMenuOpenAnimation","menuMode","_$props","menuOpenAnimation","on","render","_menuClassName","_this","h","arguments","$slots","collapsedWidth","getContextPopupContainer","getPopupContainer","customizePrefixCls","getPrefixCls","menuClassName","select","deselect","openChange","mouseenter","nativeOn","transitionend","click","hideMenu","install","Vue","use","component"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/client/node_modules/ant-design-vue/es/menu/index.js"],"sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport omit from 'omit.js';\nimport VcMenu, { Divider, ItemGroup } from '../vc-menu';\nimport SubMenu from './SubMenu';\nimport PropTypes from '../_util/vue-types';\nimport animation from '../_util/openAnimation';\nimport warning from '../_util/warning';\nimport Item from './MenuItem';\nimport { hasProp, getListeners, getOptionProps } from '../_util/props-util';\nimport BaseMixin from '../_util/BaseMixin';\nimport commonPropsType from '../vc-menu/commonPropsType';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport Base from '../base';\n// import raf from '../_util/raf';\n\nexport var MenuMode = PropTypes.oneOf(['vertical', 'vertical-left', 'vertical-right', 'horizontal', 'inline']);\n\nexport var menuProps = _extends({}, commonPropsType, {\n  theme: PropTypes.oneOf(['light', 'dark']).def('light'),\n  mode: MenuMode.def('vertical'),\n  selectable: PropTypes.bool,\n  selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  defaultSelectedKeys: PropTypes.array,\n  openKeys: PropTypes.array,\n  defaultOpenKeys: PropTypes.array,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  openTransitionName: PropTypes.string,\n  prefixCls: PropTypes.string,\n  multiple: PropTypes.bool,\n  inlineIndent: PropTypes.number.def(24),\n  inlineCollapsed: PropTypes.bool,\n  isRootMenu: PropTypes.bool.def(true),\n  focusable: PropTypes.bool.def(false)\n});\n\nvar Menu = {\n  name: 'AMenu',\n  props: menuProps,\n  Divider: _extends({}, Divider, { name: 'AMenuDivider' }),\n  Item: _extends({}, Item, { name: 'AMenuItem' }),\n  SubMenu: _extends({}, SubMenu, { name: 'ASubMenu' }),\n  ItemGroup: _extends({}, ItemGroup, { name: 'AMenuItemGroup' }),\n  provide: function provide() {\n    return {\n      getInlineCollapsed: this.getInlineCollapsed,\n      menuPropsContext: this.$props\n    };\n  },\n\n  mixins: [BaseMixin],\n  inject: {\n    layoutSiderContext: { 'default': function _default() {\n        return {};\n      } },\n    configProvider: { 'default': function _default() {\n        return ConfigConsumerProps;\n      } }\n  },\n  model: {\n    prop: 'selectedKeys',\n    event: 'selectChange'\n  },\n  updated: function updated() {\n    this.propsUpdating = false;\n  },\n\n  // beforeDestroy() {\n  //   raf.cancel(this.mountRafId);\n  // },\n  watch: {\n    mode: function mode(val, oldVal) {\n      if (oldVal === 'inline' && val !== 'inline') {\n        this.switchingModeFromInline = true;\n      }\n    },\n    openKeys: function openKeys(val) {\n      this.setState({ sOpenKeys: val });\n    },\n    inlineCollapsed: function inlineCollapsed(val) {\n      this.collapsedChange(val);\n    },\n    'layoutSiderContext.sCollapsed': function layoutSiderContextSCollapsed(val) {\n      this.collapsedChange(val);\n    }\n  },\n  data: function data() {\n    var props = getOptionProps(this);\n    warning(!('inlineCollapsed' in props && props.mode !== 'inline'), 'Menu', \"`inlineCollapsed` should only be used when Menu's `mode` is inline.\");\n    this.switchingModeFromInline = false;\n    this.leaveAnimationExecutedWhenInlineCollapsed = false;\n    this.inlineOpenKeys = [];\n    var sOpenKeys = void 0;\n\n    if ('openKeys' in props) {\n      sOpenKeys = props.openKeys;\n    } else if ('defaultOpenKeys' in props) {\n      sOpenKeys = props.defaultOpenKeys;\n    }\n    return {\n      sOpenKeys: sOpenKeys\n    };\n  },\n\n  methods: {\n    collapsedChange: function collapsedChange(val) {\n      if (this.propsUpdating) {\n        return;\n      }\n      this.propsUpdating = true;\n      if (!hasProp(this, 'openKeys')) {\n        if (val) {\n          this.switchingModeFromInline = true;\n          this.inlineOpenKeys = this.sOpenKeys;\n          this.setState({ sOpenKeys: [] });\n        } else {\n          this.setState({ sOpenKeys: this.inlineOpenKeys });\n          this.inlineOpenKeys = [];\n        }\n      } else if (val) {\n        // 缩起时，openKeys置为空的动画会闪动，react可以通过是否传递openKeys避免闪动，vue不是很方便动态传递openKeys\n        this.switchingModeFromInline = true;\n      }\n    },\n    restoreModeVerticalFromInline: function restoreModeVerticalFromInline() {\n      if (this.switchingModeFromInline) {\n        this.switchingModeFromInline = false;\n        this.$forceUpdate();\n      }\n    },\n\n    // Restore vertical mode when menu is collapsed responsively when mounted\n    // https://github.com/ant-design/ant-design/issues/13104\n    // TODO: not a perfect solution, looking a new way to avoid setting switchingModeFromInline in this situation\n    handleMouseEnter: function handleMouseEnter(e) {\n      this.restoreModeVerticalFromInline();\n      this.$emit('mouseenter', e);\n    },\n    handleTransitionEnd: function handleTransitionEnd(e) {\n      // when inlineCollapsed menu width animation finished\n      // https://github.com/ant-design/ant-design/issues/12864\n      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget;\n\n      // Fix SVGElement e.target.className.indexOf is not a function\n      // https://github.com/ant-design/ant-design/issues/15699\n      var className = e.target.className;\n      // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during an animation.\n\n      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className;\n\n      // Fix for <Menu style={{ width: '100%' }} />, the width transition won't trigger when menu is collapsed\n      // https://github.com/ant-design/ant-design-pro/issues/2783\n      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n\n      if (widthCollapsed || iconScaled) {\n        this.restoreModeVerticalFromInline();\n      }\n    },\n    handleClick: function handleClick(e) {\n      this.handleOpenChange([]);\n      this.$emit('click', e);\n    },\n    handleSelect: function handleSelect(info) {\n      this.$emit('select', info);\n      this.$emit('selectChange', info.selectedKeys);\n    },\n    handleDeselect: function handleDeselect(info) {\n      this.$emit('deselect', info);\n      this.$emit('selectChange', info.selectedKeys);\n    },\n    handleOpenChange: function handleOpenChange(openKeys) {\n      this.setOpenKeys(openKeys);\n      this.$emit('openChange', openKeys);\n      this.$emit('update:openKeys', openKeys);\n    },\n    setOpenKeys: function setOpenKeys(openKeys) {\n      if (!hasProp(this, 'openKeys')) {\n        this.setState({ sOpenKeys: openKeys });\n      }\n    },\n    getRealMenuMode: function getRealMenuMode() {\n      var inlineCollapsed = this.getInlineCollapsed();\n      if (this.switchingModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n      var mode = this.$props.mode;\n\n      return inlineCollapsed ? 'vertical' : mode;\n    },\n    getInlineCollapsed: function getInlineCollapsed() {\n      var inlineCollapsed = this.$props.inlineCollapsed;\n\n      if (this.layoutSiderContext.sCollapsed !== undefined) {\n        return this.layoutSiderContext.sCollapsed;\n      }\n      return inlineCollapsed;\n    },\n    getMenuOpenAnimation: function getMenuOpenAnimation(menuMode) {\n      var _$props = this.$props,\n          openAnimation = _$props.openAnimation,\n          openTransitionName = _$props.openTransitionName;\n\n      var menuOpenAnimation = openAnimation || openTransitionName;\n      if (openAnimation === undefined && openTransitionName === undefined) {\n        if (menuMode === 'horizontal') {\n          menuOpenAnimation = 'slide-up';\n        } else if (menuMode === 'inline') {\n          menuOpenAnimation = { on: animation };\n        } else {\n          // When mode switch from inline\n          // submenu should hide without animation\n          if (this.switchingModeFromInline) {\n            menuOpenAnimation = '';\n            this.switchingModeFromInline = false;\n          } else {\n            menuOpenAnimation = 'zoom-big';\n          }\n        }\n      }\n      return menuOpenAnimation;\n    }\n  },\n  render: function render() {\n    var _menuClassName,\n        _this = this;\n\n    var h = arguments[0];\n    var layoutSiderContext = this.layoutSiderContext,\n        $slots = this.$slots;\n    var collapsedWidth = layoutSiderContext.collapsedWidth;\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n\n    var props = getOptionProps(this);\n    var customizePrefixCls = props.prefixCls,\n        theme = props.theme,\n        getPopupContainer = props.getPopupContainer;\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('menu', customizePrefixCls);\n    var menuMode = this.getRealMenuMode();\n    var menuOpenAnimation = this.getMenuOpenAnimation(menuMode);\n\n    var menuClassName = (_menuClassName = {}, _defineProperty(_menuClassName, prefixCls + '-' + theme, true), _defineProperty(_menuClassName, prefixCls + '-inline-collapsed', this.getInlineCollapsed()), _menuClassName);\n\n    var menuProps = {\n      props: _extends({}, omit(props, ['inlineCollapsed']), {\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        openKeys: this.sOpenKeys,\n        mode: menuMode,\n        prefixCls: prefixCls\n      }),\n      on: _extends({}, getListeners(this), {\n        select: this.handleSelect,\n        deselect: this.handleDeselect,\n        openChange: this.handleOpenChange,\n        mouseenter: this.handleMouseEnter\n      }),\n      nativeOn: {\n        transitionend: this.handleTransitionEnd\n      }\n    };\n    if (!hasProp(this, 'selectedKeys')) {\n      delete menuProps.props.selectedKeys;\n    }\n\n    if (menuMode !== 'inline') {\n      // closing vertical popup submenu after click it\n      menuProps.on.click = this.handleClick;\n      menuProps.props.openTransitionName = menuOpenAnimation;\n    } else {\n      menuProps.on.click = function (e) {\n        _this.$emit('click', e);\n      };\n      menuProps.props.openAnimation = menuOpenAnimation;\n    }\n\n    // https://github.com/ant-design/ant-design/issues/8587\n    var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');\n    if (hideMenu) {\n      menuProps.props.openKeys = [];\n    }\n\n    return h(\n      VcMenu,\n      _mergeJSXProps([menuProps, { 'class': menuClassName }]),\n      [$slots['default']]\n    );\n  }\n};\n\n/* istanbul ignore next */\nMenu.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(Menu.name, Menu);\n  Vue.component(Menu.Item.name, Menu.Item);\n  Vue.component(Menu.SubMenu.name, Menu.SubMenu);\n  Vue.component(Menu.Divider.name, Menu.Divider);\n  Vue.component(Menu.ItemGroup.name, Menu.ItemGroup);\n};\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}