{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar Record;\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\nfunction traverseNodesKey(treeData, fieldNames, callback) {\n  function processNode(dataNode) {\n    const key = dataNode[fieldNames.key];\n    const children = dataNode[fieldNames.children];\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], fieldNames, callback);\n    }\n  }\n  treeData.forEach(processNode);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nexport function calcRangeKeys(_ref) {\n  let {\n    treeData,\n    expandedKeys,\n    startKey,\n    endKey,\n    fieldNames = {\n      title: 'title',\n      key: 'key',\n      children: 'children'\n    }\n  } = _ref;\n  const keys = [];\n  let record = Record.None;\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n  traverseNodesKey(treeData, fieldNames, key => {\n    if (record === Record.End) {\n      return false;\n    }\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n    return expandedKeys.includes(key);\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(treeData, keys, fieldNames) {\n  const restKeys = [...keys];\n  const nodes = [];\n  traverseNodesKey(treeData, fieldNames, (key, node) => {\n    const index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n    return !!restKeys.length;\n  });\n  return nodes;\n}","map":{"version":3,"names":["Record","traverseNodesKey","treeData","fieldNames","callback","processNode","dataNode","key","children","forEach","calcRangeKeys","_ref","expandedKeys","startKey","endKey","title","keys","record","None","matchKey","End","push","Start","includes","convertDirectoryKeysToNodes","restKeys","nodes","node","index","indexOf","splice","length"],"sources":["/Users/lpl/工作/Teamsupport/develop_help/node_modules/ant-design-vue/es/tree/utils/dictUtil.js"],"sourcesContent":["var Record;\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\nfunction traverseNodesKey(treeData, fieldNames, callback) {\n  function processNode(dataNode) {\n    const key = dataNode[fieldNames.key];\n    const children = dataNode[fieldNames.children];\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], fieldNames, callback);\n    }\n  }\n  treeData.forEach(processNode);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nexport function calcRangeKeys(_ref) {\n  let {\n    treeData,\n    expandedKeys,\n    startKey,\n    endKey,\n    fieldNames = {\n      title: 'title',\n      key: 'key',\n      children: 'children'\n    }\n  } = _ref;\n  const keys = [];\n  let record = Record.None;\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n  traverseNodesKey(treeData, fieldNames, key => {\n    if (record === Record.End) {\n      return false;\n    }\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n    return expandedKeys.includes(key);\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(treeData, keys, fieldNames) {\n  const restKeys = [...keys];\n  const nodes = [];\n  traverseNodesKey(treeData, fieldNames, (key, node) => {\n    const index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n    return !!restKeys.length;\n  });\n  return nodes;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}