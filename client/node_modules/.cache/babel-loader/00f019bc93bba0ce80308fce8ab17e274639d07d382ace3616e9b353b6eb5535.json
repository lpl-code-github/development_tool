{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"RunNewman\",\n  props: {\n    openFlag: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      formLayout: 'horizontal',\n      form: {\n        name: '',\n        description: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入操作名称',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 50,\n          message: '长度必须在 5 ～ 50',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    openFlag: {\n      handler: function (newVal, oldVal) {\n        // 父组件给的openFlag值发变化 拷贝一份\n        this.visible = newVal;\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted() {\n    this.visible = this.openFlag;\n  },\n  methods: {\n    /*\n      modal按钮事件\n     */\n    handleOk(e) {\n      const h = this.$createElement;\n      this.loading = true;\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          this.$confirm({\n            title: '在创建测试任务前需要和您确认',\n            content: h => h(\"div\", {\n              \"style\": \"color:red;\"\n            }, [\"\\u60A8\\u5F53\\u524D\\u6570\\u636E\\u5E93\\u662F\\u5426\\u7B26\\u5408\\u6D4B\\u8BD5\\u73AF\\u5883?\"]),\n            okText: '是的，创建任务',\n            cancelText: '去导入数据库',\n            onOk: () => {\n              var param = {\n                data: this.form\n              };\n              this.$request.postNewmanTasks(param).then(res => {\n                if (res.status === 200) {\n                  this.$emit('newmanTask', res.data.data);\n                  this.$message.success(\"创建测试任务成功，请到任务详情查看\");\n                } else {\n                  this.$message.error(\"创建测试失败\");\n                }\n              });\n              setTimeout(() => {\n                // 向父组件发送updateModelStatus事件，表示modal关闭\n                this.$emit('updateModelStatus', false);\n                this.loading = false;\n                this.initFormData();\n              }, 2);\n            },\n            onCancel: () => {\n              this.$router.push(\"/backup\");\n            }\n          });\n        } else {\n          this.loading = false;\n          return false;\n        }\n      });\n    },\n    handleCancel(e) {\n      // 向父组件发送updateModelStatus事件，表示modal关闭\n      this.$emit('updateModelStatus', false);\n    },\n    afterClose(e) {\n      // 向父组件发送updateModelStatus事件，表示modal关闭\n      this.$emit('updateModelStatus', false);\n    },\n    // 重置表单\n    initFormData() {\n      this.$refs.ruleForm.resetFields();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}